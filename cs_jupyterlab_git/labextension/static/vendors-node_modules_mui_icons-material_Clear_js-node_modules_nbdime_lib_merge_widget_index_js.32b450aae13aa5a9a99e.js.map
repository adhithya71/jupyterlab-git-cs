{"version":3,"file":"vendors-node_modules_mui_icons-material_Clear_js-node_modules_nbdime_lib_merge_widget_index_js.32b450aae13aa5a9a99e.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;;ACLvF;AACb;;AAEA,6BAA6B,mBAAO,CAAC,oHAA8C;AACnF,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;AACf,4CAA4C,mBAAO,CAAC,wFAAuB;AAC3E,kBAAkB,mBAAO,CAAC,8DAAmB;AAC7C;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;ACbF;AACb;;AAEA,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,2CAA0C;AAC1C;AACA;AACA;AACA;AACA,CAAC,EAAC;AACF,aAAa,mBAAO,CAAC,wEAAqB;;;;;;;;;;ACZ1C,gDAAgD,mBAAO,CAAC,gDAAS;;AAEjE;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA,6BAA6B;AAC7B,6BAA6B;AAC7B;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA,KAAK,IAAI,SAAS;AAClB;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnFA,6FAAsC;AACtC,yGAA8C;;;;;;;;;;;ACD9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,sBAAsB;AACtB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA,qBAAqB;AACrB,mBAAmB;AACnB;AACA,yBAAyB;AACzB,uBAAuB;AACvB,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE,WAAW;AAClB;;;;;;;;;;;AChRA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC,cAAc,wDAAwD;AACtE,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;;;;;;;;;;;;;;;;;;;ACpJ6B;AAE4C;AAEZ;AAQ7D,SAAS,QAAQ,CAAC,KAAqB;IACrC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE;QACnB,IAAI,wDAAU,CAAC,CAAC,CAAC,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,oBAAoB,CAAC,KAAwB;IACpD,IAAI,UAAU,GAAa,EAAE,CAAC;IAC9B,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE;QACnB,IAAI,CAAC,GAAG,CAAC,CAAC,GAA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","sources":["webpack://@cs-jupyterlab/git/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://@cs-jupyterlab/git/./node_modules/@mui/icons-material/Clear.js","webpack://@cs-jupyterlab/git/./node_modules/@mui/icons-material/utils/createSvgIcon.js","webpack://@cs-jupyterlab/git/./node_modules/json-stable-stringify/index.js","webpack://@cs-jupyterlab/git/./node_modules/jsonify/index.js","webpack://@cs-jupyterlab/git/./node_modules/jsonify/lib/parse.js","webpack://@cs-jupyterlab/git/./node_modules/jsonify/lib/stringify.js","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/chunking/decisionchunking.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/chunking/diffchunking.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/chunking/index.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/common/basepanel.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/common/collapsiblepanel.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/common/dragpanel.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/common/editor.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/common/exceptions.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/common/mergeview.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/common/util.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/diffentries.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/model/cell.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/model/common.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/model/immutable.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/model/index.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/model/notebook.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/model/output.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/model/renderable.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/model/string.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/range.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/util.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/widget/cell.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/widget/common.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/widget/index.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/widget/metadata.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/widget/notebook.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/widget/output.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/diff/widget/renderable.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/decisions.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/model/cell.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/model/common.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/model/index.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/model/metadata.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/model/notebook.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/widget/cell.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/widget/common.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/widget/dragdrop.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/widget/index.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/widget/metadata.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/widget/notebook.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/merge/widget/output.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/patch/common.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/patch/generic.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/patch/index.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/patch/stringified.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/upstreaming/flexlayout.ts","webpack://@cs-jupyterlab/git/./node_modules/nbdime/src/upstreaming/flexpanel.ts"],"sourcesContent":["function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexports.default = _default;","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\nvar _utils = require(\"@mui/material/utils\");","var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n","exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n","var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n","import {\n  IDiffEntry,\n  DiffCollection,\n  IDiffArrayEntry,\n  opRemoveRange,\n} from '../diff/diffentries';\n\nimport { MergeDecision, buildDiffs, pushPath } from '../merge/decisions';\n\nimport { hasEntries, valueIn, unique } from '../common/util';\n\nexport type MergeChunk = {\n  baseStart: number;\n  baseEnd: number;\n  diffs: DiffCollection;\n};\n\nfunction anyDiffs(diffs: DiffCollection): boolean {\n  for (let d of diffs) {\n    if (hasEntries(d)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getSectionBoundaries(diffs: IDiffArrayEntry[]) {\n  let boundaries: number[] = [];\n  for (let e of diffs) {\n    let j = e.key;\n    let k: number;\n    boundaries.push(j);\n    if (e.op === 'addrange') {\n      // Pass\n    } else if (e.op === 'removerange') {\n      k = j + e.length;\n      boundaries.push(k);\n    } else if (e.op === 'patch') {\n      k = j + 1;\n      boundaries.push(k);\n    }\n  }\n  return boundaries.filter(unique);\n}\n\nfunction splitDiffsOnBoundaries(\n  diffs: IDiffArrayEntry[],\n  boundaries: number[],\n): IDiffArrayEntry[] {\n  let newdiffs: IDiffArrayEntry[] = [];\n  if (!Array.isArray(boundaries)) {\n    throw new Error();\n  }\n\n  // Next relevant boundary index\n  let b = 0;\n\n  for (let e of diffs) {\n    if (valueIn(e.op, ['addrange', 'patch'])) {\n      // Nothing to split\n      newdiffs.push(e);\n    } else if (e.op === 'removerange') {\n      // Skip boundaries smaller than key\n      while (boundaries[b] < e.key) {\n        b += 1;\n      }\n\n      // key should be included in the boundaries\n      if (boundaries[b] !== e.key) {\n        throw new Error();\n      }\n\n      // Add diff entries for each interval between boundaries up to k\n      while (\n        b < boundaries.length - 1 &&\n        boundaries[b + 1] <= e.key + e.length\n      ) {\n        newdiffs.push(\n          opRemoveRange(boundaries[b], boundaries[b + 1] - boundaries[b]),\n        );\n        b += 1;\n      }\n    } else {\n      throw new Error('Unhandled diff entry op ' + e.op);\n    }\n  }\n\n  return newdiffs;\n}\n\n/**\n * Make list of chunks on the form (j, k, diffs0, diffs1, ..., diffsN),\n * where `j` and `k` are line numbers in the base, and the `diffsX`\n * entries are subsets from `diffs` that are part of the chunk.\n *\n * Because the diff entries have been split on the union of\n * begin/end boundaries of all diff entries, the keys of\n * diff entries on each side will always match a boundary\n * exactly. The only situation where multiple diff entries\n * on one side matches a boundary is when add/remove or\n * add/patch pairs occur, i.e. when inserting something\n * just before an item that is removed or modified.\n */\nfunction makeChunks(boundaries: number[], diffs: DiffCollection): MergeChunk[] {\n  let iDiffs: number[] = Array.apply(null, Array(diffs.length)).map(\n    Number.prototype.valueOf,\n    0,\n  );\n  let chunks: MergeChunk[] = [];\n  for (let i = 0; i < boundaries.length; ++i) {\n    // Find span of next chunk\n    let j = boundaries[i];\n    let k = i < boundaries.length - 1 ? boundaries[i + 1] : j;\n    // Collect diff entries from each side\n    // starting at beginning of this chunk\n    let subDiffs: DiffCollection = [];\n    for (let m = 0; m < diffs.length; ++m) {\n      let d = diffs[m];\n      let dis: IDiffEntry[] = [];\n      while (d && iDiffs[m] < d.length && d[iDiffs[m]].key === j) {\n        dis.push(d[iDiffs[m]]);\n        iDiffs[m] += 1;\n      }\n      subDiffs.push(dis);\n    }\n    // Add non-empty chunks\n    if (anyDiffs(subDiffs)) {\n      let c = { baseStart: j, baseEnd: k, diffs: subDiffs };\n      chunks.push(c);\n    }\n  }\n  return chunks;\n}\n\n/**\n * Return list of chunks (i, j, d0, d1, ..., dn) where dX are\n *  lists of diff entries affecting the range base[i:j].\n *\n *  If d0 and d1 are both empty the chunk is not modified.\n *\n *  Includes full range 0:len(base).\n *\n *  Each diff list contains either 0, 1, or 2 entries,\n *  in case of 2 entries the first will be an insert\n *  at i (the beginning of the range) and the other a\n *  removerange or patch covering the full range i:j.\n */\nfunction makeMergeChunks(base: any[], diffs: DiffCollection): MergeChunk[] {\n  // Split diffs on union of diff entry boundaries such that\n  // no diff entry overlaps with more than one other entry.\n  // Including 0,N makes loop over chunks cleaner.\n  let boundaries = [0, base.length];\n  for (let d of diffs) {\n    if (hasEntries(d)) {\n      let newBoundaries = getSectionBoundaries(d as IDiffArrayEntry[]);\n      boundaries = boundaries.concat(newBoundaries);\n    }\n  }\n  boundaries = boundaries.filter(unique).sort();\n  let splitDiffs: DiffCollection = [];\n  for (let d of diffs) {\n    if (hasEntries(d)) {\n      splitDiffs.push(\n        splitDiffsOnBoundaries(d as IDiffArrayEntry[], boundaries),\n      );\n    } else {\n      splitDiffs.push(d);\n    }\n  }\n\n  // Make list of chunks on the form (j, k, diffs)\n  let chunks = makeChunks(boundaries, splitDiffs);\n\n  return chunks;\n}\n\nfunction splitDecisionByChunks(\n  base: any[],\n  decision: MergeDecision,\n  chunks: MergeChunk[],\n): MergeDecision[] {\n  if (chunks.length < 2) {\n    return [decision];\n  }\n  let out: MergeDecision[] = [];\n  for (let c of chunks) {\n    let cd = decision.customDiff;\n    if (hasEntries(cd)) {\n      if (decision.localPath.length > 0) {\n        cd = pushPath(cd, decision.localPath);\n      }\n      // Split custom diff according to chunk lines\n      let boundaries = [0, base.length, c.baseStart, c.baseEnd]\n        .filter(unique)\n        .sort();\n      cd = splitDiffsOnBoundaries(cd as IDiffArrayEntry[], boundaries);\n    }\n    out.push(\n      new MergeDecision(\n        decision.absolutePath.slice(),\n        c.diffs[0],\n        c.diffs[1],\n        decision.action,\n        decision.conflict,\n      ),\n    );\n  }\n  return out;\n}\n\nexport function splitMergeDecisionsOnChunks(\n  base: any[],\n  decisions: MergeDecision[],\n): MergeDecision[] {\n  let out: MergeDecision[] = [];\n\n  for (let md of decisions) {\n    let diffs: DiffCollection = [\n      buildDiffs(base, [md], 'local'),\n      buildDiffs(base, [md], 'remote'),\n    ];\n    let chunks = makeMergeChunks(base, diffs);\n    out = out.concat(splitDecisionByChunks(base, md, chunks));\n  }\n\n  return out;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type { IDiffEntry } from '../diff/diffentries';\n\nimport type { DiffRangePos } from '../diff/range';\n\nimport type { MergeDecision } from '../merge/decisions';\n\nimport { valueIn, shallowCopy, unique } from '../common/util';\n\nexport type ChunkSource = {\n  decision: MergeDecision;\n  action: 'local' | 'remote' | 'either' | 'custom';\n};\n\n/**\n * A chunk is a range of lines in a string based diff\n * that logically belong together.\n *\n * Chunks can be used for:\n *  - Correlating diff entries in the base and remote, e.g.\n *    for aligning lines in two editors.\n *  - Finding parts of the unchanged text that are not needed\n *    as context (can be hidden)\n *  - Navigating a diff (\"Go to next diff\")\n */\nexport class Chunk {\n  constructor(\n    public baseFrom: number,\n    public baseTo: number,\n    public remoteFrom: number,\n    public remoteTo: number,\n    source?: ChunkSource,\n  ) {\n    this.sources = source ? [source] : [];\n  }\n\n  /**\n   * Indicates the source of a chunk in a merge condition.\n   *\n   * For merged content this can be used to indicate whether the chunk originates\n   * from base, local, remote or somewhere else.\n   */\n  sources: ChunkSource[];\n\n  /**\n   * Checks whether the given line number is within the range spanned by editFrom - editTo\n   */\n  inEdit(line: number) {\n    return line >= this.baseFrom && line <= this.baseTo;\n  }\n\n  /**\n   * Checks whether the given line number is within the range spanned by origFrom - origTo\n   */\n  inOrig(line: number) {\n    return line >= this.remoteFrom && line <= this.remoteTo;\n  }\n\n  /**\n   *\n   */\n}\n\nexport class Chunker {\n  constructor() {\n    this.chunks = [];\n    this.editOffset = 0;\n  }\n\n  protected _getCurrent() {\n    if (this._currentGhost) {\n      this._currentGhost = null;\n      return null;\n    }\n    return this.chunks.length > 0 ? this.chunks[this.chunks.length - 1] : null;\n  }\n\n  protected _overlapChunk(\n    chunk: Chunk,\n    range: DiffRangePos,\n    isAddition: boolean,\n  ): boolean {\n    if (isAddition) {\n      return chunk.inOrig(range.from.line);\n    } else {\n      return chunk.inEdit(range.from.line);\n    }\n  }\n\n  addDiff(range: DiffRangePos, isAddition: boolean): void {\n    let linediff = range.to.line - range.from.line;\n    if (range.endsOnNewline) {\n      linediff += 1;\n    }\n    const firstLineNew = range.from.column === 0 && linediff > 0;\n\n    const startOffset = range.chunkStartLine ? 0 : 1;\n    const endOffset =\n      range.chunkStartLine && range.endsOnNewline && firstLineNew ? 0 : 1;\n\n    let current = this._getCurrent();\n    if (current) {\n      // Have existing chunk, check for overlap\n      if (isAddition) {\n        if (this._overlapChunk(current, range, isAddition)) {\n          current.remoteTo = Math.max(\n            current.remoteTo,\n            range.from.line + endOffset + linediff,\n          );\n          current.baseTo = Math.max(\n            current.baseTo,\n            range.from.line + endOffset + this.editOffset,\n          );\n          if (range.source && !valueIn(range.source, current.sources)) {\n            current.sources.push(range.source);\n          }\n        } else {\n          // No overlap with chunk, start new one\n          current = null;\n        }\n      } else {\n        if (this._overlapChunk(current, range, isAddition)) {\n          current.remoteTo = Math.max(\n            current.remoteTo,\n            range.from.line + endOffset - this.editOffset,\n          );\n          current.baseTo = Math.max(\n            current.baseTo,\n            range.from.line + endOffset + linediff,\n          );\n          if (range.source && !valueIn(range.source, current.sources)) {\n            current.sources.push(range.source);\n          }\n        } else {\n          // No overlap with chunk, start new one\n          current = null;\n        }\n      }\n    }\n    if (!current) {\n      // No current chunk, start a new one\n      if (isAddition) {\n        let startRemote = range.from.line;\n        let startBase = startRemote + this.editOffset;\n        current = new Chunk(\n          startBase + startOffset,\n          startBase + endOffset,\n          startRemote + startOffset,\n          startRemote + endOffset + linediff,\n        );\n      } else {\n        let startBase = range.from.line;\n        let startRemote = startBase - this.editOffset;\n        current = new Chunk(\n          startBase + startOffset,\n          startBase + endOffset + linediff,\n          startRemote + startOffset,\n          startRemote + endOffset,\n        );\n      }\n      if (range.source) {\n        current.sources.push(range.source);\n      }\n      this.chunks.push(current);\n    }\n    current.sources = current.sources.filter(unique);\n    this.editOffset += isAddition ? -linediff : linediff;\n  }\n\n  /**\n   * Chunk a region where changes will occur if a currently unapplied diff were\n   * applied.\n   */\n  addGhost(range: DiffRangePos, isAddition: boolean, offset: number): void {\n    // Do a one-to-one chunk as base\n    let linediff = range.to.line - range.from.line;\n    if (range.endsOnNewline) {\n      linediff += 1;\n    }\n    let firstLineNew = range.from.column === 0 && linediff > 0;\n\n    let startOffset = range.chunkStartLine ? 0 : 1;\n    let endOffset =\n      range.chunkStartLine && range.endsOnNewline && firstLineNew ? 0 : 1;\n    if (!isAddition) {\n      endOffset += linediff;\n    }\n\n    let current = this._currentGhost;\n    // Subtract offset from other editor\n    let startEdit = range.from.line + (isAddition ? offset : 0);\n    if (current) {\n      // Have existing chunk, check for overlap\n      let startOrig = startEdit - this.editOffset;\n      if (current.baseTo > startEdit) {\n        current.remoteTo = Math.max(current.remoteTo, startOrig + endOffset);\n        current.baseTo = Math.max(current.baseTo, startEdit + endOffset);\n        if (range.source && !valueIn(range.source, current.sources)) {\n          current.sources.push(range.source);\n        }\n      } else {\n        // No overlap with chunk, start new one\n        current = null;\n      }\n    }\n    if (!current) {\n      let startOrig = startEdit - this.editOffset;\n      current = new Chunk(\n        startEdit + startOffset,\n        startEdit + endOffset,\n        startOrig + startOffset,\n        startOrig + endOffset,\n      );\n      if (range.source) {\n        current.sources.push(range.source);\n      }\n      this.chunks.push(current);\n    }\n    this._currentGhost = current;\n    current.sources = current.sources.filter(unique);\n    // this._doAdd(range, isAddition);\n  }\n\n  chunks: Chunk[];\n  editOffset: number;\n\n  protected _currentGhost: Chunk | null = null;\n}\n\n/**\n * A chunker that only chunks diffs within lines with each other\n *\n * While the default chunker would chunk together a change at the end of one\n * line with a change at the start of the next line, this chunker will keep\n * each line separate. This is useful e.g. for merging.\n */\nexport class LineChunker extends Chunker {\n  protected _overlapChunk(\n    chunk: Chunk,\n    range: DiffRangePos,\n    isAddition: boolean,\n  ): boolean {\n    let fromLine = range.from.line;\n    if (chunk.baseFrom !== chunk.baseTo || chunk.remoteFrom >= chunk.remoteTo) {\n      // Ensure aligned addition/removal on same line\n      // still chunk together\n      fromLine += 1;\n    }\n    if (isAddition) {\n      return chunk.inOrig(fromLine);\n    } else {\n      return chunk.inEdit(fromLine);\n    }\n  }\n}\n\n/**\n * Transform an array of lines to normal chunks\n */\nexport function lineToNormalChunks(lineChunks: Chunk[]): Chunk[] {\n  // We already have line chunks, so simply merge those chunks that overlap\n  let current: Chunk | null = null;\n  let ret: Chunk[] = [];\n  for (let c of lineChunks) {\n    if (current === null) {\n      current = shallowCopy(c);\n    } else {\n      if (current.inEdit(c.baseFrom)) {\n        // Overlaps, combine\n        current.remoteTo = Math.max(current.remoteTo, c.remoteTo);\n        current.baseTo = Math.max(current.baseTo, c.baseTo);\n        current.sources = current.sources.concat(c.sources);\n      } else {\n        // No overlap, start new\n        ret.push(current);\n        current = shallowCopy(c);\n      }\n    }\n    current.sources = current.sources.filter(unique);\n  }\n  if (current !== null) {\n    ret.push(current);\n  }\n  return ret;\n}\n\n/**\n * Label a set of diffs with a source, recursively.\n */\nexport function labelSource(\n  diff: IDiffEntry[] | null,\n  source: ChunkSource,\n): IDiffEntry[] | null {\n  if (diff) {\n    for (let d of diff) {\n      d.source = source;\n      if (d.op === 'patch') {\n        labelSource(d.diff, source);\n      }\n    }\n  }\n  return diff;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './diffchunking';\nexport * from './decisionchunking';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport type { CodeEditor } from '@jupyterlab/codeeditor';\n\nimport { type ITranslator, nullTranslator } from '@jupyterlab/translation';\n\nimport { Panel } from '@lumino/widgets';\n\nimport type {\n  IDiffViewOptions,\n  IDiffWidgetOptions,\n  IMergeViewOptions,\n} from './interfaces';\n\n/**\n * Common panel for diff views\n */\nexport class DiffPanel<\n  T,\n  U extends IDiffViewOptions = IDiffViewOptions,\n> extends Panel {\n  constructor({\n    model,\n    editorFactory,\n    translator,\n    ...viewOptions\n  }: IDiffWidgetOptions<T> & U) {\n    super();\n    this._editorFactory = editorFactory;\n    this._model = model;\n    this._translator = translator ?? nullTranslator;\n    this._viewOptions = viewOptions as U;\n  }\n\n  protected _editorFactory: CodeEditor.Factory | undefined;\n  protected _model: T;\n  protected _translator: ITranslator;\n  protected _viewOptions: U;\n}\n\n/**\n * Common panel for merge views\n */\nexport class MergePanel<T> extends DiffPanel<T, IMergeViewOptions> {}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport { Widget, Panel } from '@lumino/widgets';\n\nconst COLLAPSIBLE_CLASS = 'jp-CollapsiblePanel';\nconst COLLAPSIBLE_HEADER = 'jp-CollapsiblePanel-header';\nconst COLLAPSIBLE_HEADER_ICON = 'jp-CollapsiblePanel-header-icon';\nconst COLLAPSIBLE_HEADER_ICON_OPEN = 'jp-CollapsiblePanel-header-icon-opened';\nconst COLLAPSIBLE_HEADER_ICON_CLOSED = 'jp-CollapsiblePanel-header-icon-closed';\nconst COLLAPSIBLE_SLIDER = 'jp-CollapsiblePanel-slider';\nconst COLLAPSIBLE_OPEN = 'jp-CollapsiblePanel-opened';\nconst COLLAPSIBLE_CLOSED = 'jp-CollapsiblePanel-closed';\nconst COLLAPSIBLE_CONTAINER = 'jp-CollapsiblePanel-container';\n\n/**\n * CollapsiblePanel\n */\nexport class CollapsiblePanel extends Panel {\n  static createHeader(headerTitle?: string): Panel {\n    let header = new Panel();\n    header.addClass(COLLAPSIBLE_HEADER);\n    if (headerTitle) {\n      header.node.textContent = headerTitle;\n    }\n    let button = document.createElement('button');\n    button.className = COLLAPSIBLE_HEADER_ICON;\n    header.node.appendChild(button);\n\n    return header;\n  }\n\n  constructor(inner: Widget, headerTitle?: string, collapsed?: boolean) {\n    super();\n    this.addClass(COLLAPSIBLE_CLASS);\n    this.inner = inner;\n    let header = CollapsiblePanel.createHeader(headerTitle);\n    this.header = header;\n    this.button = header.node.getElementsByClassName(\n      COLLAPSIBLE_HEADER_ICON,\n    )[0] as HTMLElement;\n    header.node.onclick = this.toggleCollapsed.bind(this);\n    this.addWidget(header);\n    this.container = new Panel();\n    this.container.addClass(COLLAPSIBLE_CONTAINER);\n    this.slider = new Panel();\n    this.slider.addClass(COLLAPSIBLE_SLIDER);\n    this.slider.addWidget(inner);\n    this.container.addWidget(this.slider);\n    this.addWidget(this.container);\n\n    this.slider.addClass(\n      collapsed === true ? COLLAPSIBLE_CLOSED : COLLAPSIBLE_OPEN,\n    );\n    this.button.classList.add(\n      collapsed === true\n        ? COLLAPSIBLE_HEADER_ICON_CLOSED\n        : COLLAPSIBLE_HEADER_ICON_OPEN,\n    );\n    this.button.classList.add('fa');\n    this.button.classList.add(\n      collapsed === true ? 'fa-caret-down' : 'fa-caret-up',\n    );\n  }\n\n  toggleCollapsed(): void {\n    let slider = this.slider;\n    let button = this.button;\n    if (this.collapsed) {\n      slider.removeClass(COLLAPSIBLE_CLOSED);\n      slider.addClass(COLLAPSIBLE_OPEN);\n      button.classList.remove(COLLAPSIBLE_HEADER_ICON_CLOSED);\n      button.classList.add(COLLAPSIBLE_HEADER_ICON_OPEN);\n      this.button.classList.remove('fa-caret-down');\n      this.button.classList.add('fa-caret-up');\n    } else {\n      slider.removeClass(COLLAPSIBLE_OPEN);\n      slider.addClass(COLLAPSIBLE_CLOSED);\n      button.classList.remove(COLLAPSIBLE_HEADER_ICON_OPEN);\n      button.classList.add(COLLAPSIBLE_HEADER_ICON_CLOSED);\n      this.button.classList.remove('fa-caret-up');\n      this.button.classList.add('fa-caret-down');\n    }\n  }\n\n  get collapsed(): boolean {\n    return this.slider.hasClass(COLLAPSIBLE_CLOSED);\n  }\n\n  set headerTitle(value: string) {\n    this.header.node.innerText = value;\n  }\n\n  inner: Widget;\n\n  header: Panel;\n  slider: Panel;\n  container: Panel;\n  button: HTMLElement;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport { Panel, PanelLayout, Widget } from '@lumino/widgets';\n\nimport type { Message } from '@lumino/messaging';\n\nimport { MimeData } from '@lumino/coreutils';\n\nimport { Drag } from '@lumino/dragdrop';\n\n/**\n * The class name added to the DropPanel\n */\nconst DROP_WIDGET_CLASS = 'jp-DropPanel';\n\n/**\n * The class name added to the DragPanel\n */\nconst DRAG_WIDGET_CLASS = 'jp-DragPanel';\n\n/**\n * The class name added to something which can be used to drag a box\n */\nconst DRAG_HANDLE = 'jp-mod-dragHandle';\n\n/**\n * The class name of the default drag handle\n */\nconst DEFAULT_DRAG_HANDLE_CLASS = 'jp-DragPanel-dragHandle';\n\n/**\n * The class name added to a drop target.\n */\nconst DROP_TARGET_CLASS = 'jp-mod-dropTarget';\n\n/**\n * MIME type representing drag data by index\n */\nexport const MIME_INDEX = 'application/vnd.jupyter.dragindex';\n\n/**\n * The threshold in pixels to start a drag event.\n */\nconst DRAG_THRESHOLD = 5;\n\n/**\n * Determine whether node is equal to or a decendant of our panel, and that is does\n * not belong to a nested drag panel.\n */\nexport function belongsToUs(\n  node: HTMLElement,\n  parentClass: string,\n  parentNode: HTMLElement,\n): boolean {\n  let candidate: HTMLElement | null = node;\n  // Traverse DOM until drag panel encountered:\n  while (candidate && !candidate.classList.contains(parentClass)) {\n    candidate = candidate.parentElement;\n  }\n  return !!candidate && candidate === parentNode;\n}\n\n/**\n * Find the direct child node of `parent`, which has `node` as a descendant.\n * Alternatively, parent can be a collection of children.\n *\n * Returns null if not found.\n */\nexport function findChild(\n  parent: HTMLElement | HTMLElement[],\n  node: HTMLElement,\n): HTMLElement | null {\n  // Work our way up the DOM to an element which has this node as parent\n  let child: HTMLElement | null = null;\n  let parentIsArray = Array.isArray(parent);\n  let isDirectChild = (child: HTMLElement): boolean => {\n    if (parentIsArray) {\n      return (parent as HTMLElement[]).indexOf(child) > -1;\n    } else {\n      return child.parentElement === parent;\n    }\n  };\n  let candidate: HTMLElement | null = node;\n  while (candidate && candidate !== parent) {\n    if (isDirectChild(candidate)) {\n      child = candidate;\n      break;\n    }\n    candidate = candidate.parentElement;\n  }\n  return child;\n}\n\n/**\n * A panel class which allows the user to drop mime data onto it.\n *\n * To complete the class, the following functions need to be implemented:\n *  - processDrop: Process pre-screened drop events\n *\n * The functionallity of the class can be extended by overriding the following\n * functions:\n *  - findDropTarget(): Override if anything other than the direct children\n *    of the widget's node are to be the drop targets.\n *\n * For maximum control, `evtDrop` can be overriden.\n */\nexport abstract class DropPanel extends Panel {\n  /**\n   * Construct a drop widget.\n   */\n  constructor(options: DropPanel.IOptions = {}) {\n    super(options);\n    this.acceptDropsFromExternalSource =\n      options.acceptDropsFromExternalSource === true;\n    this.addClass(DROP_WIDGET_CLASS);\n  }\n\n  /**\n   * Whether the widget should accept drops from an external source,\n   * or only accept drops from itself.\n   * Defaults to false, which will disallow all drops unless widget\n   * is also a drag widget.\n   */\n  acceptDropsFromExternalSource: boolean;\n\n  /**\n   * Handle the DOM events for the widget.\n   *\n   * @param event - The DOM event sent to the widget.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the drop widget's node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'lm-dragenter':\n        this._evtDragEnter(event as Drag.Event);\n        break;\n      case 'lm-dragleave':\n        this._evtDragLeave(event as Drag.Event);\n        break;\n      case 'lm-dragover':\n        this._evtDragOver(event as Drag.Event);\n        break;\n      case 'lm-drop':\n        this.evtDrop(event as Drag.Event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  protected validateSource(event: Drag.Event) {\n    return this.acceptDropsFromExternalSource || event.source === this;\n  }\n\n  /**\n   * Processes a drop event.\n   *\n   * This function is called after checking:\n   *  - That the `dropTarget` is a valid drop target\n   *  - The value of `event.source` if `acceptDropsFromExternalSource` is false\n   */\n  protected abstract processDrop(\n    dropTarget: HTMLElement,\n    event: Drag.Event,\n  ): void;\n\n  /**\n   * Find a drop target from a given drag event target.\n   *\n   * Returns null if no valid drop target was found.\n   *\n   * The default implementation returns the direct child that is the parent of\n   * `node`, or `node` if it is itself a direct child. It also checks that the\n   * needed mime type is included\n   */\n  protected findDropTarget(\n    input: HTMLElement,\n    mimeData: MimeData,\n  ): HTMLElement | null {\n    if (!mimeData.hasData(MIME_INDEX)) {\n      return null;\n    }\n    return findChild(this.node, input);\n  }\n\n  /**\n   * Handle the `'lm-drop'` event for the widget.\n   *\n   * Responsible for pre-processing event before calling `processDrop`.\n   *\n   * Should normally only be overriden if you cannot achive your goal by\n   * other overrides.\n   */\n  protected evtDrop(event: Drag.Event): void {\n    let target = event.target as HTMLElement;\n    while (target && target.parentElement) {\n      if (target.classList.contains(DROP_TARGET_CLASS)) {\n        target.classList.remove(DROP_TARGET_CLASS);\n        break;\n      }\n      target = target.parentElement;\n    }\n    if (!target || !belongsToUs(target, DROP_WIDGET_CLASS, this.node)) {\n      // Ignore event\n      return;\n    }\n\n    // If configured to, only accept internal moves:\n    if (!this.validateSource(event)) {\n      event.dropAction = 'none';\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    this.processDrop(target, event);\n  }\n\n  /**\n   * Handle `after_attach` messages for the widget.\n   */\n  protected onAfterAttach(msg: Message): void {\n    let node = this.node;\n    node.addEventListener('lm-dragenter', this);\n    node.addEventListener('lm-dragleave', this);\n    node.addEventListener('lm-dragover', this);\n    node.addEventListener('lm-drop', this);\n  }\n\n  /**\n   * Handle `before_detach` messages for the widget.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    let node = this.node;\n    node.removeEventListener('lm-dragenter', this);\n    node.removeEventListener('lm-dragleave', this);\n    node.removeEventListener('lm-dragover', this);\n    node.removeEventListener('lm-drop', this);\n  }\n\n  /**\n   * Handle the `'lm-dragenter'` event for the widget.\n   */\n  private _evtDragEnter(event: Drag.Event): void {\n    if (!this.validateSource(event)) {\n      return;\n    }\n    let target = this.findDropTarget(\n      event.target as HTMLElement,\n      event.mimeData,\n    );\n    if (target === null) {\n      return;\n    }\n    this._clearDropTarget();\n    target.classList.add(DROP_TARGET_CLASS);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * Handle the `'lm-dragleave'` event for the widget.\n   */\n  private _evtDragLeave(event: Drag.Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this._clearDropTarget();\n  }\n\n  /**\n   * Handle the `'lm-dragover'` event for the widget.\n   */\n  private _evtDragOver(event: Drag.Event): void {\n    if (!this.validateSource(event)) {\n      return;\n    }\n    this._clearDropTarget();\n    let target = this.findDropTarget(\n      event.target as HTMLElement,\n      event.mimeData,\n    );\n    if (target === null) {\n      return;\n    }\n    target.classList.add(DROP_TARGET_CLASS);\n    event.preventDefault();\n    event.stopPropagation();\n    event.dropAction = event.proposedAction;\n  }\n\n  /**\n   * Clear existing drop target from out children.\n   *\n   * #### Notes\n   * This function assumes there are only one active drop target\n   */\n  private _clearDropTarget(): void {\n    let elements = this.node.getElementsByClassName(DROP_TARGET_CLASS);\n    if (elements.length) {\n      (elements[0] as HTMLElement).classList.remove(DROP_TARGET_CLASS);\n    }\n  }\n}\n\n/**\n * An internal base class for implementing drag operations on top\n * of drop class.\n */\nexport abstract class DragDropPanelBase extends DropPanel {\n  /**\n   * Construct a drag and drop base widget.\n   */\n  constructor(options: DragDropPanel.IOptions = {}) {\n    super(options);\n    this.childrenAreDragHandles = options.childrenAreDragHandles === true;\n    this.addClass(DRAG_WIDGET_CLASS);\n  }\n\n  /**\n   * Whether all direct children of the widget are handles, or only those\n   * designated as handles. Defaults to false.\n   */\n  childrenAreDragHandles: boolean;\n\n  /**\n   * Dispose of the resources held by the directory listing.\n   */\n  dispose(): void {\n    this.drag = null;\n    this._clickData = null;\n    super.dispose();\n  }\n\n  /**\n   * Handle the DOM events for the widget.\n   *\n   * @param event - The DOM event sent to the widget.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the drag widget's node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'mousedown':\n        this._evtDragMousedown(event as MouseEvent);\n        break;\n      case 'mouseup':\n        this._evtDragMouseup(event as MouseEvent);\n        break;\n      case 'mousemove':\n        this._evtDragMousemove(event as MouseEvent);\n        break;\n      default:\n        super.handleEvent(event);\n        break;\n    }\n  }\n\n  /**\n   * Adds mime data represeting the drag data to the drag event's MimeData bundle.\n   */\n  protected abstract addMimeData(handle: HTMLElement, mimeData: MimeData): void;\n\n  /**\n   * Finds the drag target (the node to move) from a drag handle.\n   *\n   * Returns null if no valid drag target was found.\n   *\n   * The default implementation returns the direct child that is the ancestor of\n   * (or equal to) the handle.\n   */\n  protected findDragTarget(handle: HTMLElement): HTMLElement | null {\n    return findChild(this.node, handle);\n  }\n\n  /**\n   * Returns the drag image to use when dragging using the given handle.\n   *\n   * The default implementation returns a clone of the drag target.\n   */\n  protected getDragImage(handle: HTMLElement): HTMLElement | null {\n    let target = this.findDragTarget(handle);\n    if (target) {\n      return target.cloneNode(true) as HTMLElement;\n    }\n    return null;\n  }\n\n  /**\n   * Called when a drag has completed with this panel as a source\n   */\n  protected onDragComplete(action: Drag.DropAction) {\n    this.drag = null;\n  }\n\n  /**\n   * Handle `after_attach` messages for the widget.\n   */\n  protected onAfterAttach(msg: Message): void {\n    let node = this.node;\n    node.addEventListener('mousedown', this);\n    super.onAfterAttach(msg);\n  }\n\n  /**\n   * Handle `before_detach` messages for the widget.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    let node = this.node;\n    node.removeEventListener('click', this);\n    node.removeEventListener('dblclick', this);\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('mouseup', this, true);\n    super.onBeforeDetach(msg);\n  }\n\n  /**\n   * Start a drag event.\n   *\n   * Called when dragginging and DRAG_THRESHOLD is met.\n   *\n   * Should normally only be overriden if you cannot achieve your goal by\n   * other overrides.\n   */\n  protected startDrag(\n    handle: HTMLElement,\n    clientX: number,\n    clientY: number,\n  ): void {\n    // Create the drag image.\n    let dragImage = this.getDragImage(handle);\n\n    // Set up the drag event.\n    this.drag = new Drag({\n      dragImage: dragImage || undefined,\n      mimeData: new MimeData(),\n      supportedActions: 'all',\n      proposedAction: 'copy',\n      source: this,\n    });\n    this.addMimeData(handle, this.drag.mimeData);\n\n    // Start the drag and remove the mousemove listener.\n    this.drag.start(clientX, clientY).then(this.onDragComplete.bind(this));\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('mouseup', this, true);\n  }\n\n  /**\n   * Drag data stored in _startDrag\n   */\n  protected drag: Drag | null = null;\n\n  protected dragHandleClass = DRAG_HANDLE;\n\n  /**\n   * Check if node, or any of nodes ancestors are a drag handle\n   *\n   * If it is a drag handle, it returns the handle, if not returns null.\n   */\n  private _findDragHandle(node: HTMLElement): HTMLElement | null {\n    let handle: HTMLElement | null = null;\n    if (this.childrenAreDragHandles) {\n      // Simple scenario, just look for node among children\n      if (belongsToUs(node, DRAG_WIDGET_CLASS, this.node)) {\n        handle = node;\n      }\n    } else {\n      // Otherwise, traverse up DOM to check if click is on a drag handle\n      let candidate: HTMLElement | null = node;\n      while (candidate && candidate !== this.node) {\n        if (candidate.classList.contains(this.dragHandleClass)) {\n          handle = candidate;\n          break;\n        }\n        candidate = candidate.parentElement;\n      }\n      // Finally, check that handle does not belong to a nested drag panel\n      if (\n        handle !== null &&\n        !belongsToUs(handle, DRAG_WIDGET_CLASS, this.node)\n      ) {\n        // Handle belongs to a nested drag panel:\n        handle = null;\n      }\n    }\n    return handle;\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the widget.\n   */\n  private _evtDragMousedown(event: MouseEvent): void {\n    let target = event.target as HTMLElement;\n    let handle = this._findDragHandle(target);\n    if (handle === null) {\n      return;\n    }\n\n    // Left mouse press for drag start.\n    if (event.button === 0) {\n      this._clickData = {\n        pressX: event.clientX,\n        pressY: event.clientY,\n        handle: handle,\n      };\n      document.addEventListener('mouseup', this, true);\n      document.addEventListener('mousemove', this, true);\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Handle the `'mouseup'` event for the widget.\n   */\n  private _evtDragMouseup(event: MouseEvent): void {\n    if (event.button !== 0 || !this.drag) {\n      document.removeEventListener('mousemove', this, true);\n      document.removeEventListener('mouseup', this, true);\n      this.drag = null;\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the widget.\n   */\n  private _evtDragMousemove(event: MouseEvent): void {\n    // Bail if we are already dragging.\n    if (this.drag) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Check for a drag initialization.\n    let data = this._clickData;\n    if (!data) {\n      throw new Error('Missing drag data');\n    }\n    let dx = Math.abs(event.clientX - data.pressX);\n    let dy = Math.abs(event.clientY - data.pressY);\n    if (dx < DRAG_THRESHOLD && dy < DRAG_THRESHOLD) {\n      return;\n    }\n\n    this.startDrag(data.handle, event.clientX, event.clientY);\n    this._clickData = null;\n  }\n\n  /**\n   * Data stored on mouse down to determine if drag treshold has\n   * been overcome, and to initialize drag once it has.\n   */\n  private _clickData: {\n    pressX: number;\n    pressY: number;\n    handle: HTMLElement;\n  } | null = null;\n}\n\n/**\n * A panel which allows the user to initiate drag operations.\n *\n * Any descendant element with the drag handle class `'jp-mod-dragHandle'`\n * will serve as a handle that can be used for dragging. If DragPanels are\n * nested, handles will only belong to the closest parent DragPanel. For\n * convenience, the functions `makeHandle`, `unmakeHandle` and\n * `createDefaultHandle` can be used to indicate which elements should be\n * made handles. `createDefaultHandle` will create a new element as a handle\n * with a default styling class applied. Optionally, `childrenAreDragHandles`\n * can be set to indicate that all direct children are themselve drag handles.\n *\n * To complete the class, the following functions need to be implemented:\n * - addMimeData: Adds mime data to new drag events\n *\n * The functionallity of the class can be extended by overriding the following\n * functions:\n *  - findDragTarget(): Override if anything other than the direct children\n *    of the widget's node are to be drag targets.\n *  - getDragImage: Override to change the drag image (the default is a\n *    copy of the drag target).\n *  - onDragComplete(): Callback on drag source when a drag has completed.\n */\nexport abstract class DragPanel extends DragDropPanelBase {\n  /**\n   * Construct a drag widget.\n   */\n  constructor(options: DragPanel.IOptions = {}) {\n    // Implementation removes DropPanel options\n    super(options);\n  }\n\n  /**\n   * No-op on DragPanel, as it does not support dropping\n   */\n  protected processDrop(dropTarget: HTMLElement, event: Drag.Event): void {\n    // Intentionally empty\n  }\n\n  /**\n   * Simply returns null for DragPanel, as it does not support dropping\n   */\n  protected findDropTarget(\n    input: HTMLElement,\n    mimeData: MimeData,\n  ): HTMLElement | null {\n    return null;\n  }\n}\n\n/**\n * A widget which allows the user to rearrange widgets in the panel by\n * drag and drop. An internal drag and drop of a widget will cause it\n * to be inserted (by `insertWidget`) in the index of the widget it was\n * dropped on.\n *\n * Any descendant element with the drag handle class `'jp-mod-dragHandle'`\n * will serve as a handle that can be used for dragging. If DragPanels are\n * nested, handles will only belong to the closest parent DragPanel. For\n * convenience, the functions `makeHandle`, `unmakeHandle` and\n * `createDefaultHandle` can be used to indicate which elements should be\n * made handles. `createDefaultHandle` will create a new element as a handle\n * with a default styling class applied. Optionally, `childrenAreDragHandles`\n * can be set to indicate that all direct children are themselve drag handles.\n *\n * The functionallity of the class can be extended by overriding the following\n * functions:\n *  - addMimeData: Override to add other drag data to the mime bundle.\n *    This is often a necessary step for allowing dragging to external\n *    drop targets.\n *  - processDrop: Override if you need to handle other mime data than the\n *    default. For allowing drops from external sources, the field\n *    `acceptDropsFromExternalSource` should be set as well.\n *  - findDragTarget(): Override if anything other than the direct children\n *    of the widget's node are to be drag targets.\n *  - findDropTarget(): Override if anything other than the direct children\n *    of the widget's node are to be the drop targets.\n *  - getIndexOfChildNode(): Override to change the key used to represent\n *    the drag and drop target (default is index of child widget).\n *  - move(): Override to change how a move is handled.\n *  - getDragImage: Override to change the drag image (the default is a\n *    copy of the drag target).\n *  - onDragComplete(): Callback on drag source when a drag has completed.\n *\n * To drag and drop other things than all direct children, the following functions\n * should be overriden: `findDragTarget`, `findDropTarget` and possibly\n * `getIndexOfChildNode` and `move` to allow for custom to/from keys.\n *\n * For maximum control, `startDrag` and `evtDrop` can be overriden.\n */\nexport class DragDropPanel extends DragDropPanelBase {\n  /**\n   * Called when a widget should be moved as a consequence of an internal drag event.\n   *\n   * The default implementation assumes the keys `from` and `to` are numbers\n   * indexing the drag panel's direct children. It then moves the child at the\n   * `to` key to the location of the `from` key.\n   */\n  protected move(from: any, to: any): void {\n    if (to !== from) {\n      // Adjust for the shifting of elements once 'from' is removed\n      if (to > from) {\n        to -= 1;\n      }\n      this.insertWidget(to, this.widgets[from]);\n    }\n  }\n\n  /**\n   * Returns a key used to represent the child node.\n   *\n   * The default implementation returns the index of node in\n   * `this.layout.widgets`.\n   *\n   * Returns null if not found.\n   */\n  protected getIndexOfChildNode(\n    node: HTMLElement | null,\n    parent?: PanelLayout,\n  ): any {\n    parent = parent || (this.layout as PanelLayout);\n    for (let i = 0; i < parent.widgets.length; i++) {\n      if (parent.widgets[i].node === node) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Adds mime data represeting the drag data to the drag event's MimeData bundle.\n   *\n   * The default implementation adds mime data indicating the index of the direct\n   * child being dragged (as indicated by findDragTarget).\n   *\n   * Override this method if you have data that cannot be communicated well by an\n   * index, for example if the data should be able to be dropped on an external\n   * target that only understands direct mime data.\n   *\n   * As the method simply adds mime data for a specific key, overriders can call\n   * this method before/after adding their own mime data to still support default\n   * dragging behavior.\n   */\n  protected addMimeData(handle: HTMLElement, mimeData: MimeData): void {\n    let target = this.findDragTarget(handle);\n    let key = this.getIndexOfChildNode(target);\n\n    if (key !== null) {\n      mimeData.setData(MIME_INDEX, key);\n    }\n  }\n\n  /**\n   * Processes a drop event.\n   *\n   * This function is called after checking:\n   *  - That the `dropTarget` is a valid drop target\n   *  - The value of `event.source` if `acceptDropsFromExternalSource` is false\n   *\n   * The default implementation assumes calling `getIndexOfChildNode` with\n   * `dropTarget` will be valid. It will call `move` with that index as `to`,\n   * and the index stored in the mime data as `from`.\n   *\n   * Override this if you need to handle other mime data than the default.\n   */\n  protected processDrop(dropTarget: HTMLElement, event: Drag.Event): void {\n    if (\n      !DropPanel.isValidAction(event.supportedActions, 'move') ||\n      event.proposedAction === 'none'\n    ) {\n      // The default implementation only handles move action\n      // OR Accept proposed none action, and perform no-op\n      event.dropAction = 'none';\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    if (!this.validateSource(event)) {\n      // Source indicates external drop, incorrect use in subclass\n      throw new Error('Invalid source!');\n    }\n    let sourceKey = event.mimeData.getData(MIME_INDEX);\n    let targetKey = this.getIndexOfChildNode(dropTarget);\n    if (targetKey === null) {\n      // Invalid target somehow\n      return;\n    }\n\n    // We have an acceptable drop, handle:\n    this.move(sourceKey, targetKey);\n    event.preventDefault();\n    event.stopPropagation();\n    event.dropAction = 'move';\n  }\n}\n\n/**\n * The namespace for the `DropPanel` class statics.\n */\nexport namespace DropPanel {\n  /**\n   * An options object for initializing a drag panel widget.\n   */\n  export interface IOptions extends Panel.IOptions {\n    /**\n     * Whether the lsit should accept drops from an external source.\n     * Defaults to false.\n     *\n     * This option only makes sense to set for subclasses that accept drops from\n     * external sources.\n     */\n    acceptDropsFromExternalSource?: boolean;\n  }\n\n  /**\n   * Validate a drop action against a SupportedActions type\n   */\n  export function isValidAction(\n    supported: Drag.SupportedActions,\n    action: Drag.DropAction,\n  ): boolean {\n    switch (supported) {\n      case 'all':\n        return true;\n      case 'link-move':\n        return action === 'move' || action === 'link';\n      case 'copy-move':\n        return action === 'move' || action === 'copy';\n      case 'copy-link':\n        return action === 'link' || action === 'copy';\n      default:\n        return action === supported;\n    }\n  }\n}\n\n/**\n * The namespace for the `DragPanel` class statics.\n */\nexport namespace DragPanel {\n  /**\n   * An options object for initializing a drag panel widget.\n   */\n  export interface IOptions extends Panel.IOptions {\n    /**\n     * Whether all direct children of the list are handles, or only those widgets\n     * designated as handles. Defaults to false.\n     */\n    childrenAreDragHandles?: boolean;\n  }\n\n  /**\n   * Mark a widget as a drag handle.\n   *\n   * Using this, any child-widget can be a drag handle, as long as mouse events\n   * are propagated from it to the DragPanel.\n   */\n  export function makeHandle(handle: Widget) {\n    handle.addClass(DRAG_HANDLE);\n  }\n\n  /**\n   * Unmark a widget as a drag handle\n   */\n  export function unmakeHandle(handle: Widget) {\n    handle.removeClass(DRAG_HANDLE);\n  }\n\n  /**\n   * Create a default handle widget for dragging (see styling in DragPanel.css).\n   *\n   * The handle will need to be styled to ensure a minimum size\n   */\n  export function createDefaultHandle(): Widget {\n    let widget = new Widget();\n    widget.addClass(DEFAULT_DRAG_HANDLE_CLASS);\n    makeHandle(widget);\n    return widget;\n  }\n}\n\n/**\n * The namespace for the `DragDropPanel` class statics.\n */\nexport namespace DragDropPanel {\n  export interface IOptions extends DragPanel.IOptions, DropPanel.IOptions {}\n}\n\nexport class FriendlyDragDrop extends DragDropPanel {\n  private static _counter = 0;\n  private static _groups: { [key: number]: FriendlyDragDrop[] } = {};\n\n  static makeGroup() {\n    const id = this._counter++;\n    FriendlyDragDrop._groups[id] = [];\n    return id;\n  }\n\n  setFriendlyGroup(id: number) {\n    this._groupId = id;\n    FriendlyDragDrop._groups[id].push(this);\n  }\n\n  addToFriendlyGroup(other: FriendlyDragDrop) {\n    other.setFriendlyGroup(this._groupId);\n  }\n\n  get friends(): FriendlyDragDrop[] {\n    if (this._groupId === undefined) {\n      throw new Error('Uninitialized drag-drop group');\n    }\n    return FriendlyDragDrop._groups[this._groupId];\n  }\n\n  protected getIndexOfChildNode(node: HTMLElement, parent?: PanelLayout): any {\n    const friends = this.friends;\n    for (let panel of friends) {\n      if (!belongsToUs(node, DROP_WIDGET_CLASS, panel.node)) {\n        continue;\n      }\n      let child = findChild(panel.node, node);\n      if (child !== null) {\n        return [\n          panel.friends.indexOf(panel),\n          super.getIndexOfChildNode(child, panel.layout as PanelLayout),\n        ];\n      }\n    }\n    return null;\n  }\n\n  private _groupId: number;\n\n  protected validateSource(event: Drag.Event) {\n    if (this.acceptDropsFromExternalSource) {\n      return this.friends.indexOf(event.source) !== -1;\n    }\n    return super.validateSource(event);\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n'use strict';\n\nimport { StreamLanguage } from '@codemirror/language';\n\nimport type { EditorView } from '@codemirror/view';\n\nimport type { Text } from '@codemirror/state';\n\nimport { YFile, IYText } from '@jupyter/ydoc';\n\nimport { CodeEditorWrapper, CodeEditor } from '@jupyterlab/codeeditor';\n\nimport {\n  CodeMirrorEditorFactory,\n  CodeMirrorEditor,\n  EditorExtensionRegistry,\n  EditorLanguageRegistry,\n  EditorThemeRegistry,\n  parseMathIPython,\n  ybinding,\n  IEditorFactoryOptions,\n} from '@jupyterlab/codemirror';\n\nimport { nullTranslator } from '@jupyterlab/translation';\n\nexport interface IEditorWidgetOptions\n  extends Omit<CodeEditor.IOptions, 'host' | 'model' | 'inline'> {\n  /**\n   * Editor factory\n   *\n   * #### Notes\n   * The widget needs a factory and a the editor options\n   * because it needs to provide its own node as the host.\n   */\n  factory?: CodeEditor.Factory;\n\n  /**\n   * The starting value of the editor.\n   */\n  value?: string;\n\n  /**\n   * Editor configuration\n   */\n  config?: {\n    /**\n     * Whether CodeMirror should scroll or wrap for long lines. Defaults to false (scroll).\n     */\n    lineWrap?: boolean;\n\n    /**\n     * Whether to show line numbers to the left of the editor.\n     */\n    lineNumbers?: boolean;\n\n    /**\n     * This disables editing of the editor content by the user.\n     * If the special value \"nocursor\" is given (instead of simply true), focusing of the editor is also disallowed.\n     */\n    readOnly?: boolean | string;\n  };\n}\n\nexport class EditorWidget extends CodeEditorWrapper {\n  /**\n   * Store all editor instances for operations that\n   * need to loop over all instances.\n   */\n  constructor(options: IEditorWidgetOptions) {\n    const { factory, value, ...others } = options;\n    const sharedModel = new YFile();\n    if (value) {\n      sharedModel.source = value;\n    }\n\n    const model = new CodeEditor.Model({ sharedModel });\n\n    super({\n      model: model,\n      factory: factory ?? createEditorFactory(),\n      editorOptions: others,\n    });\n    this.staticLoaded = false;\n  }\n\n  get cm(): EditorView {\n    return (this.editor as CodeMirrorEditor).editor;\n  }\n\n  get doc(): Text {\n    return (this.editor as CodeMirrorEditor).doc;\n  }\n\n  readonly editor: CodeMirrorEditor;\n  staticLoaded: boolean;\n}\n\nfunction createExtensionsRegistry(\n  themes: EditorThemeRegistry,\n): EditorExtensionRegistry {\n  const extensions = new EditorExtensionRegistry();\n\n  // Register default extensions\n  const extensionNameList = [\n    'lineNumbers',\n    'readOnly',\n    'theme',\n    'allowMultipleSelections',\n    'tabSize',\n  ];\n  for (const extensionFactory of EditorExtensionRegistry.getDefaultExtensions({\n    themes,\n  })) {\n    for (const extensionName of extensionNameList) {\n      if (extensionFactory.name === extensionName) {\n        extensions.addExtension(extensionFactory);\n      }\n    }\n  }\n\n  extensions.addExtension({\n    name: 'shared-model-binding',\n    factory: options => {\n      const sharedModel = options.model.sharedModel as IYText;\n      return EditorExtensionRegistry.createImmutableExtension(\n        ybinding({\n          ytext: sharedModel.ysource,\n          undoManager: sharedModel.undoManager ?? undefined,\n        }),\n      );\n    },\n  });\n  return extensions;\n}\n\nfunction createLanguagesRegistry(): EditorLanguageRegistry {\n  const languages = new EditorLanguageRegistry();\n\n  // Register default languages\n  for (const language of EditorLanguageRegistry.getDefaultLanguages()) {\n    languages.addLanguage(language);\n  }\n\n  // Add Jupyter Markdown flavor here to support\n  // code block highlighting.\n  languages.addLanguage({\n    name: 'ipythongfm',\n    mime: 'text/x-ipythongfm',\n    load: async () => {\n      const [m, tex] = await Promise.all([\n        import('@codemirror/lang-markdown'),\n        import('@codemirror/legacy-modes/mode/stex'),\n      ]);\n      return m.markdown({\n        base: m.markdownLanguage,\n        codeLanguages: (info: string) => languages.findBest(info) as any,\n        extensions: [\n          parseMathIPython(StreamLanguage.define(tex.stexMath).parser),\n        ],\n      });\n    },\n  });\n\n  return languages;\n}\n\nfunction createThemeRegistry(): EditorThemeRegistry {\n  const themes = new EditorThemeRegistry();\n\n  for (const theme of EditorThemeRegistry.getDefaultThemes()) {\n    themes.addTheme(theme);\n  }\n  return themes;\n}\n\nexport function createEditorFactory(\n  options: IEditorFactoryOptions = {},\n): CodeEditor.Factory {\n  const factory = new CodeMirrorEditorFactory({\n    extensions:\n      options.extensions ?? createExtensionsRegistry(createThemeRegistry()),\n    languages: options.languages ?? createLanguagesRegistry(),\n    translator: options.translator ?? nullTranslator,\n  });\n\n  return factory.newInlineEditor.bind(factory);\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n'use strict';\n\n/**\n * An error that should be displayed to the user\n */\nexport class NotifyUserError extends Error {\n  constructor(message: string, severity: NotifyUserError.Severity = 'error') {\n    super(message);\n    // Set the prototype explicitly.\n    (Object as any).setPrototypeOf(this, NotifyUserError.prototype);\n    this.message = message;\n    this.stack = new Error().stack;\n    this.severity = severity;\n  }\n\n  severity: NotifyUserError.Severity;\n}\n\nexport namespace NotifyUserError {\n  /**\n   * Severity of an error.\n   *\n   * Anything less severe that warning shouldn't\n   * use an exception.\n   */\n  export type Severity = 'error' | 'warning';\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n// This code is based on the CodeMirror mergeview.js source:\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n'use strict';\n\nimport {\n  Extension,\n  StateEffect,\n  StateField,\n  ChangeDesc,\n  RangeSetBuilder,\n  RangeSet,\n  EditorState,\n} from '@codemirror/state';\n\nimport {\n  EditorView,\n  Decoration,\n  DecorationSet,\n  WidgetType,\n  GutterMarker,\n  gutter,\n  BlockInfo,\n} from '@codemirror/view';\n\nimport type { CodeEditor } from '@jupyterlab/codeeditor';\n\nimport {\n  type ITranslator,\n  nullTranslator,\n  type TranslationBundle,\n} from '@jupyterlab/translation';\n\nimport { Widget, Panel } from '@lumino/widgets';\n\nimport type { IStringDiffModel } from '../diff/model';\n\nimport { DecisionStringDiffModel } from '../merge/model';\n\nimport { offsetToPos, posToOffset, type DiffRangePos } from '../diff/range';\n\nimport { ChunkSource, Chunk, lineToNormalChunks } from '../chunking';\n\nimport {\n  EditorWidget,\n  IEditorWidgetOptions,\n  createEditorFactory,\n} from './editor';\n\nimport type { IMergeViewOptions } from './interfaces';\n\nimport { valueIn, hasEntries, splitLines } from './util';\n\nconst PICKER_SYMBOL = '\\u27ad\\uFE0E';\nconst CONFLICT_MARKER = '\\u26A0\\uFE0E';\n\nexport enum DIFF_OP {\n  DIFF_DELETE = -1,\n  DIFF_INSERT = 1,\n  DIFF_EQUAL = 0,\n}\n\nexport enum EventDirection {\n  INCOMING,\n  OUTGOING,\n}\n\nconst GUTTER_PICKER_CLASS = 'jp-Merge-gutter-picker';\nconst GUTTER_CONFLICT_CLASS = 'jp-Merge-gutter-conflict';\nconst CHUNK_CONFLICT_CLASS = 'jp-Merge-conflict';\n\nexport type EditorDecorationsDict = {\n  [key: string]: Decoration;\n  chunk: Decoration;\n  start: Decoration;\n  end: Decoration;\n  conflict: Decoration;\n  endEmpty: Decoration;\n  inserted: Decoration;\n  deleted: Decoration;\n};\n\nexport type MergeViewDecorationDict = {\n  [key: string]: EditorDecorationsDict;\n  left: EditorDecorationsDict;\n  right: EditorDecorationsDict;\n  localMerge: EditorDecorationsDict;\n  remoteMerge: EditorDecorationsDict;\n  customMerge: EditorDecorationsDict;\n  eitherMerge: EditorDecorationsDict;\n  mixedMerge: EditorDecorationsDict;\n};\n\nconst conflictDecoration = Decoration.line({ class: CHUNK_CONFLICT_CLASS });\nconst lineHighlightTypeList = ['chunk', 'conflict', 'start', 'end'];\n\nnamespace Private {\n  export function buildEditorDecorationDict(\n    editorType: string,\n    chunkAction?: string,\n  ) {\n    const suffix: string = chunkAction ? '-' + chunkAction : '';\n    const prefix: string = 'cm-merge' + '-' + editorType;\n    const dict: EditorDecorationsDict = {\n      chunk: Decoration.line({ class: prefix + '-chunk' + suffix }),\n      start: Decoration.line({\n        class: prefix + '-chunk' + '-' + 'start' + suffix,\n      }),\n      end: Decoration.line({ class: prefix + '-chunk' + '-' + 'end' + suffix }),\n      endEmpty: Decoration.line({\n        class: prefix + '-chunk' + '-' + 'end' + suffix + '-empty',\n      }),\n      conflict: conflictDecoration,\n      inserted: Decoration.mark({ class: prefix + '-' + 'inserted' }),\n      deleted: Decoration.mark({ class: prefix + '-' + 'deleted' }),\n    };\n    return dict;\n  }\n}\n\nconst mergeViewDecorationDict: MergeViewDecorationDict = {\n  left: Private.buildEditorDecorationDict('l'),\n  right: Private.buildEditorDecorationDict('r'),\n  localMerge: Private.buildEditorDecorationDict('m', 'local'),\n  remoteMerge: Private.buildEditorDecorationDict('m', 'remote'),\n  customMerge: Private.buildEditorDecorationDict('m', 'custom'),\n  eitherMerge: Private.buildEditorDecorationDict('m', 'either'),\n  mixedMerge: Private.buildEditorDecorationDict('m', 'mixed'),\n};\n\n/**\n * Additional theme element\n */\nconst baseTheme = EditorView.baseTheme({\n  '.cm-collapsedLines': {\n    cursor: 'pointer',\n    color: 'var(--jp-ui-font-color1)',\n    backgroundColor: 'var(--jp-layout-color2)',\n    border: 'var(--jp-border-width) solid var(--jp-border-color1)',\n    fontSize: '90%',\n    padding: '0 3px',\n    borderRadius: '4px',\n  },\n});\n\n/**\n * Get common editor extensions\n *\n * @param isMergeView Whether the editor is within a merge view or not.\n * @returns Editor extensions\n */\nfunction getCommonEditorExtensions(isMergeView = true): Extension[] {\n  const extensions = [baseTheme, highlightField, paddingWidgetField];\n\n  return isMergeView\n    ? [\n        ...extensions,\n        gutterMarkerField,\n        pickerLineChunkMappingField,\n        conflictMarkerLineChunkMappingField,\n      ]\n    : extensions;\n}\n\nfunction applyMapping({ from, to }: any, mapping: ChangeDesc) {\n  const map: any = { from: mapping.mapPos(from), to: mapping.mapPos(to) };\n  return map;\n}\n\n/**\n * Effect for adding highlighting on lines or on characters\n */\nconst addHighlightEffect = StateEffect.define<{\n  from: number;\n  to: number;\n  highlightType: string;\n  decorationKey: string;\n}>({\n  map: applyMapping,\n});\n\n/**\n * Effect for removing highlighting on lines or on characters\n */\nconst removeHighlightEffect = StateEffect.define<{\n  highlightType: string;\n  decorationKey: string;\n}>({\n  map: applyMapping,\n});\n\n/**\n * StateField storing information about highlighting elements of an editor\n */\nconst highlightField = StateField.define<DecorationSet>({\n  create() {\n    return Decoration.none;\n  },\n  update(highlightRanges, transaction) {\n    highlightRanges = highlightRanges.map(transaction.changes);\n    for (let e of transaction.effects) {\n      let decoration: Decoration;\n      if (e.is(addHighlightEffect)) {\n        decoration =\n          mergeViewDecorationDict[e.value.decorationKey][e.value.highlightType];\n        highlightRanges = highlightRanges.update({\n          add: [decoration.range(e.value.from, e.value.to)],\n        });\n      }\n      if (e.is(removeHighlightEffect)) {\n        decoration =\n          mergeViewDecorationDict[e.value.decorationKey][e.value.highlightType];\n        highlightRanges = highlightRanges.update({\n          filter: (from: number, to: number, value: Decoration) => {\n            return decoration.spec.class !== value.spec.class;\n          },\n        });\n      }\n    }\n    return highlightRanges;\n  },\n  provide: field => EditorView.decorations.from(field),\n});\n\n/**\n * StateField storing information about padding widgets used to keep the alignment between different editors\n */\nexport const replacePaddingWidgetEffect = StateEffect.define<DecorationSet>({\n  map: (value, mapping) => value.map(mapping),\n});\n\n/**\n * StateField storing information about padding widgets used to keep the alignment between different editors\n */\nexport const paddingWidgetField = StateField.define<DecorationSet>({\n  create: () => Decoration.none,\n  update: (paddingWidgetRanges, transaction) => {\n    for (let e of transaction.effects) {\n      if (e.is(replacePaddingWidgetEffect)) {\n        return e.value;\n      }\n    }\n    return paddingWidgetRanges.map(transaction.changes);\n  },\n  provide: field => EditorView.decorations.from(field),\n});\n\n/**\n * Widget used for aligning lines of different editors that need to be at the same distance from the top of the document\n */\nclass PaddingWidget extends WidgetType {\n  constructor(size: number) {\n    super();\n    this.size = size;\n  }\n  toDOM() {\n    let elt = document.createElement('div');\n    elt.className = 'cm-merge-spacer';\n    elt.style.height = this.size + 'px';\n    elt.style.minWidth = '1px';\n\n    return elt;\n  }\n  size: number;\n}\n\n/**\n * Effect for adding a gutter marker\n */\nconst addGutterMarkerEffect = StateEffect.define<{\n  from: number;\n  block: boolean;\n  on: boolean;\n  type: string;\n}>({\n  map: (val, mapping) => ({\n    from: mapping.mapPos(val.from),\n    block: val.block,\n    on: val.on,\n    type: val.type,\n  }),\n});\n\n/**\n * Effect for removing a gutter marker\n */\nconst removeGutterMarkerEffect = StateEffect.define<{ type: string }>({\n  map: val => ({ type: val.type }),\n});\n\nclass MergeMarker extends GutterMarker {\n  constructor(options: { symbol: string; className: string; block: boolean }) {\n    super();\n    this.symbol = options.symbol;\n    this.className = options.className;\n    this.block = options.block;\n  }\n  toDOM() {\n    let pickerMarker = elt('div', this.symbol);\n    pickerMarker.className = this.className;\n    return pickerMarker;\n  }\n  eq(other: GutterMarker): boolean {\n    return other === this;\n  }\n  readonly symbol: string;\n  readonly className: string;\n  readonly block: boolean;\n}\n\n/**\n * StateField storing information about gutter markers (picker and conflict ones)\n */\nconst gutterMarkerField = StateField.define<RangeSet<MergeMarker>>({\n  create: () => {\n    return RangeSet.empty;\n  },\n  update: (gutters, transaction) => {\n    gutters = gutters.map(transaction.changes);\n    for (let e of transaction.effects) {\n      if (e.is(addGutterMarkerEffect)) {\n        if (e.value.on) {\n          const marker: MergeMarker =\n            e.value.type === 'picker'\n              ? e.value.block\n                ? pickerBlockMarker\n                : pickerMarker\n              : e.value.block\n              ? conflictBlockMarker\n              : conflictMarker;\n          // check for overlap (duplicates) with same type\n          let overlap = false;\n          gutters.between(e.value.from, e.value.from, (from, to, value) => {\n            if (from === e.value.from && value.eq(marker)) {\n              overlap = true;\n              return false;\n            }\n            return;\n          });\n          if (!overlap) {\n            gutters = gutters.update({ add: [marker.range(e.value.from)] });\n          }\n        }\n      }\n      if (e.is(removeGutterMarkerEffect)) {\n        gutters = RangeSet.empty;\n      }\n    }\n    return gutters;\n  },\n});\n\n/**\n * Picker gutter marker DOM Element ➭\n */\nconst pickerMarker = new MergeMarker({\n  symbol: PICKER_SYMBOL,\n  className: GUTTER_PICKER_CLASS,\n  block: false,\n});\nconst pickerBlockMarker = new MergeMarker({\n  symbol: PICKER_SYMBOL,\n  className: GUTTER_PICKER_CLASS,\n  block: true,\n});\n\n/**\n * Conflict gutter marker DOM Element ⚠\n */\nconst conflictMarker = new MergeMarker({\n  symbol: CONFLICT_MARKER,\n  className: GUTTER_CONFLICT_CLASS,\n  block: false,\n});\nconst conflictBlockMarker = new MergeMarker({\n  symbol: CONFLICT_MARKER,\n  className: GUTTER_CONFLICT_CLASS,\n  block: true,\n});\n\n/**\n * Effect for adding a mapping between a line and a chunk\n * This is used for adding the gutters at the right place : there is a single gutter marker associated with each chunk\n */\nconst addLineChunkMappingEffect = StateEffect.define<{\n  line: number;\n  chunk: Chunk;\n  type: String;\n}>({\n  map: (val, mapping) => ({\n    line: mapping.mapPos(val.line),\n    chunk: val.chunk,\n    type: val.type,\n  }),\n});\n\n/**\n * Effect for removing a mapping between a line and a chunk\n * This is used for removing the gutters from the right place there is a single gutter marker associated with each chunk\n */\nconst removeLineChunkMappingEffect = StateEffect.define<{ type: String }>({\n  map: val => ({ type: val.type }),\n});\n\n/**\n * StateField storing information about the mapping between a line and a chunk for picker gutter markers\n */\nconst pickerLineChunkMappingField = StateField.define<Map<number, Chunk>>({\n  create: () => {\n    return new Map();\n  },\n  update: (lineChunkMapping, transaction) => {\n    let newLineChunkMapping = lineChunkMapping;\n    for (let e of transaction.effects) {\n      if (e.is(addLineChunkMappingEffect) && e.value.type === 'picker') {\n        newLineChunkMapping.set(e.value.line, e.value.chunk);\n      }\n    }\n    return newLineChunkMapping;\n  },\n});\n\n/**\n * StateField storing information about the mapping between a line and a chunk for conflict gutter markers\n */\nconst conflictMarkerLineChunkMappingField = StateField.define<\n  Map<number, Chunk>\n>({\n  create: () => {\n    return new Map();\n  },\n  update: (lineChunkMapping, transaction) => {\n    let newLineChunkMapping = lineChunkMapping;\n    for (let e of transaction.effects) {\n      if (e.is(addLineChunkMappingEffect) && e.value.type === 'conflict') {\n        newLineChunkMapping.set(e.value.line, e.value.chunk);\n      }\n    }\n    return newLineChunkMapping;\n  },\n});\n\n/**\n * uncollapseEffect effect to synchronize uncollapseEffectd ranges between editors.\n */\nconst uncollapseEffect = StateEffect.define<number>({\n  map: (value, change) => change.mapPos(value),\n});\n\n/**\n * Effect to set the collapser widgets in an editor\n */\nconst setCollapsersEffect = StateEffect.define<DecorationSet>({\n  map: (value, mapping) => value.map(mapping),\n});\n\nclass CollapseWidget extends WidgetType {\n  constructor(\n    readonly lines: number,\n    readonly siblings: { line: number; cm: EditorView }[],\n  ) {\n    super();\n  }\n\n  eq(other: CollapseWidget) {\n    return (\n      this.lines == other.lines &&\n      this.siblings.every(\n        sibling =>\n          other.siblings.findIndex(\n            otherSibling =>\n              otherSibling.line == sibling.line &&\n              otherSibling.cm == sibling.cm,\n          ) >= 0,\n      )\n    );\n  }\n\n  toDOM(view: EditorView) {\n    let outer = document.createElement('div');\n    outer.className = 'cm-collapsedLines';\n    outer.textContent = view.state.phrase('(…$ unchanged lines…)', this.lines);\n    outer.addEventListener('click', e => {\n      const pos = view.posAtDOM(e.target as HTMLElement);\n      this.siblings.forEach(sibling => {\n        if (sibling.cm === view) {\n          view.dispatch({ effects: uncollapseEffect.of(pos) });\n        } else {\n          const from = sibling.cm.state.doc.line(sibling.line).from;\n          sibling.cm.dispatch({ effects: uncollapseEffect.of(from) });\n        }\n      });\n    });\n    return outer;\n  }\n\n  ignoreEvent(e: Event) {\n    return e instanceof MouseEvent;\n  }\n\n  get estimatedHeight() {\n    return 27;\n  }\n}\n\n/**\n * StateField storing information about the collapsed ranges\n */\nconst CollapsedRangesField = StateField.define<DecorationSet>({\n  create(state) {\n    return Decoration.none;\n  },\n  update(deco, tr) {\n    for (let e of tr.effects) {\n      if (e.is(setCollapsersEffect)) {\n        return e.value;\n      }\n    }\n\n    deco = deco.map(tr.changes);\n    for (let e of tr.effects)\n      if (e.is(uncollapseEffect))\n        deco = deco.update({ filter: from => from != e.value });\n    return deco;\n  },\n  provide: f => EditorView.decorations.from(f),\n});\n\n/**\n * Merge view factory options\n */\nexport interface IMergeViewFactoryOptions extends Partial<IMergeViewOptions> {\n  /**\n   * Diff between the reference and a remote version\n   */\n  remote: IStringDiffModel | null;\n  /**\n   * Diff between the reference and a local version\n   */\n  local?: IStringDiffModel | null;\n  /**\n   * Diff between the reference and the merged version\n   */\n  merged?: IStringDiffModel;\n  readOnly?: boolean | string;\n  /**\n   * Text editor factory\n   */\n  factory?: CodeEditor.Factory;\n}\n\n/**\n * A wrapper view for showing StringDiffModels in a MergeView\n */\nexport function createNbdimeMergeView(\n  options: IMergeViewFactoryOptions,\n): MergeView {\n  const {\n    remote,\n    local,\n    merged,\n    readOnly,\n    factory,\n    collapseIdentical,\n    showBase,\n    translator,\n  } = options;\n  let opts: IMergeViewEditorConfiguration = {\n    remote,\n    local,\n    merged,\n    config: { readOnly },\n    factory: factory ?? createEditorFactory(),\n    collapseIdentical,\n    showBase,\n    translator,\n  };\n\n  let mergeview = new MergeView(opts);\n  let editors: DiffView[] = [];\n  if (mergeview.left) {\n    editors.push(mergeview.left);\n  }\n  if (mergeview.right) {\n    editors.push(mergeview.right);\n  }\n  if (mergeview.merge) {\n    editors.push(mergeview.merge);\n  }\n\n  let mimetype = (remote || merged!).mimetype;\n  if (mimetype) {\n    // Set the editor mode to the MIME type.\n    for (let e of editors) {\n      e.remoteEditorWidget.model.mimeType = mimetype;\n    }\n    mergeview.base.model.mimeType = mimetype;\n  }\n  return mergeview;\n}\n\n/**\n * DiffView options\n */\nexport interface IDiffViewOptions {\n  /**\n   * Diff model\n   */\n  model: IStringDiffModel;\n  /**\n   * Remote content type\n   */\n  type: 'left' | 'right' | 'merge';\n  /**\n   * Editor configuration\n   */\n  options: Omit<IEditorWidgetOptions, 'value'>;\n  /**\n   * Whether to synchronize scrolling between the two editors or not.\n   */\n  lockScroll?: boolean;\n  /**\n   * The configuration options for the editor.\n   */\n  translator?: ITranslator;\n}\n\n/**\n * Used by MergeView to show diff in a string diff model\n */\nexport class DiffView {\n  constructor({\n    model,\n    type,\n    options,\n    lockScroll,\n    translator,\n  }: IDiffViewOptions) {\n    this._model = model;\n    this._trans = (translator ?? nullTranslator).load('nbdime');\n    this._type = type;\n    this._lockScroll = lockScroll ?? true;\n    let remoteValue = this._model.remote || '';\n    this._remoteEditorWidget = new EditorWidget({\n      ...options,\n      value: remoteValue,\n    });\n    this.setScrollLock(this._lockScroll);\n  }\n\n  init(baseWidget: EditorWidget) {\n    this._baseEditorWidget = baseWidget;\n    this._lineChunks = this._model.getLineChunks();\n    this._chunks = lineToNormalChunks(this._lineChunks);\n    this.updateView();\n    this.syncScroll();\n  }\n\n  /**\n   * Update the highlighting in the views of baseEditor and remoteEditor\n   */\n  updateView() {\n    const baseEditor = this._baseEditorWidget.cm;\n    const remoteEditor = this._remoteEditorWidget.cm;\n\n    this.clearHighlighting(\n      remoteEditor,\n      this._model.additions,\n      this._chunks,\n      DIFF_OP.DIFF_INSERT,\n    );\n\n    this.clearHighlighting(\n      baseEditor,\n      this._model.deletions,\n      this._chunks,\n      DIFF_OP.DIFF_DELETE,\n    );\n\n    this.updateHighlighting(\n      remoteEditor,\n      this._model.additions,\n      this._chunks,\n      DIFF_OP.DIFF_INSERT,\n    );\n\n    this.updateHighlighting(\n      baseEditor,\n      this._model.deletions,\n      this._chunks,\n      DIFF_OP.DIFF_DELETE,\n    );\n  }\n  /**\n   * Update the chunks once a version has been picked\n   */\n  syncModel() {\n    if (!this.modelInvalid()) {\n      return;\n    }\n    let editor = this.remoteEditorWidget.cm;\n    let updatedLineChunks = this._model.getLineChunks();\n    let updatedChunks = lineToNormalChunks(updatedLineChunks);\n    if (this._model.remote === editor.state.doc.toString()) {\n      // Nothing to do except update chunks\n      this._lineChunks = updatedLineChunks;\n      this._chunks = updatedChunks;\n      return;\n    }\n    let cursor = editor.state.selection.main.head;\n    let newLines = splitLines(this._model.remote!);\n    editor.dispatch(\n      {\n        changes: {\n          from: 0,\n          to: editor.state.doc.length,\n          insert: newLines.slice(0, newLines.length).join(''),\n        },\n      },\n      { selection: { anchor: cursor } },\n    );\n    this._lineChunks = updatedLineChunks;\n    this._chunks = updatedChunks;\n  }\n\n  /**\n   * Add a gap DOM element between 2 editors\n   */\n  buildGap(): HTMLElement {\n    let lock = (this._lockButton = elt(\n      'div',\n      undefined,\n      'cm-merge-scrolllock',\n    ));\n    lock.title = this._trans.__('Toggle locked scrolling');\n    this.setScrollLock(this._lockScroll);\n    lock.addEventListener('click', event => {\n      this.setScrollLock(!this._lockScroll);\n    });\n    let gap = elt('div', [lock], 'cm-merge-gap');\n    this._gap = gap;\n    return this._gap;\n  }\n\n  /**\n   * Whether to lock scroll or not.\n   *\n   * @param val Scroll lock value\n   */\n  setScrollLock(val: boolean) {\n    this._lockScroll = val;\n    if (this._lockButton) {\n      this._lockButton.innerHTML = val\n        ? '\\u21db\\u21da'\n        : '\\u21db&nbsp;&nbsp;\\u21da';\n    }\n    // Force scroll synchronization in case it was not synchronize\n    window.requestAnimationFrame(() => {\n      this._remoteEditorWidget.cm.scrollDOM.scrollLeft =\n        this._baseEditorWidget.cm.scrollDOM.scrollLeft;\n      this._remoteEditorWidget.cm.scrollDOM.scrollTop =\n        this._baseEditorWidget.cm.scrollDOM.scrollTop;\n    });\n  }\n\n  private modelInvalid(): boolean {\n    return (\n      this._model instanceof DecisionStringDiffModel && this._model.invalid\n    );\n  }\n\n  /**\n   * Synchronize the scrolling between editors.\n   * srcEditor refers to the source editor from which the scrolling is done and listened\n   * destEditor is the destination editor whose scrolling is synchronized with the one of srcEditor.\n   */\n  private syncScroll(): void {\n    if (this.modelInvalid()) {\n      return;\n    }\n\n    const srcScroller = this._baseEditorWidget.cm.scrollDOM;\n    const destScroller = this._remoteEditorWidget.cm.scrollDOM;\n    srcScroller.addEventListener(\n      'scroll',\n      event => {\n        if (!this._lockScroll) {\n          return;\n        }\n\n        window.requestAnimationFrame(function () {\n          destScroller.scrollLeft = srcScroller.scrollLeft;\n          destScroller.scrollTop = srcScroller.scrollTop;\n        });\n      },\n      { passive: true },\n    );\n\n    destScroller.addEventListener(\n      'scroll',\n      event => {\n        if (!this._lockScroll) {\n          return;\n        }\n\n        window.requestAnimationFrame(function () {\n          srcScroller.scrollLeft = destScroller.scrollLeft;\n          srcScroller.scrollTop = destScroller.scrollTop;\n        });\n      },\n      { passive: true },\n    );\n  }\n\n  /**\n   * The decorationKey is used to have access to the correct css class associated to a given decoration type\n   */\n  private getDecorationKey(sources: ChunkSource[]): string {\n    let s: string = this._type;\n    let res: string = s;\n    if (this._type === 'merge') {\n      s = sources[0].action;\n      res = s + 'Merge';\n      if (sources.length > 1) {\n        for (let si of sources.slice(1)) {\n          if (si.action !== s) {\n            res = 'mixedMerge';\n            break;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  private getConflictState(sources: ChunkSource[]): boolean {\n    let conflict = false;\n    if (sources.length > 0) {\n      for (let s of sources) {\n        if (s.decision.conflict) {\n          conflict = true;\n          break;\n        }\n      }\n    }\n    return conflict;\n  }\n\n  /**\n   * Create effects related to gutter markers\n   */\n  private createGutterEffects(\n    editor: EditorView,\n    chunk: Chunk,\n    from: number,\n    type: 'picker' | 'conflict',\n    block: boolean = false,\n  ) {\n    let effects: StateEffect<unknown>[] = [];\n\n    let gutterEffect = addGutterMarkerEffect.of({\n      from: from,\n      on: true,\n      type: type,\n      block: block,\n    });\n    effects.push(gutterEffect);\n\n    effects.push(\n      addLineChunkMappingEffect.of({\n        line: offsetToPos(editor.state.doc, from).line,\n        chunk: chunk,\n        type: type,\n      }),\n    );\n    return effects;\n  }\n\n  /**\n   * Build line background effects and gutter markers effects\n   */\n  private buildLineEffects(editor: EditorView, chunkArray: Chunk[]) {\n    let effects: StateEffect<unknown>[] = [];\n    let isbaseEditor = editor === this._baseEditorWidget.cm;\n    for (let chunk of chunkArray) {\n      let decorationKey = this.getDecorationKey(chunk.sources);\n      let conflict = this.getConflictState(chunk.sources);\n      let chunkFirstLine: number;\n      let chunkLastLine: number;\n\n      if (isbaseEditor) {\n        chunkFirstLine = chunk.baseFrom;\n        chunkLastLine = chunk.baseTo;\n      } else {\n        chunkFirstLine = chunk.remoteFrom;\n        chunkLastLine = chunk.remoteTo;\n      }\n      for (let i = chunkFirstLine; i < chunkLastLine; i++) {\n        let pos: any = { line: i, column: 0 };\n        let startingOffset = posToOffset(editor.state.doc, pos);\n\n        effects.push(\n          addHighlightEffect.of({\n            from: startingOffset,\n            to: startingOffset,\n            highlightType: 'chunk',\n            decorationKey: decorationKey,\n          }),\n        );\n\n        if (conflict) {\n          effects.push(\n            addHighlightEffect.of({\n              from: startingOffset,\n              to: startingOffset,\n              highlightType: 'conflict',\n              decorationKey: decorationKey,\n            }),\n          );\n        }\n        if (i === chunkFirstLine) {\n          effects.push(\n            addHighlightEffect.of({\n              from: startingOffset,\n              to: startingOffset,\n              highlightType: 'start',\n              decorationKey: decorationKey,\n            }),\n          );\n\n          if (!decorationKey.includes('Merge')) {\n            // For all editors except merge editor, add a picker button\n            effects = effects.concat(\n              this.createGutterEffects(editor, chunk, startingOffset, 'picker'),\n            );\n          } else if (editor === this._baseEditorWidget.cm) {\n            for (let s of chunk.sources) {\n              if (\n                s.decision.action === 'custom' &&\n                !hasEntries(s.decision.localDiff) &&\n                !hasEntries(s.decision.remoteDiff)\n              ) {\n                // We have a custom decision, add picker on base only!\n                effects = effects.concat(\n                  this.createGutterEffects(\n                    editor,\n                    chunk,\n                    startingOffset,\n                    'picker',\n                  ),\n                );\n              }\n            }\n          } else if (conflict && editor === this.remoteEditorWidget.cm) {\n            effects = effects.concat(\n              this.createGutterEffects(\n                editor,\n                chunk,\n                startingOffset,\n                'conflict',\n              ),\n            );\n          }\n        }\n        if (i === chunkLastLine - 1) {\n          effects.push(\n            addHighlightEffect.of({\n              from: startingOffset,\n              to: startingOffset,\n              highlightType: 'end',\n              decorationKey: decorationKey,\n            }),\n          );\n        }\n      }\n      if (chunkFirstLine === chunkLastLine) {\n        // When the chunk is empty, make sure a horizontal line shows up\n        const startingOffset = posToOffset(editor.state.doc, {\n          line: chunkFirstLine,\n          column: 0,\n        });\n        effects.push(\n          addHighlightEffect.of({\n            from: startingOffset,\n            to: startingOffset,\n            highlightType: 'endEmpty',\n            decorationKey: decorationKey,\n          }),\n        );\n        if (!decorationKey.includes('Merge')) {\n          effects = effects.concat(\n            this.createGutterEffects(\n              editor,\n              chunk,\n              startingOffset,\n              'picker',\n              true,\n            ),\n          );\n        } else if (conflict) {\n          // Add conflict markers on editor, if conflicted\n          effects = effects.concat(\n            this.createGutterEffects(\n              editor,\n              chunk,\n              startingOffset,\n              'conflict',\n              true,\n            ),\n          );\n        }\n      }\n    }\n    return effects;\n  }\n\n  /**\n   * Remove line background effects and gutter markers effects\n   */\n  private clearLineEffects(editor: EditorView, chunkArray: Chunk[]) {\n    let effects: StateEffect<unknown>[] = [];\n\n    for (let chunk of chunkArray) {\n      let sources: ChunkSource[] = chunk.sources;\n      let decorationKey = this.getDecorationKey(sources);\n      for (let highlightType of lineHighlightTypeList) {\n        effects.push(\n          removeHighlightEffect.of({\n            highlightType: highlightType,\n            decorationKey: decorationKey,\n          }),\n        );\n      }\n    }\n    if (editor !== this._baseEditorWidget.cm) {\n      effects.push(removeGutterMarkerEffect.of({ type: 'all' }));\n      effects.push(removeLineChunkMappingEffect.of({ type: 'picker' }));\n      effects.push(removeLineChunkMappingEffect.of({ type: 'conflict' }));\n    }\n    return effects;\n  }\n\n  /**\n   * Build character highlighting effects\n   */\n  private buildCharacterHighlighting(\n    editor: EditorView,\n    diffRanges: DiffRangePos[],\n    markType: DIFF_OP,\n  ) {\n    const effects: StateEffect<unknown>[] = [];\n    const sources: ChunkSource[] = [];\n    if (markType === DIFF_OP.DIFF_INSERT || markType === DIFF_OP.DIFF_DELETE) {\n      const highlightType: string =\n        markType === DIFF_OP.DIFF_DELETE ? 'deleted' : 'inserted';\n\n      for (let r of diffRanges) {\n        if (r.source !== undefined) {\n          sources.push(r.source);\n        }\n        const startingOffset = posToOffset(editor.state.doc, {\n          line: r.from.line,\n          column: r.from.column,\n        });\n        const endingOffset = posToOffset(editor.state.doc, {\n          line: r.to.line,\n          column: r.to.column,\n        });\n        effects.push(\n          addHighlightEffect.of({\n            from: startingOffset,\n            to: endingOffset,\n            highlightType: highlightType,\n            decorationKey: this.getDecorationKey(sources),\n          }),\n        );\n      }\n    }\n    return effects;\n  }\n\n  /**\n  Clear character highlighting effects\n  */\n  private clearCharacterHighlighting(\n    editor: EditorView,\n    diffRanges: DiffRangePos[],\n    markType: DIFF_OP,\n  ) {\n    let effects: StateEffect<unknown>[] = [];\n    let sources: ChunkSource[] = [];\n    if (markType === DIFF_OP.DIFF_INSERT || markType === DIFF_OP.DIFF_DELETE) {\n      let highlightType: string =\n        markType === DIFF_OP.DIFF_DELETE ? 'deleted' : 'inserted';\n      for (let r of diffRanges) {\n        if (r.source !== undefined) {\n          sources.push(r.source);\n        }\n        let decorationKey = this.getDecorationKey(sources);\n        effects.push(\n          removeHighlightEffect.of({\n            highlightType: highlightType,\n            decorationKey: decorationKey,\n          }),\n        );\n      }\n    }\n    return effects;\n  }\n\n  /**\n  Build line effects (highlight and gutters) and character highlighting effects and dispatch them\n   */\n  private updateHighlighting(\n    editor: EditorView,\n    diffRanges: DiffRangePos[],\n    chunkArray: Chunk[],\n    type: DIFF_OP,\n  ) {\n    const LineHighlightEffects: StateEffect<unknown>[] = this.buildLineEffects(\n      editor,\n      chunkArray,\n    );\n    const MarkHighlightEffects: StateEffect<unknown>[] =\n      this.buildCharacterHighlighting(editor, diffRanges, type);\n    const effects: StateEffect<unknown>[] =\n      LineHighlightEffects.concat(MarkHighlightEffects);\n    editor.dispatch({ effects });\n  }\n\n  /**\n  Clear line effects (highlight and gutters) and character highlighting effects and dispatch them\n   */\n  private clearHighlighting(\n    editor: EditorView,\n    diffRanges: DiffRangePos[],\n    chunkArray: Chunk[],\n    type: DIFF_OP,\n  ) {\n    const clearLineEffects: StateEffect<unknown>[] = this.clearLineEffects(\n      editor,\n      chunkArray,\n    );\n    const clearCharacterHighlightEffects: StateEffect<unknown>[] =\n      this.clearCharacterHighlighting(editor, diffRanges, type);\n    const effects: StateEffect<unknown>[] = clearLineEffects.concat(\n      clearCharacterHighlightEffects,\n    );\n    editor.dispatch({ effects });\n  }\n\n  get remoteEditorWidget(): EditorWidget {\n    return this._remoteEditorWidget;\n  }\n\n  get baseEditorWidget(): EditorWidget {\n    return this._baseEditorWidget;\n  }\n\n  get chunks(): Chunk[] {\n    return this._chunks;\n  }\n\n  get lineChunks(): Chunk[] {\n    return this._lineChunks;\n  }\n\n  get model(): IStringDiffModel {\n    return this._model;\n  }\n\n  private _baseEditorWidget: EditorWidget;\n  private _remoteEditorWidget: EditorWidget;\n  private _model: IStringDiffModel;\n  private _trans: TranslationBundle;\n  private _type: string;\n  private _chunks: Chunk[];\n  private _lineChunks: Chunk[];\n  private _gap: HTMLElement;\n  private _lockScroll: boolean;\n  private _lockButton: HTMLElement;\n}\n\n/**\n * From a line in base, find the matching line in another editor by chunks.\n */\nfunction getMatchingEditLine(baseLine: number, chunks: Chunk[]): number {\n  let offset = 0;\n  // Start values correspond to either the start of the chunk,\n  // or the start of a preceding unmodified part before the chunk.\n  // It is the difference between these two that is interesting.\n  for (let i = 0; i < chunks.length; i++) {\n    let chunk = chunks[i];\n    if (chunk.baseTo > baseLine && chunk.baseFrom <= baseLine) {\n      return 0;\n    }\n    if (chunk.baseFrom > baseLine) {\n      break;\n    }\n    offset = chunk.remoteTo - chunk.baseTo;\n  }\n  return baseLine + offset;\n}\n\n/**\n * From a line in base, find the matching line in another editor by line chunks\n *\n */\nfunction getMatchingEditLineLC(toMatch: Chunk, chunks: Chunk[]): number {\n  const editLine = toMatch.baseFrom;\n  // Initialize with the last chunk in case we don't hit one of the\n  // two escape conditions in the for loop.\n  let previous: Chunk | undefined = chunks[chunks.length - 1];\n  for (let i = 0; i < chunks.length; ++i) {\n    const chunk = chunks[i];\n    if (chunk.baseFrom === editLine) {\n      // Chunk is part of the chunk list\n      return chunk.remoteTo;\n    }\n    if (chunk.baseFrom > editLine) {\n      // Remaining chunks are after the one we are interested\n      previous = chunks[i - 1];\n      break;\n    }\n  }\n  // toMatch is not in chunks list, add lines delta from the last chunk\n  return toMatch.baseTo + (previous ? previous.remoteTo - previous.baseTo : 0);\n}\n\n/**\n * Find which line numbers align with each other, in the\n * set of DiffViews. The returned array is of the format:\n *\n * [ aligned line #1:[Edit line number, (DiffView#1 line number, DiffView#2 line number,) ...],\n *   aligned line #2 ..., etc.]\n */\n\nfunction findAlignedLines(dvs: Readonly<DiffView[]>): number[][] {\n  let linesToAlign: number[][] = [];\n  let ignored: number[] = [];\n\n  // First fill directly from first DiffView\n  let dv = dvs[0];\n  let others = dvs.slice(1);\n  for (let i = 0; i < dv.lineChunks.length; i++) {\n    let chunk = dv.lineChunks[i];\n    let lines = [chunk.baseTo, chunk.remoteTo];\n\n    for (const o of others) {\n      lines.push(getMatchingEditLineLC(chunk, o.lineChunks));\n    }\n    if (\n      linesToAlign.length > 0 &&\n      linesToAlign[linesToAlign.length - 1][0] === lines[0]\n    ) {\n      let last = linesToAlign[linesToAlign.length - 1];\n      for (let j = 0; j < lines.length; ++j) {\n        last[j] = Math.max(last[j], lines[j]);\n      }\n    } else {\n      if (linesToAlign.length > 0) {\n        let prev = linesToAlign[linesToAlign.length - 1];\n        let diff: number | null = lines[0] - prev[0];\n        // Skip this chunk if it does not required spacers\n        for (let j = 1; j < lines.length; ++j) {\n          if (diff !== lines[j] - prev[j]) {\n            diff = null;\n            break;\n          }\n        }\n        if (diff === null) {\n          linesToAlign.push(lines);\n        } else {\n          ignored.push(lines[0]);\n          continue;\n        }\n      } else {\n        linesToAlign.push(lines);\n      }\n    }\n  }\n  // Then fill any chunks from remaining DiffView, which are not already added\n  for (let o = 0; o < others.length; o++) {\n    for (let i = 0; i < others[o].lineChunks.length; i++) {\n      let chunk = others[o].lineChunks[i];\n      // Check against existing matches to see if already consumed:\n      let j = 0;\n      for (; j < linesToAlign.length; j++) {\n        let align = linesToAlign[j];\n        if (valueIn(chunk.baseTo, ignored)) {\n          // Chunk already consumed, continue to next chunk\n          j = -1;\n          break;\n        } else if (align[0] >= chunk.baseTo) {\n          // New chunk, which should be inserted in pos j,\n          // such that linesToAlign are sorted on edit line\n          break;\n        }\n      }\n      if (j > -1) {\n        let lines = [chunk.baseTo, getMatchingEditLineLC(chunk, dv.lineChunks)];\n        for (let k = 0; k < others.length; k++) {\n          if (k === o) {\n            lines.push(chunk.remoteTo);\n          } else {\n            lines.push(getMatchingEditLineLC(chunk, others[k].lineChunks));\n          }\n        }\n        if (linesToAlign.length > j && linesToAlign[j][0] === chunk.baseTo) {\n          let last = linesToAlign[j];\n          for (let k = 0; k < lines.length; ++k) {\n            last[k] = Math.max(last[k], lines[k]);\n          }\n        } else {\n          linesToAlign.splice(j, 0, lines);\n        }\n      }\n    }\n  }\n  return linesToAlign;\n}\nexport interface IMergeViewEditorConfiguration\n  extends Omit<IEditorWidgetOptions, 'value'> {\n  /**\n   * When true stretches of unchanged text will be collapsed. When a number is given, this indicates the amount\n   * of lines to leave visible around such stretches (which defaults to 2). Defaults to true.\n   */\n  collapseIdentical?: boolean | number;\n\n  /**\n   * Provides remote diff of document to be shown on the right of the base.\n   * To create a diff view, provide only remote.\n   */\n  remote: IStringDiffModel | null;\n\n  /**\n   * Provides local diff of the document to be shown on the left of the base.\n   * To create a diff view, omit local.\n   */\n  local?: IStringDiffModel | null;\n\n  /**\n   * Provides the partial merge input for a three-way merge.\n   */\n  merged?: IStringDiffModel;\n\n  /**\n   * When true, the base of a three-way merge is shown. Defaults to true.\n   */\n  showBase?: boolean;\n\n  /**\n   * When true, changed pieces of text are highlighted. Defaults to true.\n   */\n  showDifferences?: boolean;\n}\n\n// Merge view, containing 1 or 2 diff views.\nexport class MergeView extends Panel {\n  constructor(options: IMergeViewEditorConfiguration) {\n    super();\n    this._measuring = -1;\n    this._trans = (options.translator ?? nullTranslator).load('nbdime');\n    let remote = options.remote;\n    let local = options.local || null;\n    let merged = options.merged || null;\n    let left: DiffView | null = (this._left = null);\n    let right: DiffView | null = (this._right = null);\n    let merge: DiffView | null = (this._merge = null);\n    // Set to -1 to deactivate\n    if (typeof options.collapseIdentical !== 'undefined') {\n      this._collapseIdentical =\n        typeof options.collapseIdentical === 'number'\n          ? Math.max(-1, options.collapseIdentical)\n          : options.collapseIdentical\n          ? 2\n          : -1;\n    }\n    let panes: number = 0;\n    let main = options.remote || options.merged;\n    if (!main) {\n      throw new Error('Either remote or merged model needs to be specified!');\n    }\n    const value = main.base !== null ? main.base : main.remote ?? '';\n\n    // Whether merge view should be readonly\n    let readOnly = options.config?.readOnly ?? false;\n\n    options.config = {\n      ...options.config,\n      lineNumbers: options.config?.lineNumbers !== false,\n      // For all others:\n      readOnly: true,\n    };\n\n    if (merged) {\n      // Turn off linewrapping for merge view by default, keep for diff\n      options.config.lineWrap = options.config.lineWrap ?? false;\n    }\n\n    this._aligning = true;\n\n    /**\n     * Listener extension to track for changes in the editorView\n     */\n    const listener = EditorView.updateListener.of(update => {\n      if (\n        this._measuring < 0 &&\n        /*update.heightChanged || */ update.viewportChanged &&\n        !update.transactions.some(tr =>\n          tr.effects.some(e => e.is(replacePaddingWidgetEffect)),\n        )\n      ) {\n        this.alignViews();\n      }\n    });\n\n    /**\n     * MergeControlGutter to set the gutter in a given editor and the mousedown events for picker markers\n     */\n    const mergeControlGutter = [\n      gutterMarkerField,\n      gutter({\n        class: 'cm-gutter',\n        markers: view => {\n          return view.state.field(gutterMarkerField).update({\n            filter: (_from, _to, value: MergeMarker) => !value.block,\n          });\n        },\n        widgetMarker: (\n          view: EditorView,\n          widget: WidgetType,\n          block: BlockInfo,\n        ): GutterMarker | null => {\n          if (!(widget instanceof PaddingWidget)) {\n            return null;\n          }\n          const markers = view.state.field(gutterMarkerField).update({\n            filter: (from, _to, value: MergeMarker) =>\n              value.block && block.from === from,\n          });\n          if (markers.size > 1) {\n            throw Error('More than one block gutter widget matched');\n          }\n          if (markers.size === 1) {\n            const cursor = markers.iter();\n            return cursor.value;\n          }\n          return null;\n        },\n        initialSpacer: () => pickerMarker,\n        domEventHandlers: {\n          mouseup: (editor, line, event) => {\n            if ((event as MouseEvent).button === 0) {\n              this.onGutterClick(editor, line);\n              return true;\n            }\n            return false;\n          },\n        },\n      }),\n    ];\n\n    /*\n     * Different cases possible:\n     *   - Local and merged supplied: Merge:\n     *     - Always use left, right and merge panes\n     *     - Use base if `showBase` not set to false\n     *   - Only remote supplied: Diff:\n     *     - No change: Use ony base editor\n     *     - Entire content added/deleted: Use only base editor,\n     *       but with different classes\n     *     - Partial changes: Use base + right editor\n     */\n    const inMergeView = !!merged;\n    const additionalExtensions = inMergeView\n      ? [listener, mergeControlGutter, getCommonEditorExtensions(inMergeView)]\n      : getCommonEditorExtensions(inMergeView);\n    additionalExtensions.push(\n      EditorState.phrases.of({\n        '(…$ unchanged lines…)': this._trans.__('(…$ unchanged lines…)'),\n      }),\n    );\n    const singlePane =\n      !merged && (remote?.unchanged || remote?.added || remote?.deleted);\n    if (\n      // no collapse\n      this._collapseIdentical >= 0 &&\n      // not displaying a single editor\n      !singlePane\n    ) {\n      additionalExtensions.push(CollapsedRangesField);\n    }\n\n    this._base = new EditorWidget({\n      ...options,\n      extensions: [options.extensions ?? [], additionalExtensions],\n      value,\n    });\n\n    this.addClass('jp-Mergeview-root');\n\n    // START MERGE CASE\n    if (merged) {\n      this.addClass('cm-merge-grid-panel');\n      const showBase = (this._showBase = options.showBase !== false);\n\n      let leftWidget: Widget;\n      if (!local || local.remote === null) {\n        // Local value was deleted\n        left = this._left = null;\n        leftWidget = new Widget({\n          node: elt('div', this._trans.__('Value missing'), 'jp-mod-missing'),\n        });\n      } else {\n        left = this._left = new DiffView({\n          model: local,\n          type: 'left',\n          options: {\n            ...options,\n            // Copy configuration\n            config: { ...options.config },\n            extensions: [options.extensions ?? [], additionalExtensions],\n          },\n          lockScroll: showBase,\n          translator: options.translator,\n        });\n        leftWidget = left.remoteEditorWidget;\n      }\n      this.addWidget(leftWidget);\n      leftWidget.addClass('cm-merge-pane');\n      leftWidget.addClass('cm-merge-left-editor');\n\n      if (showBase) {\n        this.addWidget(this._base);\n        this._base.addClass('cm-merge-pane');\n        this._base.addClass('cm-central-editor');\n      }\n\n      let rightWidget: Widget;\n      if (!remote || remote.remote === null) {\n        // Remote value was deleted\n        right = this._right = null;\n        rightWidget = new Widget({\n          node: elt('div', this._trans.__('Value missing'), 'jp-mod-missing'),\n        });\n      } else {\n        right = this._right = new DiffView({\n          model: remote,\n          type: 'right',\n          options: {\n            ...options,\n            // Copy configuration\n            config: { ...options.config },\n            extensions: [options.extensions ?? [], additionalExtensions],\n          },\n          lockScroll: showBase,\n          translator: options.translator,\n        });\n        rightWidget = right.remoteEditorWidget;\n      }\n      this.addWidget(rightWidget);\n      rightWidget.addClass('cm-merge-pane');\n      rightWidget.addClass('cm-merge-right-editor');\n\n      merge = this._merge = new DiffView({\n        model: merged,\n        type: 'merge',\n        options: {\n          ...options,\n          // Copy configuration\n          config: { ...options.config, readOnly },\n          extensions: [options.extensions ?? [], additionalExtensions],\n        },\n        lockScroll: showBase,\n        translator: options.translator,\n      });\n      let mergeWidget = merge.remoteEditorWidget;\n      if (showBase) {\n        this.addWidget(mergeWidget);\n      } else {\n        this.insertWidget(1, mergeWidget);\n        // We add scroll synchronization between left, right and merge here\n        // as the base editor is not inserted and the diff view scroll synchronization does not work\n        function addScroll(\n          srcScroller: HTMLElement,\n          destScroller: HTMLElement,\n        ) {\n          srcScroller.addEventListener(\n            'scroll',\n            () => {\n              window.requestAnimationFrame(function () {\n                destScroller.scrollLeft = srcScroller.scrollLeft;\n                destScroller.scrollTop = srcScroller.scrollTop;\n              });\n            },\n            { passive: true },\n          );\n\n          destScroller.addEventListener(\n            'scroll',\n            () => {\n              window.requestAnimationFrame(function () {\n                srcScroller.scrollLeft = destScroller.scrollLeft;\n                srcScroller.scrollTop = destScroller.scrollTop;\n              });\n            },\n            { passive: true },\n          );\n        }\n        if (this.left) {\n          addScroll(\n            this.merge!.remoteEditorWidget.cm.scrollDOM,\n            this.left.remoteEditorWidget.cm.scrollDOM,\n          );\n        }\n        if (this.right) {\n          addScroll(\n            this.merge!.remoteEditorWidget.cm.scrollDOM,\n            this.right.remoteEditorWidget.cm.scrollDOM,\n          );\n        }\n      }\n      mergeWidget.addClass('cm-merge-pane');\n      mergeWidget.addClass('cm-merge-editor');\n      //END MERGE CASE\n      panes = 3 + (showBase ? 1 : 0);\n      // START DIFF CASE\n    } else if (remote) {\n      if (remote.unchanged || remote.added || remote.deleted) {\n        panes = 1;\n        this.addWidget(this._base);\n        if (remote.unchanged) {\n          this._base.addClass('cm-merge-pane-unchanged');\n        } else if (remote.added) {\n          this._base.addClass('cm-merge-pane-added');\n        } else if (remote.deleted) {\n          this._base.addClass('cm-merge-pane-deleted');\n        }\n        this._base.addClass('cm-merge-pane');\n      } else {\n        panes = 2;\n        this.addWidget(this._base);\n        this._base.addClass('cm-merge-pane');\n        this._base.addClass('cm-diff-left-editor');\n        right = this._right = new DiffView({\n          model: remote,\n          type: 'right',\n          options: {\n            ...options,\n            // Copy configuration\n            config: { ...options.config },\n            extensions: [options.extensions ?? [], additionalExtensions],\n          },\n          translator: options.translator,\n        });\n        let rightWidget = right.remoteEditorWidget;\n        rightWidget.addClass('cm-merge-pane');\n        rightWidget.addClass('cm-diff-right-editor');\n        this.addWidget(new Widget({ node: right.buildGap() }));\n        this.addWidget(rightWidget);\n      }\n    }\n\n    this.addClass('cm-merge-' + panes + 'pane');\n\n    for (let dv of [left, right, merge]) {\n      if (dv) {\n        dv.init(this._base);\n      }\n    }\n\n    if (this._collapseIdentical >= 0) {\n      this.collapseIdenticalStretches();\n    }\n\n    this._aligning = false;\n    if (this._diffViews.length > 0) {\n      this.scheduleAlignViews();\n    }\n  }\n  /**\n   * Align the matching lines of the different editors\n   */\n  alignViews() {\n    const lineHeight = this._showBase\n      ? this._base.cm.defaultLineHeight\n      : this._diffViews[0].remoteEditorWidget.cm.defaultLineHeight;\n    if (this._aligning) {\n      return;\n    }\n    this._aligning = true;\n    // Find matching lines\n    const linesToAlign = findAlignedLines(this._diffViews);\n\n    // Function modifying DOM to perform alignment:\n    const editors: EditorView[] = [\n      this.base.cm,\n      ...this._diffViews.map(dv => dv.remoteEditorWidget.cm),\n    ];\n    const builders: RangeSetBuilder<Decoration>[] = [];\n    for (let i = 0; i < editors.length; i++) {\n      builders.push(new RangeSetBuilder<Decoration>());\n    }\n\n    const sumDeltas = new Array(editors.length).fill(0);\n    const nLines = editors.map(editor => editor.state.doc.lines);\n\n    for (const alignment_ of linesToAlign) {\n      const alignment = this._showBase ? alignment_.slice(0, 3) : alignment_;\n      const lastLine = Math.max(...alignment);\n      const lineDeltas = alignment.map(\n        (line, i) => lastLine - line - sumDeltas[i],\n      );\n      // If some paddings will be before the current line, it means all other editors\n      // must add a padding.\n      const minDelta = this._showBase\n        ? Math.min(...lineDeltas)\n        : Math.min(...lineDeltas.slice(1));\n      const correctedDeltas = lineDeltas.map(line => line - minDelta);\n\n      correctedDeltas.forEach((delta, i) => {\n        // Don't compute anything for the base editor if it is hidden\n        if (!this._showBase && i === 0) {\n          return;\n        }\n        // Alignments are zero-based\n        let line = alignment[i];\n\n        if (delta > 0 && line < nLines[i]) {\n          sumDeltas[i] += delta;\n\n          // This method include the correction from zero-based lines to one-based lines\n          const offset = posToOffset(editors[i].state.doc, {\n            line,\n            column: 0,\n          });\n\n          builders[i].add(\n            offset,\n            offset,\n            Decoration.widget({\n              widget: new PaddingWidget(delta * lineHeight),\n              block: true,\n              side: -1,\n            }),\n          );\n        }\n      });\n    }\n\n    // Padding at the last line of the editor\n    const totalHeight = nLines.map((line, i) => line + sumDeltas[i]);\n    const maxHeight = Math.max(...totalHeight);\n    totalHeight.slice(0, this._showBase ? 3 : 4).forEach((line, i) => {\n      if (maxHeight > line) {\n        const end = editors[i].state.doc.length;\n        const delta = maxHeight - line;\n        sumDeltas[i] += delta;\n        builders[i].add(\n          end,\n          end,\n          Decoration.widget({\n            widget: new PaddingWidget(delta * lineHeight),\n            block: true,\n            side: 1,\n          }),\n        );\n      }\n    });\n\n    // Don't insert spacers on merge if base is shown\n    for (\n      let i = 0;\n      i <\n      (this._showBase && editors.length > 2\n        ? editors.length - 1\n        : editors.length);\n      i++\n    ) {\n      // Don't update spacers on base if it is hidden.\n      if (i === 0 && !this._showBase) {\n        continue;\n      }\n\n      const decoSet: DecorationSet = builders[i].finish();\n      if (\n        !RangeSet.eq([decoSet], [editors[i].state.field(paddingWidgetField)])\n      ) {\n        editors[i].dispatch({\n          effects: replacePaddingWidgetEffect.of(decoSet),\n        });\n      }\n    }\n    this._aligning = false;\n  }\n\n  /**\n   * Used to schedule the call of alignViews\n   */\n  scheduleAlignViews() {\n    if (this._measuring < 0) {\n      this._measuring = window.requestAnimationFrame(() => {\n        this._measuring = -1;\n        this.alignViews();\n      });\n    }\n  }\n\n  getMergedValue(): string {\n    if (!this.merge) {\n      throw new Error('No merged value; missing \"merged\" view');\n    }\n\n    return this.merge.remoteEditorWidget.doc.toString();\n  }\n\n  protected collapseIdenticalStretches(): void {\n    const margin = this._collapseIdentical;\n    if (margin < 0) {\n      return;\n    }\n\n    // Build an array of line that are not part of a chunks\n    const baseEditor = this.base.cm;\n    const clear = new Array<boolean>(baseEditor.state.doc.lines).fill(true);\n    // Collapsers per editor\n    const builders = [new RangeSetBuilder<Decoration>()];\n\n    if (this.left) {\n      builders.push(new RangeSetBuilder<Decoration>());\n      unclearNearChunks(this.left, margin, clear);\n    }\n    if (this.right) {\n      builders.push(new RangeSetBuilder<Decoration>());\n      unclearNearChunks(this.right, margin, clear);\n    }\n    if (this.merge) {\n      builders.push(new RangeSetBuilder<Decoration>());\n      unclearNearChunks(this.merge, margin, clear);\n    }\n\n    for (let i = 0; i < clear.length; i++) {\n      if (clear[i]) {\n        // Lines are 1-based\n        const line = i + 1;\n        let size = 1;\n        for (; i < clear.length - 1 && clear[i + 1]; i++, size++) {\n          // Just finding size of identical stretch\n        }\n        if (size > margin) {\n          // Store the corresponding collapser positions\n          const editors: { line: number; cm: EditorView }[] = [\n            { line: line, cm: baseEditor },\n          ]; // Collapser in the reference editor\n          if (this.left) {\n            editors.push({\n              line: getMatchingEditLine(line, this.left.chunks),\n              cm: this.left.remoteEditorWidget.cm,\n            });\n          }\n          if (this.right) {\n            editors.push({\n              line: getMatchingEditLine(line, this.right.chunks),\n              cm: this.right.remoteEditorWidget.cm,\n            });\n          }\n          if (this.merge) {\n            editors.push({\n              line: getMatchingEditLine(line, this.merge.chunks),\n              cm: this.merge.remoteEditorWidget.cm,\n            });\n          }\n\n          // Create collapser for this strech\n          editors.forEach((editor, idx) => {\n            const from = editor.cm.state.doc.line(editor.line).from;\n            const to = editor.cm.state.doc.line(editor.line + size - 1).to;\n            builders[idx].add(\n              from,\n              to,\n              Decoration.replace({\n                widget: new CollapseWidget(size, editors),\n                block: true,\n              }),\n            );\n          });\n        }\n      }\n    }\n\n    const editors = [\n      baseEditor,\n      ...this._diffViews.map(dv => dv.remoteEditorWidget.cm),\n    ];\n    builders.forEach((builder, idx) => {\n      const decorationSet = builder.finish();\n      editors[idx].dispatch({\n        effects: setCollapsersEffect.of(decorationSet),\n      });\n    });\n  }\n\n  /**\n   * Actions and updates performed when a gutter marker is clicked\n   */\n  private onGutterClick(editor: EditorView, line: BlockInfo): boolean {\n    let effects: StateEffect<unknown>[] = [];\n    let offset: number = line.from;\n    let gutterMarkerline: number = offsetToPos(editor.state.doc, offset).line;\n    let isPicker: boolean = editor != this.merge?.remoteEditorWidget.cm;\n\n    if (isPicker) {\n      let pickerLineChunksMapping = editor.state.field(\n        pickerLineChunkMappingField,\n      );\n      let chunk: Chunk = pickerLineChunksMapping.get(gutterMarkerline)!;\n\n      if (!(editor == this._base.cm)) {\n        for (let source of chunk.sources) {\n          source.decision.action = source.action;\n        }\n      } else if (this.merge && editor === this._base.cm) {\n        for (let source of chunk.sources) {\n          source.decision.action = 'base';\n        }\n      }\n      for (let i = chunk.sources.length - 1; i >= 0; --i) {\n        let source = chunk.sources[i];\n        if (this.merge && hasEntries(source.decision.customDiff)) {\n          // Custom diffs are cleared on pick,\n          // as there is no way to re-pick them\n          source.decision.customDiff = [];\n        }\n      }\n      if (chunk.sources.length === 0) {\n        // All decisions empty, remove picker\n        // In these cases, there should only be one picker, on base\n        // so simply remove the one we have here\n      }\n      effects.push(\n        addGutterMarkerEffect.of({\n          from: line.from,\n          on: false,\n          type: 'picker',\n          block: false,\n        }),\n      );\n    } else {\n      // conflict picker\n      let conflictLineChunksMapping = editor.state.field(\n        conflictMarkerLineChunkMappingField,\n      );\n      let chunk: Chunk = conflictLineChunksMapping.get(gutterMarkerline)!;\n\n      for (let source of chunk.sources) {\n        if (editor !== this._base.cm) {\n          source.decision.conflict = false;\n        }\n      }\n    }\n    editor.dispatch({ effects: effects });\n    this.updateDiffModels();\n    this.updateDiffViews();\n    this.alignViews();\n    return true;\n  }\n\n  /**\n   * Update of the models of the diffViews by calling syncModel that updates the chunks\n   */\n  private updateDiffModels() {\n    for (let dv of this._diffViews) {\n      if (dv.model instanceof DecisionStringDiffModel) {\n        dv.model.invalidate();\n      }\n      dv.syncModel();\n    }\n  }\n\n  /**\n   * Update of the views of the diffViews by calling updateView\n   * Before updating the diffViews, baseEditor needs to be cleared from its pickers\n   */\n  private updateDiffViews() {\n    this.clearBaseEditorPickers();\n    for (let dv of this._diffViews) {\n      dv.updateView();\n    }\n  }\n  /**\n   * Clear the pickers of the baseEditor\n   * The baseEditor is indeed cumulating pickers from different diffViews\n   * Since this editor is common to the 3 diffviews\n   */\n  private clearBaseEditorPickers() {\n    let effects: StateEffect<unknown>[] = [];\n    effects.push(removeGutterMarkerEffect.of({ type: 'all' }));\n    effects.push(removeLineChunkMappingEffect.of({ type: 'picker' }));\n    this._base.cm.dispatch({ effects });\n  }\n\n  get left(): DiffView | null {\n    return this._left;\n  }\n\n  get right(): DiffView | null {\n    return this._right;\n  }\n\n  get merge(): DiffView | null {\n    return this._merge;\n  }\n\n  get base(): EditorWidget {\n    return this._base;\n  }\n\n  private get _diffViews(): Readonly<DiffView[]> {\n    return [this.left, this.right, this.merge].filter(\n      dv => dv !== null,\n    ) as DiffView[];\n  }\n\n  private _trans: TranslationBundle;\n  private _collapseIdentical: number = 2;\n  private _left: DiffView | null;\n  private _right: DiffView | null;\n  private _merge: DiffView | null;\n  private _base: EditorWidget;\n  private _aligning: boolean;\n  private _measuring: number;\n  private _showBase = true;\n}\n\n/**\n To create DOM element with defined properties\n */\nfunction elt(\n  tag: string,\n  content?: string | HTMLElement[] | null,\n  className?: string | null,\n  style?: string | null,\n): HTMLElement {\n  let e = document.createElement(tag);\n  if (className) {\n    e.className = className;\n  }\n  if (style) {\n    e.style.cssText = style;\n  }\n  if (typeof content === 'string') {\n    e.appendChild(document.createTextNode(content));\n  } else if (content) {\n    for (let i = 0; i < content.length; ++i) {\n      e.appendChild(content[i]);\n    }\n  }\n  return e;\n}\n\nfunction unclearNearChunks(\n  dv: DiffView,\n  margin: number,\n  clear: boolean[],\n): void {\n  for (let i = 0; i < dv.chunks.length; i++) {\n    const chunk = dv.chunks[i];\n    for (let l = chunk.baseFrom - margin; l < chunk.baseTo + margin; l++) {\n      const pos = l;\n      if (pos >= 0 && pos < clear.length) {\n        clear[pos] = false;\n      }\n    }\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nexport interface DeepCopyableObject {\n  [key: string]: any | undefined;\n  prototype?: DeepCopyableObject;\n}\n\nexport type DeepCopyableValue =\n  | DeepCopyableObject\n  | DeepCopyableObject[]\n  | string\n  | number\n  | boolean\n  | null;\n\n/**\n * Check whether a value is in an array.\n */\nexport function valueIn(value: any, array: Array<any>) {\n  return array.indexOf(value) >= 0;\n}\n\n/**\n * Check whether array is null or empty, and type guards agains null\n */\nexport function hasEntries<T>(array: T[] | null): array is T[] {\n  return array !== null && array.length !== 0;\n}\n\n/**\n * Splits a multinline string into an array of lines\n *\n * @export\n * @param {string} multiline\n * @returns {string[]}\n */\nexport function splitLines(multiline: string): string[] {\n  // Split lines (retaining newlines)\n  // We use !postfix, as we also match empty string,\n  // so we are guaranteed to get at elast one match\n  return multiline.match(/^.*(\\r\\n|\\r|\\n|$)/gm)!;\n}\n\n/**\n * Deepcopy routine for JSON-able data types\n */\nexport function deepCopy(obj: null): null;\nexport function deepCopy<T extends DeepCopyableValue>(obj: T): T;\nexport function deepCopy<T extends DeepCopyableValue>(obj: T | null): T | null;\nexport function deepCopy<T extends DeepCopyableValue>(obj: T | null): T | null {\n  if (typeof obj !== 'object') {\n    if (valueIn(typeof obj, ['string', 'number', 'boolean'])) {\n      return obj;\n    }\n    throw new TypeError('Cannot deepcopy non-object');\n  }\n  if (obj === null) {\n    return null;\n  } else if (Array.isArray(obj)) {\n    let l = obj.length;\n    let o = new Array(l);\n    for (let i = 0; i < l; i++) {\n      o[i] = deepCopy(obj[i]);\n    }\n    return o as T;\n  } else {\n    let a = obj as DeepCopyableObject;\n    let r: DeepCopyableObject = {};\n    if (a.prototype !== undefined) {\n      r.prototype = a.prototype;\n    }\n    for (let k in obj) {\n      r[k] = deepCopy(a[k]);\n    }\n    return r as T;\n  }\n}\n\n/**\n * Shallow copy routine for objects\n */\nexport function shallowCopy<T extends { [key: string]: any }>(original: T): T {\n  // First create an empty object with\n  // same prototype of our original source\n  let clone = Object.create(Object.getPrototypeOf(original));\n\n  for (let k in original) {\n    // Don't copy function\n    let ok = original[k];\n    if (\n      ok !== null &&\n      ok !== undefined &&\n      ok.hasOwnProperty('constructor') &&\n      ok.constructor === Function\n    ) {\n      continue;\n    }\n    let pDesc = Object.getOwnPropertyDescriptor(original, k);\n    // Don't copy properties with getter\n    if (!pDesc || pDesc.get) {\n      continue;\n    }\n    // copy each property into the clone\n    Object.defineProperty(clone, k, pDesc);\n  }\n  return clone;\n}\n\n/**\n * Do a shallow, element-wise equality comparison on two arrays.\n */\nexport function arraysEqual(a: any[] | null, b: any[] | null) {\n  if (a === b) {\n    return true;\n  }\n  if (a === null || b === null) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Find the shared common starting sequence in two arrays\n */\nexport function findSharedPrefix(\n  a: any[] | null,\n  b: any[] | null,\n): any[] | null {\n  if (a === null || b === null) {\n    return null;\n  }\n  if (a === b) {\n    // Only checking for instance equality\n    return a.slice();\n  }\n  let i = 0;\n  for (; i < Math.min(a.length, b.length); ++i) {\n    if (a[i] !== b[i]) {\n      break;\n    }\n  }\n  return a.slice(0, i);\n}\n\n/**\n * Check whether `parent` is contained within the start of `child`\n *\n * Note on terminology: Parent is here the shortest array, as it will\n * be the parent in a tree-view of values, e.g. a path. In other words, parent\n * is a subsequence of child.\n */\nexport function isPrefixArray(\n  parent: any[] | null,\n  child: any[] | null,\n): boolean {\n  if (parent === child) {\n    return true;\n  }\n  if (parent === null || parent.length === 0) {\n    return true;\n  }\n  if (child === null || parent.length > child.length) {\n    return false;\n  }\n  for (let i = 0; i < parent.length; ++i) {\n    if (parent[i] !== child[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort array by attribute `key` (i.e. compare by array[0][key] < array[1][key]). Stable.\n */\nexport function sortByKey<T extends { [key: string]: any }>(\n  array: T[],\n  key: string,\n): T[] {\n  return stableSort(array, function (a, b) {\n    let x = a[key];\n    let y = b[key];\n    return x < y ? -1 : x > y ? 1 : 0;\n  });\n}\n\n/**\n * Utility function to repeat a string\n */\nexport function repeatString(str: string, count: number): string {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  let pattern = str.valueOf();\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    (count >>= 1), (pattern += pattern);\n  }\n  return result + pattern;\n}\n\n/**\n * Calculate the cumulative sum of string lengths for an array of strings\n *\n * Example:\n *   For the arary ['ab', '123', 'y', '\\t\\nfoo'], the output would be\n *   [2, 5, 6, 11]\n */\nexport function accumulateLengths(arr: string[]) {\n  let ret: number[] = [];\n  arr.reduce<number>(function (a: number, b: string, i: number): number {\n    return (ret[i] = a + b.length);\n  }, 0);\n  return ret;\n}\n\n/**\n * Filter for Array.filter to only have unique values\n */\nexport function unique<T>(value: T, index: number, self: T[]): boolean {\n  return self.indexOf(value) === index;\n}\n\n/**\n * Return the intersection of two arrays (with no duplicates)\n */\nexport function intersection<T>(a: T[], b: T[]): T[] {\n  let ret: T[] = [];\n  // Loop over longest, so that indexOf works on shortest\n  [a, b] = a.length > b.length ? [a, b] : [b, a];\n  for (let ia of a) {\n    if (b.indexOf(ia) !== -1) {\n      ret.push(ia);\n    }\n  }\n  return ret;\n}\n\n/**\n * Similar to Array.sort, but guaranteed to keep order stable\n * when compare function returns 0\n */\nexport function stableSort<T>(arr: T[], compare: (a: T, b: T) => number): T[] {\n  let sorters: { index: number; key: T }[] = [];\n  for (let i = 0; i < arr.length; ++i) {\n    sorters.push({ index: i, key: arr[i] });\n  }\n  sorters = sorters.sort(\n    (a: { index: number; key: T }, b: { index: number; key: T }): number => {\n      return compare(a.key, b.key) || a.index - b.index;\n    },\n  );\n  let out: T[] = new Array<T>(arr.length);\n  for (let i = 0; i < arr.length; ++i) {\n    out[i] = arr[sorters[i].index];\n  }\n  return out;\n}\n\n/**\n * Create or populate a select element with string options\n */\nexport function buildSelect(\n  options: string[],\n  select?: HTMLSelectElement,\n): HTMLSelectElement {\n  if (select === undefined) {\n    select = document.createElement('select');\n  }\n  for (let option of options) {\n    let opt = document.createElement('option');\n    opt.text = option;\n    select.appendChild(opt);\n  }\n  return select;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport { valueIn } from '../common/util';\n\nimport type { ChunkSource } from '../chunking';\n\n/**\n * The different diff operations available\n */\nexport type DiffOp =\n  | 'add'\n  | 'remove'\n  | 'replace'\n  | 'patch'\n  | 'addrange'\n  | 'removerange';\n\n/**\n * Base interface for all diff entries\n */\nexport interface IDiffEntryBase {\n  /**\n   * The key of the diff entry: Either the field name in an object, or the\n   * index in a list/string.\n   */\n  key: string | number;\n\n  /**\n   * A string identifying the diff operation type, as defined by DiffOp.\n   */\n  op: DiffOp;\n\n  /**\n   * Optional: Source of diff, for use when merging.\n   *\n   * This should not need to be set manually.\n   */\n  source?: ChunkSource;\n}\n\n/**\n * Diff representing an added sequence of list entries, or an added substring\n */\nexport interface IDiffAddRange extends IDiffEntryBase {\n  op: 'addrange';\n  key: number;\n  /**\n   * The sequence of values that were added\n   */\n  valuelist: string | any[];\n}\n\n/**\n * Diff representing an added object entry\n */\nexport interface IDiffAdd extends IDiffEntryBase {\n  op: 'add';\n  key: string;\n  /**\n   * The value that was added\n   */\n  value: any;\n}\n\n/**\n * Diff representing a removed object entry\n */\nexport interface IDiffRemove extends IDiffEntryBase {\n  op: 'remove';\n  key: string;\n}\n\n/**\n * Diff representing a replaced object entry\n */\nexport interface IDiffReplace extends IDiffEntryBase {\n  op: 'replace';\n  key: string;\n  /**\n   * The new value\n   */\n  value: any;\n}\n\n/**\n * Diff representing a removed sequence of list entries, or a removed substring\n */\nexport interface IDiffRemoveRange extends IDiffEntryBase {\n  op: 'removerange';\n  key: number;\n\n  /**\n   * The length of the sequence that was deleted\n   */\n  length: number;\n}\n\n/**\n * Diff representing a patched entry (object entry or list entry)\n */\nexport interface IDiffPatch extends IDiffEntryBase {\n  op: 'patch';\n  /**\n   * The collection of sub-diffs describing the patch of the object\n   */\n  diff: IDiffEntry[] | null;\n}\nexport interface IDiffPatchArray extends IDiffPatch {\n  key: number;\n}\nexport interface IDiffPatchObject extends IDiffPatch {\n  key: string;\n}\n\n/**\n * Describes a diff entry of a single JSON value (object, list, string)\n */\nexport type IDiffEntry =\n  | IDiffAddRange\n  | IDiffRemoveRange\n  | IDiffPatch\n  | IDiffAdd\n  | IDiffRemove\n  | IDiffReplace;\n\nexport type IDiffArrayEntry =\n  | IDiffAddRange\n  | IDiffRemoveRange\n  | IDiffPatchArray;\n\nexport type IDiffObjectEntry =\n  | IDiffPatchObject\n  | IDiffAdd\n  | IDiffRemove\n  | IDiffReplace;\n\nexport type IDiffImmutableArrayEntry = IDiffAddRange | IDiffRemoveRange;\n\nexport type IDiffImmutableObjectEntry = IDiffAdd | IDiffRemove | IDiffReplace;\n\nexport type DiffCollection = (IDiffEntry[] | null)[];\n\n/** Create a replacement diff entry */\nexport function opReplace(key: string, value: any): IDiffReplace {\n  return { op: 'replace', key: key, value: value };\n}\n\n/** Create an addition diff entry */\nexport function opAdd(key: string, value: any): IDiffAdd {\n  return { op: 'add', key: key, value: value };\n}\n\n/** Create a removal diff entry */\nexport function opRemove(key: string): IDiffRemove {\n  return { op: 'remove', key: key };\n}\n\n/** Create a removal diff entry */\nexport function opAddRange(\n  key: number,\n  valuelist: string | any[],\n): IDiffAddRange {\n  return { op: 'addrange', key: key, valuelist: valuelist };\n}\n\n/** Create a range removal diff entry */\nexport function opRemoveRange(key: number, length: number): IDiffRemoveRange {\n  return { op: 'removerange', key: key, length: length };\n}\n\n/** Create a range removal diff entry */\nexport function opPatch(\n  key: string | number,\n  diff: IDiffEntry[] | null,\n): IDiffPatch {\n  return { op: 'patch', key: key, diff: diff };\n}\n\n/**\n * Validate that a diff operation is valid to apply on a given base sequence\n */\nexport function validateSequenceOp(\n  base: ReadonlyArray<any> | string,\n  entry: IDiffEntry,\n): void {\n  if (typeof entry.key !== 'number') {\n    console.warn('Invalid patch details', base, entry);\n    throw new TypeError(\n      `Invalid patch sequence op: Key is not a number: ${entry.key}`,\n    );\n  }\n  let index = entry.key;\n  if (entry.op === 'addrange') {\n    if (index < 0 || index > base.length || isNaN(index)) {\n      throw new RangeError(\n        'Invalid add range diff op: Key out of range: ' + index,\n      );\n    }\n  } else if (entry.op === 'removerange') {\n    if (index < 0 || index >= base.length || isNaN(index)) {\n      throw new RangeError(\n        'Invalid remove range diff op: Key out of range: ' + index,\n      );\n    }\n    let skip = entry.length;\n    if (index + skip > base.length || isNaN(index)) {\n      throw new RangeError('Invalid remove range diff op: Range too long!');\n    }\n  } else if (entry.op === 'patch') {\n    if (index < 0 || index >= base.length || isNaN(index)) {\n      throw new RangeError('Invalid patch diff op: Key out of range: ' + index);\n    }\n  } else {\n    throw new Error('Invalid op: ' + entry.op);\n  }\n}\n\n/**\n * Validate that a diff operation is valid to apply on a given base object\n */\nexport function validateObjectOp(\n  base: any,\n  entry: IDiffEntry,\n  keys: string[],\n): void {\n  let op = entry.op;\n  if (typeof entry.key !== 'string') {\n    console.warn('Invalid patch details', base, entry, keys);\n    throw new TypeError(\n      `Invalid patch object op: Key is not a string: ${entry.key}`,\n    );\n  }\n  let key = entry.key;\n\n  if (op === 'add') {\n    if (valueIn(key, keys)) {\n      throw new Error('Invalid add key diff op: Key already present: ' + key);\n    }\n  } else if (op === 'remove') {\n    if (!valueIn(key, keys)) {\n      throw new Error('Invalid remove key diff op: Missing key: ' + key);\n    }\n  } else if (op === 'replace') {\n    if (!valueIn(key, keys)) {\n      throw new Error('Invalid replace key diff op: Missing key: ' + key);\n    }\n  } else if (op === 'patch') {\n    if (!valueIn(key, keys)) {\n      throw new Error('Invalid patch key diff op: Missing key: ' + key);\n    }\n  } else {\n    throw new Error('Invalid op: ' + op);\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport * as nbformat from '@jupyterlab/nbformat';\n\nimport type { JSONObject } from '@lumino/coreutils';\n\nimport { NotifyUserError } from '../../common/exceptions';\n\nimport type { IDiffEntry, IDiffArrayEntry, IDiffReplace } from '../diffentries';\n\nimport { getSubDiffByKey, getDiffEntryByKey } from '../util';\n\nimport {\n  IStringDiffModel,\n  StringDiffModel,\n  createDirectStringDiffModel,\n  createPatchStringDiffModel,\n  setMimetypeFromCellType,\n} from './string';\n\nimport { OutputDiffModel, makeOutputModels } from './output';\n\nimport { ImmutableDiffModel, createImmutableModel } from './immutable';\n\n/**\n * Diff model for individual Notebook Cells\n */\nexport class CellDiffModel {\n  constructor(\n    source: IStringDiffModel,\n    metadata: IStringDiffModel,\n    outputs: OutputDiffModel[] | null,\n    executionCount: ImmutableDiffModel | null,\n    cellType: string,\n    cellId: ImmutableDiffModel,\n  ) {\n    this.source = source;\n    this.metadata = metadata;\n    this.outputs = outputs;\n    this.executionCount = executionCount;\n    this.cellType = cellType;\n    this.cellId = cellId;\n    if (outputs === null && cellType === 'code') {\n      throw new NotifyUserError('Invalid code cell, missing outputs!');\n    }\n    this.metadata.collapsible = true;\n    this.metadata.collapsibleHeader = 'Metadata changed';\n    this.metadata.startCollapsed = true;\n  }\n\n  /**\n   * Diff model for the source field.\n   */\n  source: IStringDiffModel;\n\n  /**\n   * Diff model for the metadata field.\n   */\n  metadata: IStringDiffModel;\n\n  /**\n   * Diff model for the outputs field. Can be null.\n   *\n   * A null value signifies that the cell is not a\n   * code cell type.\n   */\n  outputs: OutputDiffModel[] | null;\n\n  /**\n   * Diff model for the execution_count field. Can be null.\n   *\n   * A null value signifies that the cell is not a\n   * code cell type.\n   */\n  executionCount: ImmutableDiffModel | null;\n\n  /**\n   * The type of the notebook cell\n   */\n  cellType: string;\n\n  /**\n   * Diff model for the cell identifier.\n   */\n  cellId: ImmutableDiffModel;\n\n  /**\n   * Whether the cell has remained unchanged\n   */\n  get unchanged(): boolean {\n    let unchanged = this.source.unchanged;\n    unchanged = unchanged && (this.metadata ? this.metadata.unchanged : true);\n    if (this.outputs) {\n      for (let o of this.outputs) {\n        unchanged = unchanged && o.unchanged;\n      }\n    }\n    if (this.executionCount) {\n      // TODO: Ignore if option 'ignore minor' set?\n      unchanged = unchanged && this.executionCount.unchanged;\n    }\n    return unchanged;\n  }\n\n  /**\n   * Whether the cell has been added to the notebook (new cell)\n   */\n  get added(): boolean {\n    return this.source.added;\n  }\n\n  /**\n   * Whether the cell has been deleted/removed from the notebook\n   */\n  get deleted(): boolean {\n    return this.source.deleted;\n  }\n\n  /**\n   * Chunked outputs\n   */\n  getChunkedOutputs(): OutputDiffModel[][] | null {\n    if (this.outputs === null) {\n      return null;\n    }\n    const chunks: OutputDiffModel[][] = [];\n    if (this.added || this.deleted) {\n      // Should not chunk outputs for added/deleted cells\n      // simply make one element chunks:\n      for (let o of this.outputs) {\n        chunks.push([o]);\n      }\n    } else {\n      let currentChunk: OutputDiffModel[] = [];\n      for (let o of this.outputs) {\n        if (o.added || o.deleted) {\n          currentChunk.push(o);\n        } else {\n          if (currentChunk.length) {\n            chunks.push(currentChunk);\n          }\n          chunks.push([o]);\n          currentChunk = [];\n        }\n      }\n      if (currentChunk.length) {\n        chunks.push(currentChunk);\n      }\n    }\n    return chunks;\n  }\n}\n\nexport function createPatchedCellDiffModel(\n  base: nbformat.ICell,\n  diff: IDiffEntry[] | null,\n  nbMimetype: string,\n): CellDiffModel {\n  let source: StringDiffModel | null = null;\n  let metadata: StringDiffModel | null = null;\n  let outputs: OutputDiffModel[] | null = null;\n  let executionCount: ImmutableDiffModel | null = null;\n\n  let subDiff = getSubDiffByKey(diff, 'source');\n  if (subDiff) {\n    source = createPatchStringDiffModel(base.source, subDiff);\n  } else {\n    source = createDirectStringDiffModel(base.source, base.source);\n  }\n  setMimetypeFromCellType(source, base, nbMimetype);\n\n  subDiff = getSubDiffByKey(diff, 'metadata');\n  metadata = subDiff\n    ? createPatchStringDiffModel(base.metadata as JSONObject, subDiff)\n    : createDirectStringDiffModel(\n        base.metadata as JSONObject,\n        base.metadata as JSONObject,\n      );\n\n  if (nbformat.isCode(base)) {\n    let outputsBase = base.outputs;\n    let outputsDiff = getSubDiffByKey(diff, 'outputs') as IDiffArrayEntry[];\n    if (outputsDiff) {\n      // Outputs patched\n      outputs = makeOutputModels(outputsBase, null, outputsDiff);\n    } else {\n      // Outputs unchanged\n      outputs = makeOutputModels(outputsBase, outputsBase);\n    }\n    let execBase = base.execution_count;\n    let execDiff = getDiffEntryByKey(\n      diff,\n      'execution_count',\n    ) as IDiffReplace | null;\n    // Pass base as remote, which means fall back to unchanged if no diff:\n    executionCount = createImmutableModel(execBase, execBase, execDiff);\n  }\n  let idBase = base.id as string | undefined;\n  let idDiff = getDiffEntryByKey(diff, 'id') as IDiffReplace | null;\n  const idModel = createImmutableModel(idBase, idBase, idDiff);\n  return new CellDiffModel(\n    source,\n    metadata,\n    outputs,\n    executionCount,\n    base.cell_type,\n    idModel,\n  );\n}\n\nexport function createUnchangedCellDiffModel(\n  base: nbformat.ICell,\n  nbMimetype: string,\n): CellDiffModel {\n  let source = createDirectStringDiffModel(base.source, base.source);\n  setMimetypeFromCellType(source, base, nbMimetype);\n  let metadata = createDirectStringDiffModel(\n    base.metadata as JSONObject,\n    base.metadata as JSONObject,\n  );\n  let outputs: OutputDiffModel[] | null = null;\n  let executionCount: ImmutableDiffModel | null = null;\n\n  if (nbformat.isCode(base)) {\n    outputs = makeOutputModels(base.outputs, base.outputs);\n    let execBase = base.execution_count;\n    executionCount = createImmutableModel(execBase, execBase);\n  } else {\n    // markdown or raw cell\n  }\n  let idBase = base.id as string | undefined;\n  const idModel = createImmutableModel(idBase, idBase);\n  return new CellDiffModel(\n    source,\n    metadata,\n    outputs,\n    executionCount,\n    base.cell_type,\n    idModel,\n  );\n}\n\nexport function createAddedCellDiffModel(\n  remote: nbformat.ICell,\n  nbMimetype: string,\n): CellDiffModel {\n  let source = createDirectStringDiffModel(null, remote.source);\n  setMimetypeFromCellType(source, remote, nbMimetype);\n  let metadata = createDirectStringDiffModel(\n    null,\n    remote.metadata as JSONObject,\n  );\n  let outputs: OutputDiffModel[] | null = null;\n  let executionCount: ImmutableDiffModel | null = null;\n  if (nbformat.isCode(remote)) {\n    outputs = makeOutputModels(null, remote.outputs);\n    executionCount = createImmutableModel(null, remote.execution_count);\n  }\n  let idRemote = remote.id as string | undefined;\n  const idModel = createImmutableModel(null, idRemote);\n  return new CellDiffModel(\n    source,\n    metadata,\n    outputs,\n    executionCount,\n    remote.cell_type,\n    idModel,\n  );\n}\n\nexport function createDeletedCellDiffModel(\n  base: nbformat.ICell,\n  nbMimetype: string,\n): CellDiffModel {\n  let source = createDirectStringDiffModel(base.source, null);\n  setMimetypeFromCellType(source, base, nbMimetype);\n  let metadata = createDirectStringDiffModel(base.metadata as JSONObject, null);\n  let outputs: OutputDiffModel[] | null = null;\n  let executionCount: ImmutableDiffModel | null = null;\n  if (nbformat.isCode(base)) {\n    outputs = makeOutputModels(base.outputs, null);\n    let execBase = base.execution_count;\n    executionCount = createImmutableModel(execBase, null);\n  }\n  let idBase = base.id as string | undefined;\n  const idModel = createImmutableModel(idBase, null);\n  return new CellDiffModel(\n    source,\n    metadata,\n    outputs,\n    executionCount,\n    base.cell_type,\n    idModel,\n  );\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\n/**\n * Describes a model whose view can be collapsible.\n *\n * Intended as hints for a view of the model, and not a requirement.\n */\nexport interface ICollapsibleModel {\n  /**\n   * Whether a view of the model should be collapsible (hint)\n   */\n  collapsible: boolean;\n\n  /**\n   * String to show in header of collapser element\n   */\n  collapsibleHeader: string;\n\n  /**\n   * The initial state of a collapsible view\n   */\n  startCollapsed: boolean;\n}\n\n/**\n * Base interface for diff models.\n */\nexport interface IDiffModel extends ICollapsibleModel {\n  /**\n   * Is diff no-op?\n   */\n  unchanged: boolean;\n\n  /**\n   * Whether diff represents a simple addition\n   */\n  added: boolean;\n\n  /**\n   * Whether diff represents a simple deletion\n   */\n  deleted: boolean;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type { IDiffModel } from './common';\n\nimport type { IDiffImmutableObjectEntry } from '../diffentries';\n\nexport type ImmutableValue = string | number | boolean | null;\n\n/**\n * Standard implementation of the IStringDiffModel interface.\n */\nexport class ImmutableDiffModel implements IDiffModel {\n  /**\n   * ImmutableDiffModel constructor.\n   *\n   * `collapsible` and `collapsed` both defaults to false.\n   */\n  constructor(\n    base: ImmutableValue | undefined,\n    remote: ImmutableValue | undefined,\n    collapsible?: boolean,\n    header?: string,\n    collapsed?: boolean,\n  ) {\n    this.base = base;\n    this.remote = remote;\n\n    this.collapsible = collapsible === true;\n    if (this.collapsible) {\n      this.collapsibleHeader = header ? header : '';\n      this.startCollapsed = collapsed === true;\n    }\n  }\n\n  get unchanged(): boolean {\n    return this.base === this.remote;\n  }\n\n  get added(): boolean {\n    return this.base === undefined;\n  }\n\n  get deleted(): boolean {\n    return this.remote === undefined;\n  }\n\n  base: ImmutableValue | undefined;\n  remote: ImmutableValue | undefined;\n\n  collapsible: boolean;\n  collapsibleHeader: string;\n  startCollapsed: boolean;\n}\n\n/**\n * Create an ImmutableDiffModel from a base value, a remote value, and a single diff entry.\n *\n * Note: The requirement of a single diff entry means it will not support\n * an add/replace pair on the same key, as this should instead be represented\n * by a 'replace' op.\n *\n * @export\n * @param {(ImmutableValue | undefined)} base : The base value\n * @param {(IDiffImmutableObjectEntry | null)} diff : The diff entry, or null if unchanged\n * @returns {ImmutableDiffModel}\n */\nexport function createImmutableModel(\n  base: ImmutableValue | undefined,\n  remote: ImmutableValue | undefined,\n  diff?: IDiffImmutableObjectEntry | null,\n): ImmutableDiffModel {\n  if (!diff) {\n    return new ImmutableDiffModel(base, remote);\n  } else if (diff.op === 'add') {\n    if (base !== undefined) {\n      throw new Error('Invalid diff op on immutable value');\n    }\n    return new ImmutableDiffModel(base, diff.value);\n  } else if (diff.op === 'remove') {\n    if (base === undefined) {\n      throw new Error('Invalid diff op on immutable value');\n    }\n    return new ImmutableDiffModel(base, undefined);\n  } else {\n    // diff.op === 'replace'\n    if (base === undefined) {\n      throw new Error('Invalid diff op on immutable value');\n    }\n    return new ImmutableDiffModel(base, diff.value);\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './cell';\nexport * from './common';\nexport * from './immutable';\nexport * from './notebook';\nexport * from './output';\nexport * from './renderable';\nexport * from './string';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type * as nbformat from '@jupyterlab/nbformat';\n\nimport type { IDiffEntry, IDiffArrayEntry } from '../diffentries';\n\nimport { getSubDiffByKey } from '../util';\n\nimport { IStringDiffModel, createPatchStringDiffModel } from './string';\n\nimport {\n  CellDiffModel,\n  createUnchangedCellDiffModel,\n  createAddedCellDiffModel,\n  createDeletedCellDiffModel,\n  createPatchedCellDiffModel,\n} from './cell';\n\n/**\n * Diff model for a Jupyter Notebook\n */\nexport class NotebookDiffModel {\n  /**\n   * Create a new NotebookDiffModel from a base notebook and a list of diffs.\n   *\n   * The base as well as the diff entries are normally supplied by the nbdime\n   * server.\n   */\n  constructor(base: nbformat.INotebookContent, diff: IDiffEntry[]) {\n    // Process global notebook metadata field\n    let metaDiff = getSubDiffByKey(diff, 'metadata');\n    if (base.metadata && metaDiff) {\n      this.metadata = createPatchStringDiffModel(base.metadata, metaDiff);\n    } else {\n      this.metadata = null;\n    }\n    if (this.metadata) {\n      this.metadata.collapsible = true;\n      this.metadata.collapsibleHeader = 'Notebook metadata changed';\n      this.metadata.startCollapsed = true;\n    }\n    // The notebook metadata MIME type is used for determining the MIME type\n    // of source cells, so store it easily accessible:\n    let mimetype: string | undefined;\n    try {\n      mimetype = base.metadata.language_info!.mimetype;\n    } catch (e) {\n      // missing metadata (probably old notebook)\n    }\n    this.mimetype = mimetype || 'text/python';\n\n    // Build cell diff models. Follows similar logic to patching code:\n    this.cells = [];\n    this.chunkedCells = [];\n    let take = 0;\n    let skip = 0;\n    let previousChunkIndex = -1;\n    let currentChunk: CellDiffModel[] = [];\n    for (let e of (getSubDiffByKey(diff, 'cells') as IDiffArrayEntry[]) || []) {\n      let index = e.key;\n\n      // diff is sorted on index, so take any preceding cells as unchanged:\n      for (let i = take; i < index; i++) {\n        let cell = createUnchangedCellDiffModel(base.cells[i], this.mimetype);\n        this.cells.push(cell);\n        this.chunkedCells.push([cell]);\n      }\n\n      if (index !== previousChunkIndex) {\n        currentChunk = [];\n        this.chunkedCells.push(currentChunk);\n        previousChunkIndex = index;\n      }\n\n      // Process according to diff type:\n      if (e.op === 'addrange') {\n        // One or more inserted/added cells:\n        for (let ei of e.valuelist) {\n          let cell = createAddedCellDiffModel(\n            ei as nbformat.ICell,\n            this.mimetype,\n          );\n          this.cells.push(cell);\n          currentChunk.push(cell);\n        }\n        skip = 0;\n      } else if (e.op === 'removerange') {\n        // One or more removed/deleted cells:\n        skip = e.length;\n        for (let i = index; i < index + skip; i++) {\n          let cell = createDeletedCellDiffModel(base.cells[i], this.mimetype);\n          this.cells.push(cell);\n          currentChunk.push(cell);\n        }\n      } else if (e.op === 'patch') {\n        // Ensure patches gets their own chunk, even if they share index:\n        if (currentChunk.length > 0) {\n          currentChunk = [];\n          this.chunkedCells.push(currentChunk);\n        }\n        // A cell has changed:\n        let cell = createPatchedCellDiffModel(\n          base.cells[index],\n          e.diff,\n          this.mimetype,\n        );\n        this.cells.push(cell);\n        currentChunk.push(cell);\n        skip = 1;\n      }\n\n      // Skip the specified number of elements, but never decrement take.\n      // Note that take can pass index in diffs with repeated +/- on the\n      // same index, i.e. [op_remove(index), op_add(index, value)]\n      take = Math.max(take, index + skip);\n    }\n    // Take unchanged values at end\n    for (let i = take; i < base.cells.length; i++) {\n      let cell = createUnchangedCellDiffModel(base.cells[i], this.mimetype);\n      this.cells.push(cell);\n      this.chunkedCells.push([cell]);\n    }\n  }\n\n  /**\n   * Diff model of the notebook's root metadata field\n   */\n  metadata: IStringDiffModel | null;\n\n  /**\n   * The default MIME type according to the notebook's root metadata\n   */\n  mimetype: string;\n\n  /**\n   * List of all cell diff models, including unchanged, added/removed and\n   * changed cells, in order.\n   */\n  cells: CellDiffModel[];\n\n  /**\n   * List of chunks of cells, e.g. so that any changes that occur in the same\n   * location optionally can be shown side by side.\n   */\n  chunkedCells: CellDiffModel[][];\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport * as nbformat from '@jupyterlab/nbformat';\n\nimport { NotifyUserError } from '../../common/exceptions';\n\nimport type { IDiffArrayEntry } from '../diffentries';\n\nimport { RenderableDiffModel } from './renderable';\n\nimport type { IStringDiffModel } from './string';\n\nconst TEXT_MIMETYPES = [\n  'text/plain',\n  'application/vnd.jupyter.stdout',\n  'application/vnd.jupyter.stderr',\n];\n\n/**\n * Diff model for single cell output entries.\n *\n * Can converted to a StringDiffModel via the method `stringify()`, which also\n * takes an optional argument `key` which specifies a subpath of the IOutput to\n * make the model from.\n */\nexport class OutputDiffModel extends RenderableDiffModel<nbformat.IOutput> {\n  /**\n   * Checks whether the given mimetype is present in the output's mimebundle.\n   * If so, it returns the path/key to that mimetype's data. If not present,\n   * it returns null.\n   *\n   * See also: innerMimeType\n   */\n  hasMimeType(mimetype: string): string | string[] | null {\n    let outputs = this.base || this.remote!;\n    if (nbformat.isStream(outputs) && TEXT_MIMETYPES.indexOf(mimetype) !== -1) {\n      return 'text';\n    } else if (nbformat.isError(outputs)) {\n      return 'traceback';\n    } else if (\n      nbformat.isExecuteResult(outputs) ||\n      nbformat.isDisplayData(outputs)\n    ) {\n      let data = outputs.data;\n      if (mimetype in data) {\n        return ['data', mimetype];\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the expected MIME type of the IOutput subpath specified by `key`,\n   * as determined by the notebook format specification.\n   *\n   * Throws an error for unknown keys.\n   *\n   * See also: hasMimeType\n   */\n  innerMimeType(key: string | string[]): string {\n    let t = (this.base || this.remote!).output_type;\n    if (\n      (t === 'stream' && key === 'text') ||\n      (t === 'error' && key === 'traceback')\n    ) {\n      // TODO: 'application/vnd.jupyter.console-text'?\n      return 'text/plain';\n    } else if (\n      (t === 'execute_result' || t === 'display_data') &&\n      Array.isArray(key)\n    ) {\n      return key[1];\n    }\n    throw new NotifyUserError('Unknown MIME type for key: ' + key);\n  }\n\n  /**\n   * Can be converted to a StringDiffModel via the method `stringify()`, which also\n   * takes an optional argument `key` which specifies a subpath of the IOutput to\n   * make the model from.\n   */\n  stringify(key?: string | string[]): IStringDiffModel {\n    let model = super.stringify(key);\n    if (key) {\n      model.mimetype = this.innerMimeType(key);\n    }\n    return model;\n  }\n}\n\n/**\n * Function used to create a list of models for a list diff\n *\n * - If base and remote are both non-null and equal, it returns\n *   a list of models representing unchanged entries.\n * - If base and a diff is given, it ignores remote and returns\n *   a list of models representing the diff.\n * - If base is null, it returns a list of models representing\n *   added entries.\n * - If remote is null, it returns a list of models representing\n *   deleted entries.\n */\nexport function makeOutputModels(\n  base: nbformat.IOutput[] | null,\n  remote: nbformat.IOutput[] | null,\n  diff?: IDiffArrayEntry[] | null,\n): OutputDiffModel[] {\n  let models: OutputDiffModel[] = [];\n  if (remote === null && !diff) {\n    if (base === null) {\n      throw new Error('Either base or remote need to be specififed!');\n    }\n    // Cell deleted\n    for (let o of base) {\n      models.push(new OutputDiffModel(o, null));\n    }\n  } else if (base === null) {\n    if (remote === null) {\n      throw new Error('Either base or remote need to be specififed!');\n    }\n    // Cell added\n    for (let o of remote) {\n      models.push(new OutputDiffModel(null, o));\n    }\n  } else if (remote === base) {\n    // All entries unchanged\n    for (let o of base) {\n      models.push(new OutputDiffModel(o, o));\n    }\n  } else if (diff) {\n    // Entries patched, remote will be null\n    let consumed = 0;\n    let skip = 0;\n    for (let d of diff) {\n      let index = d.key;\n      for (let o of base.slice(consumed, index)) {\n        // Add unchanged entries\n        models.push(new OutputDiffModel(o, o));\n      }\n      if (d.op === 'addrange') {\n        // Entries added\n        for (let o of d.valuelist) {\n          models.push(new OutputDiffModel(null, o));\n        }\n        skip = 0;\n      } else if (d.op === 'removerange') {\n        // Entries removed\n        let len = d.length;\n        for (let i = index; i < index + len; i++) {\n          models.push(new OutputDiffModel(base[i], null));\n        }\n        skip = len;\n      } else if (d.op === 'patch') {\n        // Entry changed\n        models.push(new OutputDiffModel(base[index], null, d.diff));\n        skip = 1;\n      } else {\n        throw new Error('Invalid diff operation: ' + d);\n      }\n      consumed = Math.max(consumed, index + skip);\n    }\n    for (let o of base.slice(consumed)) {\n      // Add unchanged entries\n      models.push(new OutputDiffModel(o, o));\n    }\n  } else {\n    throw new Error('Invalid arguments to makeOutputModels()');\n  }\n  return models;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport {\n  JSONValue,\n  JSONObject,\n  JSONExt,\n  JSONArray,\n  PartialJSONValue,\n} from '@lumino/coreutils';\n\nimport { Signal } from '@lumino/signaling';\n\nimport type { IDiffEntry } from '../diffentries';\n\nimport { getSubDiffByKey } from '../util';\n\nimport { patch } from '../../patch';\n\nimport type { IDiffModel } from './common';\n\nimport {\n  IStringDiffModel,\n  createDirectStringDiffModel,\n  createPatchStringDiffModel,\n} from './string';\n\n/**\n * Diff model for a renderable object (something that has an internal MimeBundle)\n *\n * Can be converted to a StringDiffModel via the method `stringify()`, which also\n * takes an optional argument `key` which specifies a subpath of the IOutput to\n * make the model from.\n */\nexport abstract class RenderableDiffModel<\n  T extends JSONValue | PartialJSONValue,\n> implements IDiffModel\n{\n  constructor(base: T | null, remote: T | null, diff?: IDiffEntry[] | null) {\n    if (!remote && !base) {\n      throw new Error('Either remote or base value need to be given');\n    }\n    this.base = base;\n    if (!remote && diff) {\n      this.remote = patch(base!, diff) as T;\n    } else {\n      this.remote = remote;\n    }\n    this.diff = diff || null;\n    this.collapsible = false;\n  }\n\n  get unchanged(): boolean {\n    return JSON.stringify(this.base) === JSON.stringify(this.remote);\n  }\n\n  get added(): boolean {\n    return this.base === null;\n  }\n\n  get deleted(): boolean {\n    return this.remote === null;\n  }\n\n  /**\n   * Checks whether the given mimetype is present in the entry's mimebundle.\n   * If so, it returns the path/key to that mimetype's data. If not present,\n   * it returns null.\n   */\n  abstract hasMimeType(mimetype: string): string | string[] | null;\n\n  /**\n   * Get the mimetype for a given key from hasMimeType.\n   */\n  abstract innerMimeType(key: string | string[]): string;\n\n  /**\n   * Convert to a StringDiffModel.\n   *\n   * Takes an optional argument `key` which specifies a subpath of the MimeBundle to\n   * make the model from.\n   */\n  stringify(key?: string | string[]): IStringDiffModel {\n    let getMemberByPath = function (\n      obj: JSONValue | null,\n      key: string | string[],\n      f?: (obj: any, key: string) => any,\n    ): JSONValue | null {\n      if (!obj) {\n        return obj;\n      }\n      if (Array.isArray(key)) {\n        const tail = key.length > 2 ? key.slice(1) : key[1];\n        if (f) {\n          return getMemberByPath(f(obj, key[0]), tail, f);\n        }\n        return getMemberByPath((obj as JSONObject)[key[0]], tail, f);\n      } else if (f) {\n        return f(obj, key);\n      }\n      return (obj as JSONObject)[key];\n    };\n    const baseCopy = JSONExt.deepCopy(this.base) as JSONObject;\n    let base = key ? getMemberByPath(baseCopy, key) : baseCopy;\n    const remoteCopy = JSONExt.deepCopy(this.remote) as JSONObject;\n    let remote = key ? getMemberByPath(remoteCopy, key) : remoteCopy;\n    let diff =\n      this.diff && key\n        ? (getMemberByPath(this.diff as any, key, getSubDiffByKey) as\n            | IDiffEntry[]\n            | null)\n        : this.diff;\n    let model: IStringDiffModel | null = null;\n    if (this.unchanged || this.added || this.deleted || !diff) {\n      model = createDirectStringDiffModel(base, remote);\n    } else {\n      model = createPatchStringDiffModel(\n        base as string | JSONObject | JSONArray,\n        diff,\n      );\n    }\n    model.mimetype = key ? this.innerMimeType(key) : 'application/json';\n    model.collapsible = this.collapsible;\n    model.collapsibleHeader = this.collapsibleHeader;\n    model.startCollapsed = this.startCollapsed;\n    return model;\n  }\n\n  /**\n   * Base value\n   */\n  base: T | null;\n\n  /**\n   * Remote value\n   */\n  remote: T | null;\n\n  /**\n   * Diff entries between base and remote\n   */\n  diff: IDiffEntry[] | null;\n\n  /**\n   * Whether outputs are trusted\n   */\n  get trusted(): boolean {\n    return this._trusted;\n  }\n  set trusted(value: boolean) {\n    if (this._trusted !== value) {\n      this._trusted = value;\n      this.trustedChanged.emit(value);\n    }\n  }\n\n  /**\n   * The present values of model.base/remote\n   */\n  get contents(): T[] {\n    let ret: T[] = [];\n    if (this.base) {\n      ret.push(this.base);\n    }\n    if (this.remote && this.remote !== this.base) {\n      ret.push(this.remote);\n    }\n    return ret;\n  }\n\n  trustedChanged = new Signal<RenderableDiffModel<T>, boolean>(this);\n\n  // ICollapsibleModel:\n  collapsible: boolean;\n  collapsibleHeader: string;\n  startCollapsed: boolean;\n\n  private _trusted: boolean;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport * as nbformat from '@jupyterlab/nbformat';\n\nimport {\n  JSONObject,\n  JSONArray,\n  JSONExt,\n  JSONValue,\n  PartialJSONObject,\n} from '@lumino/coreutils';\n\nimport type { IDiffEntry } from '../diffentries';\n\nimport { DiffRangeRaw, DiffRangePos, raw2Pos } from '../range';\n\nimport { Chunk, LineChunker } from '../../chunking';\n\nimport { patchStringified, stringifyAndBlankNull } from '../../patch';\n\nimport type { IDiffModel } from './common';\n\n/**\n * Interface for a string diff model.\n *\n * String diff models are used for any content where the final\n * diff should be presented as a difference between strings\n * (as compared to e.g. images). As such, it is NOT restricted\n * to cases where original content is in a string format.\n */\nexport interface IStringDiffModel extends IDiffModel {\n  /**\n   * Base value\n   */\n  base: string | null;\n\n  /**\n   * Remote value\n   */\n  remote: string | null;\n\n  /**\n   * Mimetype of the data the string represents.\n   *\n   * Can be used for things such as syntax highlighting.\n   */\n  mimetype: string;\n\n  /**\n   * Location of additions, as positions in the remote value.\n   *\n   * Locations should be sorted on the ranges' `from` position\n   */\n  additions: DiffRangePos[];\n\n  /**\n   * Location of deletions, as positions in the base value.\n   *\n   * Locations should be sorted on the ranges' `from` position\n   */\n  deletions: DiffRangePos[];\n\n  /**\n   * A function that will separate the diff into chunks.\n   */\n  getLineChunks(): Chunk[];\n\n  /**\n   * Create an iterator for iterating over the diffs in order\n   */\n  iterateDiffs(): StringDiffModel.DiffIter;\n}\n\n/**\n * Standard implementation of the IStringDiffModel interface.\n */\nexport class StringDiffModel implements IStringDiffModel {\n  /**\n   * StringDiffModel constructor.\n   *\n   * Will translate additions and deletions from absolute\n   * coordinates, into {line, ch} based coordinates.\n   * Both should be sorted on the `from` position before passing.\n   *\n   * Collapsible and collapsed both defaults to false.\n   */\n  constructor(\n    public base: string | null,\n    remote: string | null,\n    additions: DiffRangeRaw[],\n    deletions: DiffRangeRaw[],\n    collapsible?: boolean,\n    header?: string,\n    collapsed?: boolean,\n  ) {\n    this._remote = remote;\n    if (base === null) {\n      console.assert(deletions.length === 0);\n      this.deletions = [];\n    } else {\n      this.deletions = raw2Pos(deletions, base);\n    }\n    if (remote === null) {\n      console.assert(additions.length === 0);\n      this.additions = [];\n    } else {\n      this.additions = raw2Pos(additions, remote);\n    }\n\n    this.collapsible = collapsible === true;\n    if (this.collapsible) {\n      this.collapsibleHeader = header ? header : '';\n      this.startCollapsed = collapsed === true;\n    }\n  }\n\n  iterateDiffs(): StringDiffModel.DiffIter {\n    return new StringDiffModel.DiffIter(this);\n  }\n\n  /**\n   * Chunk additions/deletions into line-based chunks\n   */\n  getLineChunks(): Chunk[] {\n    let chunker = new LineChunker();\n    let i = this.iterateDiffs();\n    for (let v = i.next(); v !== undefined; v = i.next()) {\n      chunker.addDiff(v.range, v.isAddition);\n    }\n    return chunker.chunks;\n  }\n\n  get remote(): string | null {\n    return this._remote;\n  }\n  set remote(value: string | null) {\n    this._remote = value;\n  }\n\n  get unchanged(): boolean {\n    return this.base === this.remote;\n  }\n\n  get added(): boolean {\n    return this.base === null;\n  }\n\n  get deleted(): boolean {\n    return this.remote === null;\n  }\n\n  get additions(): DiffRangePos[] {\n    return this._additions;\n  }\n  set additions(value: DiffRangePos[]) {\n    this._additions = value;\n  }\n\n  get deletions(): DiffRangePos[] {\n    return this._deletions;\n  }\n  set deletions(value: DiffRangePos[]) {\n    this._deletions = value;\n  }\n\n  collapsible: boolean;\n  collapsibleHeader: string;\n  startCollapsed: boolean;\n\n  mimetype: string;\n\n  protected _remote: string | null;\n  protected _additions: DiffRangePos[];\n  protected _deletions: DiffRangePos[];\n}\n\nexport namespace StringDiffModel {\n  export type DiffIterValue =\n    | { range: DiffRangePos; isAddition: boolean }\n    | undefined;\n\n  export interface IIterator<T> {\n    next(): T | undefined;\n  }\n\n  export class DiffIter implements IIterator<DiffIterValue> {\n    constructor(model: IStringDiffModel) {\n      this.model = model;\n    }\n\n    next(): DiffIterValue | undefined {\n      // Figure out which element to take next\n      let isAddition: boolean | null = null;\n      let range: DiffRangePos | null = null;\n      let additions = this.model.additions;\n      let deletions = this.model.deletions;\n      let hintTakeDeletion = this.hintTakeDeletion;\n      this.hintTakeDeletion = false;\n      if (this.ia < this.model.additions.length) {\n        if (this.id < deletions.length) {\n          let ra = additions[this.ia];\n          let rd = deletions[this.id];\n          if (\n            ra.from.line === rd.from.line - this.editOffset &&\n            ra.from.column === rd.from.column\n          ) {\n            // An addition and deletion start at seemingly same location\n            // Take addition, and flag to ensure deletion gets taken next\n            if (hintTakeDeletion) {\n              isAddition = false;\n            } else {\n              this.hintTakeDeletion = true;\n              isAddition = true;\n            }\n          } else if (\n            ra.from.line < rd.from.line - this.editOffset ||\n            (ra.from.line === rd.from.line - this.editOffset &&\n              ra.from.column < rd.from.column)\n          ) {\n            // TODO: Character editOffset should also be used\n            isAddition = true;\n          } else {\n            isAddition = false;\n          }\n        } else {\n          // No more deletions\n          isAddition = true;\n        }\n      } else if (this.id < deletions.length) {\n        // No more additions\n        isAddition = false;\n      } else {\n        // Out of ranges!\n        this.done = true;\n        return undefined;\n      }\n\n      if (isAddition) {\n        range = additions[this.ia++];\n      } else {\n        range = deletions[this.id++];\n      }\n      let linediff = range.to.line - range.from.line;\n      if (range.endsOnNewline) {\n        linediff += 1;\n      }\n      this.editOffset += isAddition ? -linediff : linediff;\n      return { range: range, isAddition: isAddition };\n    }\n\n    editOffset = 0;\n    done = false;\n\n    protected model: IStringDiffModel;\n    protected ia = 0;\n    protected id = 0;\n    protected hintTakeDeletion = false;\n  }\n\n  export class SyncedDiffIter implements IIterator<DiffIterValue> {\n    static cmp(\n      a: DiffIterValue,\n      b: DiffIterValue,\n      offsetA: number,\n      offsetB: number,\n    ) {\n      if (a === undefined && b === undefined) {\n        return 0;\n      } else if (a === undefined) {\n        return 1;\n      } else if (b === undefined) {\n        return -1;\n      }\n      let lineA = a.range.from.line + (a.isAddition ? offsetA : 0);\n      let lineB = b.range.from.line + (b.isAddition ? offsetB : 0);\n      if (lineA < lineB || a.range.from.column < b.range.from.column) {\n        return -1;\n      } else if (lineA > lineB || a.range.from.column > b.range.from.column) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n\n    constructor(models: (IStringDiffModel | null)[]) {\n      this.models = [];\n      this.iterators = [];\n      this.values = [];\n      this.offsets = [];\n      // Set up iterator and dummy chunkers for other models\n      for (let m of models) {\n        if (m === null) {\n          continue;\n        }\n        this.models.push(m);\n        let it = m.iterateDiffs();\n        this.iterators.push(it);\n        this.offsets.push(0);\n        this.values.push(it.next());\n      }\n    }\n\n    next(): DiffIterValue {\n      // Compare in base index to see which diff is next\n      let i = 0;\n      for (let j = 1; j < this.values.length; ++j) {\n        if (\n          0 >\n          SyncedDiffIter.cmp(\n            this.values[j],\n            this.values[i],\n            this.iterators[j].editOffset,\n            this.iterators[i].editOffset,\n          )\n        ) {\n          i = j;\n        }\n      }\n      this.i = i;\n      let ret = this.values[i];\n      // Store the edit offset before taking next value\n      this.currentOffset = this.offsets[i];\n      this.offsets[i] = this.iterators[i].editOffset;\n      // Check if complete\n      if (ret !== undefined) {\n        this.values[i] = this.iterators[i].next();\n      }\n      return ret;\n    }\n\n    currentModel(): IStringDiffModel {\n      return this.models[this.i];\n    }\n\n    currentOffset = 0;\n\n    protected i: number;\n\n    protected models: IStringDiffModel[];\n    protected iterators: DiffIter[];\n    protected values: DiffIterValue[];\n    protected offsets: number[];\n  }\n}\n\n/**\n * Creates a StringDiffModel based on a patch operation.\n *\n * If base is not a string, it is assumed to be a JSON object/array,\n * and it will be stringified according to JSON stringification\n * rules.\n */\nexport function createPatchStringDiffModel(\n  base: string | JSONObject | JSONArray | PartialJSONObject,\n  diff: IDiffEntry[],\n): StringDiffModel {\n  console.assert(!!diff, 'Patch model needs diff.');\n  const baseCopy = JSONExt.deepCopy(base) as JSONObject;\n  let baseStr = stringifyAndBlankNull(baseCopy);\n  let out = patchStringified(baseCopy, diff);\n  return new StringDiffModel(baseStr, out.remote, out.additions, out.deletions);\n}\n\n/**\n * Factory for creating cell diff models for added, removed or unchanged content.\n *\n * If base is null, it will be treated as added, if remote is null it will be\n * treated as removed. Otherwise base and remote should be equal, represeting\n * unchanged content.\n */\nexport function createDirectStringDiffModel(\n  base: JSONValue | null,\n  remote: JSONValue | null,\n): StringDiffModel {\n  let baseStr: string | null = stringifyAndBlankNull(base);\n  let remoteStr: string | null = stringifyAndBlankNull(remote);\n  let additions: DiffRangeRaw[] = [];\n  let deletions: DiffRangeRaw[] = [];\n\n  if (base === null && remote === null) {\n    throw new Error(\n      'Invalid arguments to createDirectStringDiffModel(). ' +\n        'Both base and remote cannot be equal!',\n    );\n  } else if (base === null) {\n    // Added cell\n    baseStr = null;\n    additions.push(new DiffRangeRaw(0, remoteStr.length, undefined));\n  } else if (remote === null) {\n    // Deleted cell\n    remoteStr = null;\n    deletions.push(new DiffRangeRaw(0, baseStr.length, undefined));\n  } else if (remoteStr !== baseStr) {\n    throw new Error(\n      'Invalid arguments to createDirectStringDiffModel(). ' +\n        'Either base or remote should be null, or they should be equal!',\n    );\n  }\n  return new StringDiffModel(baseStr, remoteStr, additions, deletions);\n}\n\n/**\n * Assign MIME type to an IStringDiffModel based on the cell type.\n *\n * The parameter nbMimetype is the MIME type set for the entire notebook, and is\n * used as the MIME type for code cells.\n */\nexport function setMimetypeFromCellType(\n  model: IStringDiffModel,\n  cell: nbformat.ICell,\n  nbMimetype: string,\n) {\n  if (cell.cell_type === 'code') {\n    model.mimetype = nbMimetype;\n  } else if (cell.cell_type === 'markdown') {\n    model.mimetype = 'text/markdown';\n  } else if (nbformat.isRaw(cell)) {\n    model.mimetype = cell.metadata.format || 'text/plain';\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type { CodeEditor } from '@jupyterlab/codeeditor';\n\nimport type { Text } from '@codemirror/state';\n\nimport { valueIn } from '../common/util';\n\nimport type { ChunkSource } from '../chunking';\n\n/**\n * Represents a range in a diff (typically in a string), in absolute indices (1D)\n */\nexport class DiffRangeRaw {\n  /**\n   * Create a new range [from, to = from + length)\n   */\n  constructor(from: number, length: number, source?: ChunkSource) {\n    this.from = from;\n    this.to = from + length;\n    this.source = source;\n  }\n\n  /**\n   * Change both `from` and `to` fields by the given offset\n   */\n  offset(offset: number) {\n    this.from += offset;\n    this.to += offset;\n  }\n\n  /**\n   * The starting index of the range.\n   */\n  from: number;\n\n  /**\n   * The final index of the range (non-inclusive, compatible with .slice())\n   */\n  to: number;\n\n  /**\n   * Diff source for merging\n   */\n  source?: ChunkSource;\n}\n\n/**\n * Class representing a string (diff) range in the format of\n * CodeMirror.Positions. Mainly makes sense for string diffs.\n *\n * The class also has fields to ease chunking of diffs without reparsing the\n * text.\n */\nexport class DiffRangePos {\n  /**\n   * Create a diff range. The `ch` field of the `to` position is defined as\n   * non-inclusive, i.e., it follows the syntax of String.slice().\n   */\n  constructor(\n    public from: CodeEditor.IPosition,\n    public to: CodeEditor.IPosition,\n    chunkStartLine?: boolean,\n    endsOnNewline?: boolean,\n  ) {\n    this.chunkStartLine = chunkStartLine === true;\n    this.endsOnNewline = endsOnNewline === true;\n  }\n\n  /**\n   * Whether to include the first line of the range (from.line) when chunking.\n   * If false, from.line + 1 should be used instead.\n   *\n   * Typically used when the diff starts with a newline.\n   */\n  chunkStartLine: boolean;\n\n  /**\n   * Whether the diff represented by the range ends on a newline.\n   */\n  endsOnNewline: boolean;\n\n  /**\n   * Diff source for merging\n   */\n  source?: ChunkSource;\n}\n\n/**\n * Utility function to find the line number of a given string index,\n * given the positions of all newlines.\n */\nfunction findLineNumber(nlPos: number[], index: number): number {\n  if (nlPos.length === 0) {\n    return 0;\n  }\n  let lineNo: number | null = null;\n  nlPos.some(function (el, i) {\n    if (el >= index) {\n      lineNo = i;\n      return true;\n    }\n    return false;\n  });\n  if (lineNo === null) {\n    return nlPos.length;\n  }\n  return lineNo;\n}\n\nexport function posToOffset(doc: Text, pos: CodeEditor.IPosition) {\n  return doc.line(pos.line + 1).from + pos.column;\n}\nexport function offsetToPos(doc: Text, offset: number) {\n  let line = doc.lineAt(offset);\n  return { line: line.number - 1, column: offset - line.from };\n}\n\n/**\n * Function to convert an array of DiffRangeRaw to DiffRangePos. The\n * `text` parameter is the text in which the ranges exist.\n */\nexport function raw2Pos(raws: DiffRangeRaw[], text: string): DiffRangePos[] {\n  // Find all newline's indices in text\n  let adIdx: number[] = [];\n  let i = -1;\n  while (-1 !== (i = text.indexOf('\\n', i + 1))) {\n    adIdx.push(i);\n  }\n  let result: DiffRangePos[] = [];\n  // Find line numbers from raw index\n  for (let r of raws) {\n    // First `from` position:\n    let line = findLineNumber(adIdx, r.from);\n    let lineStartIdx = line > 0 ? adIdx[line - 1] + 1 : 0;\n    let from: CodeEditor.IPosition = {\n      line: line,\n      column: r.from - lineStartIdx,\n    };\n\n    // Then `to` position:\n    line = findLineNumber(adIdx, r.to - 1); // `to` is non-inclusive\n    lineStartIdx = line > 0 ? adIdx[line - 1] + 1 : 0;\n    let to: CodeEditor.IPosition = { line: line, column: r.to - lineStartIdx };\n    // Finally, add some chunking hints:\n    let startsOnNewLine = valueIn(r.from, adIdx);\n    let endsOnNewline = valueIn(r.to - 1, adIdx); // non-inclusive\n    let firstLineNew =\n      from.column === 0 &&\n      (from.line !== to.line || endsOnNewline || r.to === text.length);\n    let chunkFirstLine =\n      firstLineNew ||\n      !startsOnNewLine ||\n      // Neither preceding nor following character is a newline\n      (!valueIn(r.from - 1, adIdx) && !valueIn(r.to, adIdx));\n    let pos = new DiffRangePos(from, to, chunkFirstLine, endsOnNewline);\n    pos.source = r.source;\n    result.push(pos);\n  }\n  return result;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport {\n  sortByKey,\n  shallowCopy,\n  accumulateLengths,\n  splitLines,\n} from '../common/util';\n\nimport {\n  IDiffEntry,\n  IDiffArrayEntry,\n  IDiffPatch,\n  opAddRange,\n  opRemoveRange,\n  validateSequenceOp,\n} from './diffentries';\n\n/**\n * The indentation to use for JSON stringify.\n */\nexport const JSON_INDENT = '  ';\n\n/**\n * Search the list of diffs for an entry with the given key.\n *\n * Returns the first found entry, or null if not entry was found.\n */\nexport function getSubDiffByKey(\n  diff: IDiffEntry[] | null,\n  key: string | number,\n): IDiffEntry[] | null {\n  if (!diff) {\n    return null;\n  }\n  for (let i = 0; i < diff.length; ++i) {\n    if (diff[i].key === key) {\n      return (diff[i] as IDiffPatch).diff || null;\n    }\n  }\n  return null;\n}\n\n/**\n * Search the list of diffs for an entry with the given key.\n *\n * Returns the first found entry, or null if not entry was found.\n */\nexport function getDiffEntryByKey(\n  diff: IDiffEntry[] | null,\n  key: string | number,\n): IDiffEntry | null {\n  if (!diff) {\n    return null;\n  }\n  for (let i = 0; i < diff.length; ++i) {\n    if (diff[i].key === key) {\n      return diff[i];\n    }\n  }\n  return null;\n}\n\nfunction validateStringDiff(\n  base: string[],\n  entry: IDiffArrayEntry,\n  lineToChar: number[],\n): void {\n  // First valdiate line ops:\n  validateSequenceOp(base, entry);\n\n  if (entry.op === 'patch') {\n    let line = base[entry.key];\n    let diff = entry.diff;\n    if (diff !== null) {\n      for (let d of diff) {\n        validateSequenceOp(line, d);\n      }\n    }\n  }\n}\n\n/**\n * Remove the merge source indicator from a diff (returns a copy).\n */\nexport function stripSource(diff: IDiffEntry[] | null): IDiffEntry[] | null {\n  if (!diff) {\n    return null;\n  }\n  let ret: IDiffEntry[] = [];\n  for (let e of diff) {\n    if (e.op === 'patch') {\n      ret.push({\n        key: e.key,\n        op: e.op,\n        diff: stripSource(e.diff),\n      });\n    } else {\n      let d = shallowCopy(e);\n      delete d.source;\n      ret.push(d);\n    }\n  }\n  return ret;\n}\n\n/**\n * Translates a diff of strings split by str.splitlines() to a diff of the\n * joined multiline string\n */\nexport function flattenStringDiff(\n  val: string[] | string,\n  diff: IDiffArrayEntry[],\n): IDiffArrayEntry[] {\n  if (typeof val === 'string') {\n    val = splitLines(val);\n  }\n  let lineToChar = [0].concat(accumulateLengths(val));\n  let flattened: IDiffArrayEntry[] = [];\n  for (let e of diff) {\n    // Frist validate op:\n    validateStringDiff(val, e, lineToChar);\n    let lineOffset = lineToChar[e.key];\n    if (e.op === 'patch') {\n      let pdiff = e.diff as IDiffArrayEntry[];\n      if (pdiff !== null) {\n        for (let p of pdiff) {\n          let d = shallowCopy(p);\n          d.key += lineOffset;\n          flattened.push(d);\n        }\n      }\n    } else {\n      // Other ops simply have keys which refer to lines\n      let d: IDiffEntry | null = null;\n      if (e.op === 'addrange') {\n        d = opAddRange(lineOffset, (e.valuelist as any[]).join(''));\n      } else {\n        // e.op === 'removerange'\n        let idx = e.key + e.length;\n        d = opRemoveRange(lineOffset, lineToChar[idx] - lineOffset);\n      }\n      d.source = e.source;\n      flattened.push(d);\n    }\n  }\n  // Finally, sort on key (leaving equal items in original order)\n  // This is done since the original diffs are sorted deeper first!\n  return sortByKey(flattened, 'key');\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport { Panel, Widget } from '@lumino/widgets';\n\nimport { IRenderMimeRegistry, MimeModel } from '@jupyterlab/rendermime';\n\nimport type { TranslationBundle } from '@jupyterlab/translation';\n\nimport { DiffPanel } from '../../common/basepanel';\n\nimport { CollapsiblePanel } from '../../common/collapsiblepanel';\n\nimport type {\n  ICellDiffWidgetOptions,\n  IMimeDiffWidgetOptions,\n} from '../../common/interfaces';\n\nimport { createNbdimeMergeView } from '../../common/mergeview';\n\nimport { hasEntries } from '../../common/util';\n\nimport { FlexPanel } from '../../upstreaming/flexpanel';\n\nimport {\n  CellDiffModel,\n  IDiffModel,\n  StringDiffModel,\n  OutputDiffModel,\n  ImmutableDiffModel,\n} from '../model';\n\nimport {\n  DIFF_CLASSES,\n  ADDED_DIFF_CLASS,\n  DELETED_DIFF_CLASS,\n  TWOWAY_DIFF_CLASS,\n  UNCHANGED_DIFF_CLASS,\n  CHUNK_PANEL_CLASS,\n  ADDED_CHUNK_PANEL_CLASS,\n  REMOVED_CHUNK_PANEL_CLASS,\n} from './common';\n\nimport { OutputPanel } from './output';\n\n/**\n * The class name added to the prompt area of cell.\n */\nconst PROMPT_CLASS = 'jp-InputPrompt';\n\nexport const CELLDIFF_CLASS = 'jp-Cell-diff';\n\nexport const OUTPUTS_DIFF_CLASS = 'jp-Diff-outputsContainer';\n\nconst EXECUTION_COUNT_CLASS = 'jp-Cellrow-header-executionCount';\nconst CELL_ID_CLASS = 'jp-Cellrow-header-cellId';\nconst HEADER_ROW_CLASS = 'jp-Cellrow-header';\nconst SOURCE_ROW_CLASS = 'jp-Cellrow-source';\nconst METADATA_ROW_CLASS = 'jp-Cellrow-metadata';\nconst OUTPUTS_ROW_CLASS = 'jp-Cellrow-outputs';\n\nexport interface ICellDiffViewOptions<T extends IDiffModel = IDiffModel>\n  extends IMimeDiffWidgetOptions<T> {\n  parent: CellDiffModel;\n  editorClasses: string[];\n}\n\n/**\n * CellDiffWidget for cell changes\n */\nexport class CellDiffWidget extends DiffPanel<CellDiffModel> {\n  /**\n   *\n   */\n  constructor({\n    rendermime,\n    mimetype,\n    ...others\n  }: ICellDiffWidgetOptions<CellDiffModel>) {\n    super(others);\n    this.addClass(CELLDIFF_CLASS);\n    this._rendermime = rendermime;\n    this._trans = this._translator.load('nbdime');\n    this.mimetype = mimetype;\n\n    this.init();\n  }\n\n  protected init() {\n    let model = this.model;\n\n    // Add 'cell added/deleted' notifiers, as appropriate\n    let CURR_DIFF_CLASSES = DIFF_CLASSES.slice(); // copy\n    if (model.added) {\n      this.addClass(ADDED_DIFF_CLASS);\n      CURR_DIFF_CLASSES = DIFF_CLASSES.slice(1, 2);\n    } else if (model.deleted) {\n      this.addClass(DELETED_DIFF_CLASS);\n      CURR_DIFF_CLASSES = DIFF_CLASSES.slice(0, 1);\n    } else if (model.unchanged) {\n      this.addClass(UNCHANGED_DIFF_CLASS);\n    } else {\n      this.addClass(TWOWAY_DIFF_CLASS);\n    }\n\n    // Add inputs and outputs, on a row-by-row basis\n    let sourceView = CellDiffWidget.createView({\n      model: model.source,\n      parent: model,\n      editorClasses: CURR_DIFF_CLASSES,\n      rendermime: this._rendermime,\n      editorFactory: this._editorFactory,\n      translator: this._translator,\n      ...this._viewOptions,\n    });\n    sourceView.addClass(SOURCE_ROW_CLASS);\n\n    if (model.executionCount || model.cellId) {\n      const createWidget = (text: string): Widget => {\n        let w = new Widget();\n        w.node.innerText = text;\n        return w;\n      };\n      const header = CellDiffWidget.createHeader();\n      FlexPanel.setGrow(header, 1);\n      sourceView.insertWidget(0, header);\n\n      const prompts = model.executionCount\n        ? CellDiffWidget.createPrompts(model.executionCount, model)\n        : { base: null, remote: null };\n      const ids = model.cellId\n        ? CellDiffWidget.createIdentifiers(model.cellId, model)\n        : { base: null, remote: null };\n\n      const views: ('base' | 'remote')[] = ['base', 'remote'];\n      for (let side of views) {\n        const prompt = prompts[side];\n        const id = ids[side];\n        if (model.executionCount && prompt !== null) {\n          let w = createWidget(prompt);\n          w.addClass(PROMPT_CLASS);\n          w.addClass(EXECUTION_COUNT_CLASS);\n          header.addWidget(w);\n        }\n        if (model.cellId && id !== null) {\n          let w = createWidget(`Cell ID: ${id}`);\n          w.addClass(CELL_ID_CLASS);\n          FlexPanel.setGrow(w, 1);\n          header.addWidget(w);\n        }\n      }\n    }\n\n    this.addWidget(sourceView);\n\n    if (!model.metadata.unchanged) {\n      let metadataView = CellDiffWidget.createView({\n        model: model.metadata,\n        parent: model,\n        editorClasses: CURR_DIFF_CLASSES,\n        rendermime: this._rendermime,\n        editorFactory: this._editorFactory,\n        translator: this._translator,\n        ...this._viewOptions,\n      });\n      metadataView.addClass(METADATA_ROW_CLASS);\n      this.addWidget(metadataView);\n    }\n    const chunks = model.getChunkedOutputs();\n    if (hasEntries(chunks)) {\n      let container = new Panel();\n      container.addClass(OUTPUTS_DIFF_CLASS);\n      let changed = false;\n      for (let chunk of chunks) {\n        if (chunk.length === 1) {\n          let o = chunk[0];\n          let outputsWidget = CellDiffWidget.createView({\n            model: o,\n            parent: model,\n            editorClasses: CURR_DIFF_CLASSES,\n            rendermime: this._rendermime,\n            editorFactory: this._editorFactory,\n            translator: this._translator,\n            ...this._viewOptions,\n          });\n          container.addWidget(outputsWidget);\n          changed = changed || !o.unchanged || o.added || o.deleted;\n        } else {\n          // Create add/remove chunk wrappers\n          let chunkPanel = new Panel();\n          chunkPanel.addClass(CHUNK_PANEL_CLASS);\n          let addedPanel = new Panel();\n          addedPanel.addClass(ADDED_CHUNK_PANEL_CLASS);\n          let removedPanel = new Panel();\n          removedPanel.addClass(REMOVED_CHUNK_PANEL_CLASS);\n          for (let o of chunk) {\n            let target = o.deleted ? removedPanel : addedPanel;\n            let outputsWidget = CellDiffWidget.createView({\n              model: o,\n              parent: model,\n              editorClasses: CURR_DIFF_CLASSES,\n              rendermime: this._rendermime,\n              editorFactory: this._editorFactory,\n              translator: this._translator,\n              ...this._viewOptions,\n            });\n            target.addWidget(outputsWidget);\n            changed = changed || !o.unchanged || o.added || o.deleted;\n          }\n          chunkPanel.addWidget(addedPanel);\n          chunkPanel.addWidget(removedPanel);\n          container.addWidget(chunkPanel);\n        }\n      }\n      if (model.added || model.deleted) {\n        container.addClass(OUTPUTS_ROW_CLASS);\n        this.addWidget(container);\n      } else {\n        let collapsed = !changed;\n        let header = changed\n          ? this._trans.__('Outputs changed')\n          : this._trans.__('Outputs unchanged');\n        let collapser = new CollapsiblePanel(container, header, collapsed);\n        collapser.addClass(OUTPUTS_ROW_CLASS);\n        this.addWidget(collapser);\n      }\n    }\n  }\n\n  static createHeader(): Panel {\n    let container = new FlexPanel({ direction: 'left-to-right' });\n    container.addClass(HEADER_ROW_CLASS);\n    return container;\n  }\n\n  static createPrompts(\n    model: ImmutableDiffModel,\n    parent: CellDiffModel,\n  ): Record<'base' | 'remote', string | null> {\n    const prompts: Record<'base' | 'remote', string | null> = {\n      base: null,\n      remote: null,\n    };\n    if (!parent.added) {\n      let base = model.base as number | null;\n      prompts.base = `In [${base || ' '}]:`;\n    }\n    if (!parent.unchanged && !parent.deleted) {\n      let remote = model.remote as number | null;\n      prompts.remote = `In [${remote || ' '}]:`;\n    }\n    return prompts;\n  }\n\n  static createIdentifiers(\n    model: ImmutableDiffModel,\n    parent: CellDiffModel,\n  ): Record<'base' | 'remote', string | null> {\n    return {\n      base: model.base as string | null,\n      remote: model.remote as string | null,\n    };\n  }\n\n  /**\n   * Create a new sub-view.\n   */\n  static createView({\n    model,\n    parent,\n    editorClasses,\n    rendermime,\n    editorFactory,\n    translator,\n    ...viewOptions\n  }: ICellDiffViewOptions): Panel {\n    let view: Panel;\n    if (model instanceof StringDiffModel) {\n      let inner: Widget | null = null;\n      if (model.unchanged && parent.cellType === 'markdown') {\n        let mimeModel = new MimeModel({\n          data: { 'text/markdown': model.base! },\n        });\n        let mimeType = rendermime.preferredMimeType(mimeModel.data, 'ensure');\n        if (!mimeType) {\n          throw new Error('No renderer for output');\n        }\n        let renderer = rendermime.createRenderer(mimeType);\n        renderer.renderModel(mimeModel);\n        inner = renderer;\n      } else {\n        inner = createNbdimeMergeView({\n          remote: model,\n          factory: editorFactory,\n          translator,\n          ...viewOptions,\n        });\n      }\n      if (model.collapsible) {\n        view = new CollapsiblePanel(\n          inner,\n          model.collapsibleHeader,\n          model.startCollapsed,\n        );\n      } else {\n        view = new Panel();\n        view.addWidget(inner);\n      }\n    } else if (model instanceof OutputDiffModel) {\n      view = new OutputPanel({\n        model,\n        parent,\n        editorClasses,\n        rendermime,\n        editorFactory,\n        translator,\n      });\n      if (model.added) {\n        view.addClass(ADDED_DIFF_CLASS);\n      } else if (model.deleted) {\n        view.addClass(DELETED_DIFF_CLASS);\n      } else if (model.unchanged) {\n        view.addClass(UNCHANGED_DIFF_CLASS);\n      } else {\n        view.addClass(TWOWAY_DIFF_CLASS);\n      }\n    } else {\n      throw new Error('Unrecognized model type.');\n    }\n    return view;\n  }\n\n  mimetype: string;\n\n  /**\n   * Get the model for the widget.\n   *\n   * #### Notes\n   * This is a read-only property.\n   */\n  get model(): CellDiffModel {\n    return this._model;\n  }\n\n  protected _rendermime: IRenderMimeRegistry;\n  protected _trans: TranslationBundle;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nexport const TWOWAY_DIFF_CLASS = 'jp-Diff-twoway';\nexport const ADDED_DIFF_CLASS = 'jp-Diff-added';\nexport const DELETED_DIFF_CLASS = 'jp-Diff-deleted';\nexport const UNCHANGED_DIFF_CLASS = 'jp-Diff-unchanged';\n\nexport const DIFF_CLASSES = ['jp-Diff-base', 'jp-Diff-remote'];\n\nexport const CHUNK_PANEL_CLASS = 'jp-Diff-addremchunk';\nexport const ADDED_CHUNK_PANEL_CLASS = 'jp-Diff-addedchunk';\nexport const REMOVED_CHUNK_PANEL_CLASS = 'jp-Diff-removedchunk';\nexport const ADD_DEL_LABEL_CLASS = 'jp-Diff-label';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './cell';\nexport * from './notebook';\nexport * from './metadata';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type { Widget } from '@lumino/widgets';\n\nimport { DiffPanel } from '../../common/basepanel';\n\nimport { createNbdimeMergeView } from '../../common/mergeview';\n\nimport { CollapsiblePanel } from '../../common/collapsiblepanel';\n\nimport type { IDiffWidgetOptions } from '../../common/interfaces';\n\nimport type { IStringDiffModel } from '../model';\n\nimport { TWOWAY_DIFF_CLASS } from './common';\n\nconst ROOT_METADATA_CLASS = 'jp-Metadata-diff';\n\n/**\n * MetadataWidget for changes to Notebook-level metadata\n */\nexport class MetadataDiffWidget extends DiffPanel<IStringDiffModel> {\n  constructor(options: IDiffWidgetOptions<IStringDiffModel>) {\n    super(options);\n    console.assert(!this._model.added && !this._model.deleted);\n    this.addClass(ROOT_METADATA_CLASS);\n    this.init();\n  }\n\n  init() {\n    let model = this._model;\n    if (!model.unchanged) {\n      this.addClass(TWOWAY_DIFF_CLASS);\n      let view: Widget = createNbdimeMergeView({\n        remote: model,\n        factory: this._editorFactory,\n        translator: this._translator,\n        ...this._viewOptions,\n      });\n      if (model.collapsible) {\n        view = new CollapsiblePanel(\n          view,\n          model.collapsibleHeader,\n          model.startCollapsed,\n        );\n      }\n      this.addWidget(view);\n    }\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport { Panel } from '@lumino/widgets';\n\nimport type { IRenderMimeRegistry } from '@jupyterlab/rendermime';\n\nimport { CellDiffWidget } from './cell';\n\nimport {\n  CHUNK_PANEL_CLASS,\n  ADDED_CHUNK_PANEL_CLASS,\n  REMOVED_CHUNK_PANEL_CLASS,\n} from './common';\n\nimport { MetadataDiffWidget } from './metadata';\n\nimport { DiffPanel } from '../../common/basepanel';\n\nimport type { IMimeDiffWidgetOptions } from '../../common/interfaces';\n\nimport type { NotebookDiffModel } from '../model';\n\nconst NBDIFF_CLASS = 'jp-Notebook-diff';\n\n/**\n * NotebookDiffWidget\n */\nexport class NotebookDiffWidget extends DiffPanel<NotebookDiffModel> {\n  constructor({\n    rendermime,\n    ...others\n  }: IMimeDiffWidgetOptions<NotebookDiffModel>) {\n    super(others);\n    this._rendermime = rendermime;\n    this.addClass(NBDIFF_CLASS);\n  }\n\n  /**\n   * Start adding sub-widgets.\n   *\n   * Separated from constructor to allow 'live' adding of widgets\n   */\n  init(): Promise<void> {\n    let model = this._model;\n    let rendermime = this._rendermime;\n\n    let work = Promise.resolve();\n    work = work.then(() => {\n      if (model.metadata) {\n        this.addWidget(\n          new MetadataDiffWidget({\n            model: model.metadata,\n            editorFactory: this._editorFactory,\n            translator: this._translator,\n            ...this._viewOptions,\n          }),\n        );\n      }\n    });\n    for (let chunk of model.chunkedCells) {\n      work = work.then(() => {\n        return new Promise<void>(resolve => {\n          if (chunk.length === 1 && !(chunk[0].added || chunk[0].deleted)) {\n            this.addWidget(\n              new CellDiffWidget({\n                model: chunk[0],\n                rendermime,\n                mimetype: model.mimetype,\n                editorFactory: this._editorFactory,\n                translator: this._translator,\n                ...this._viewOptions,\n              }),\n            );\n          } else {\n            let chunkPanel = new Panel();\n            chunkPanel.addClass(CHUNK_PANEL_CLASS);\n            let addedPanel = new Panel();\n            addedPanel.addClass(ADDED_CHUNK_PANEL_CLASS);\n            let removedPanel = new Panel();\n            removedPanel.addClass(REMOVED_CHUNK_PANEL_CLASS);\n            for (let cell of chunk) {\n              let target = cell.deleted ? removedPanel : addedPanel;\n              target.addWidget(\n                new CellDiffWidget({\n                  model: cell,\n                  rendermime,\n                  mimetype: model.mimetype,\n                  editorFactory: this._editorFactory,\n                  translator: this._translator,\n                  ...this._viewOptions,\n                }),\n              );\n            }\n            chunkPanel.addWidget(addedPanel);\n            chunkPanel.addWidget(removedPanel);\n            this.addWidget(chunkPanel);\n          }\n          // This limits us to drawing 60 cells per second, which shouldn't\n          // be a problem...\n          requestAnimationFrame(() => {\n            resolve();\n          });\n        });\n      });\n    }\n    return work;\n  }\n\n  /**\n   * Get the model for the widget.\n   *\n   * #### Notes\n   * This is a read-only property.\n   */\n  get model(): NotebookDiffModel {\n    return this._model;\n  }\n\n  private _rendermime: IRenderMimeRegistry;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type * as nbformat from '@jupyterlab/nbformat';\n\nimport type { TranslationBundle } from '@jupyterlab/translation';\n\nimport { Panel, Widget } from '@lumino/widgets';\n\nimport { each, find, toArray } from '@lumino/algorithm';\n\nimport {\n  IRenderMimeRegistry,\n  OutputModel,\n  IRenderMime,\n} from '@jupyterlab/rendermime';\n\nimport { DiffPanel } from '../../common/basepanel';\n\nimport { CollapsiblePanel } from '../../common/collapsiblepanel';\n\nimport { createNbdimeMergeView } from '../../common/mergeview';\n\nimport { buildSelect, unique, intersection } from '../../common/util';\n\nimport type { ICellDiffViewOptions } from './cell';\n\nimport {\n  ADDED_DIFF_CLASS,\n  DELETED_DIFF_CLASS,\n  TWOWAY_DIFF_CLASS,\n  UNCHANGED_DIFF_CLASS,\n  ADD_DEL_LABEL_CLASS,\n} from './common';\n\nimport { RenderableDiffView } from './renderable';\n\nimport type { OutputDiffModel } from '../model';\n\n/**\n * Class for output panel\n */\nconst OUTPUT_PANEL_CLASS = 'jp-Diff-outputPanel';\n\n/**\n * Class for a single rendered output view\n */\nconst RENDERED_OUTPUT_CLASS = 'jp-Diff-renderedOutput';\n\n/**\n * Output is untrusted, and can benefit from being trusted\n */\nconst UNTRUSTED_CLASS = 'jp-Diff-trustCandidate';\n\n/**\n * Menu with actions for outputs\n */\nconst HOVER_MENU_CLASS = 'jp-Diff-outputMenu';\n\n/**\n * Menu button to trust output content\n */\nconst TRUST_BUTTON_CLASS = 'jp-Diff-trustOutputButton';\n\n/**\n * Menu button for showing output as text instead of rendered\n */\nconst SOURCE_BUTTON_CLASS = 'jp-Diff-showOutputSourceButton';\n\n/**\n * Class for outputs which data is base64\n */\nconst DATA_IS_BASE64_CLASS = 'jp-diff-base64Output';\n\n/**\n * Class of dropdown for selecting mimetype to show\n */\n\nconst MIMETYPE_SELECT_CLASS = 'jp-Diff-outputMimetypeSelect';\n\n/**\n * A list of outputs that are sanitizable.\n */\nconst sanitizable = ['text/html'];\n\nlet _base64 =\n  /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\nfunction isBase64(data: string | null, minLength = 64): boolean {\n  return (\n    data !== null &&\n    data.length > minLength &&\n    _base64.test(data.replace('\\n', ''))\n  );\n}\n\n/**\n * A panel responsible for rendering an output diff\n */\nexport class OutputPanel extends DiffPanel<OutputDiffModel> {\n  /**\n   *\n   */\n  constructor({\n    parent: parentModel,\n    editorClasses,\n    rendermime,\n    ...others\n  }: ICellDiffViewOptions<OutputDiffModel>) {\n    super(others);\n    this.rendermime = rendermime;\n    this._trans = this._translator.load('nbdime');\n    this.editorClasses = editorClasses;\n\n    this._model.trustedChanged.connect(\n      (sender: OutputDiffModel, trusted: boolean) => {\n        this.trustedChanged(trusted);\n      },\n    );\n    if (OutputPanel.isTrustSignificant(this._model, this.rendermime)) {\n      this.addClass(UNTRUSTED_CLASS);\n    }\n\n    if (this._model.added) {\n      if (!parentModel.added) {\n        // Implies this is added output\n        let addSpacer = new Widget();\n        addSpacer.node.textContent = this._trans.__('Output added');\n        addSpacer.addClass(ADD_DEL_LABEL_CLASS);\n        this.addWidget(addSpacer);\n      }\n      this.addClass(ADDED_DIFF_CLASS);\n    } else if (this._model.deleted) {\n      if (!parentModel.deleted) {\n        // Implies this is deleted output\n        let delSpacer = new Widget();\n        delSpacer.node.textContent = this._trans.__('Output deleted');\n        delSpacer.addClass(ADD_DEL_LABEL_CLASS);\n        this.addWidget(delSpacer);\n      }\n      this.addClass(DELETED_DIFF_CLASS);\n    } else if (this._model.unchanged) {\n      this.addClass(UNCHANGED_DIFF_CLASS);\n    } else {\n      this.addClass(TWOWAY_DIFF_CLASS);\n    }\n\n    let view = this.createView();\n    this.initContainer(view);\n\n    this.createHoverMenu();\n    this.addClass(OUTPUT_PANEL_CLASS);\n  }\n\n  /**\n   * Add view to panel, possibly wrapped\n   */\n  protected initContainer(view: Widget) {\n    if (this._model.collapsible) {\n      this.container = new CollapsiblePanel(\n        view,\n        this._model.collapsibleHeader,\n        this._model.startCollapsed,\n      );\n    } else {\n      this.container = this;\n      this.container.addWidget(view);\n    }\n    this.view = view;\n  }\n\n  /**\n   * Replace a view with a new one\n   */\n  protected replaceView(view: Widget) {\n    let old = this.view;\n    let i = this.container.widgets.indexOf(old);\n    this.container.insertWidget(i, view);\n    old.parent = null!;\n    this.view = view;\n  }\n\n  /**\n   * Create a text or rendered view of the output diff model\n   */\n  protected createView(forceText = false): Widget {\n    let view: Widget | null = null;\n    let model = this._model;\n    let rendermime = this.rendermime;\n    // Take one of three actions, depending on output types\n    // 1) Renderable types: Side-by-side comparison.\n    // 2) Text-type output: Show a MergeView with text diff.\n    // 3) Unknown types: Stringified JSON diff.\n    let renderable = RenderableOutputView.canRender(model, rendermime);\n    if (renderable && !forceText) {\n      // 1.\n      let rov = new RenderableOutputView(\n        model,\n        this.editorClasses,\n        rendermime,\n        this.selectedMimetype!,\n      );\n      view = rov;\n    } else {\n      // 2. or 3.\n      view = this.createOutputTextView();\n    }\n    return view;\n  }\n\n  /**\n   * Create text view of output\n   */\n  protected createOutputTextView(): Widget {\n    // Take one of three actions, depending on output types\n    // 1) N/A here, see method createView above\n    // 2) Known, non-binary MIME: Show a MergeView with text diff.\n    // 3) Unknown types: Stringified JSON diff.\n    let view: Widget | undefined;\n    let model = this._model as OutputDiffModel;\n    // Find highest order MIME-type supported by rendermime\n    let key: string | string[] | null = null;\n    if (this.selectedMimetype === null) {\n      find(this.rendermime.mimeTypes, mt => {\n        key = model.hasMimeType(mt);\n        return key !== null;\n      });\n    } else {\n      key = model.hasMimeType(this.selectedMimetype);\n    }\n    if (key) {\n      let stringModel = model.stringify(key);\n      let aValue = stringModel.base || stringModel.remote!;\n      if (!isBase64(aValue)) {\n        // 2.\n        view = createNbdimeMergeView({\n          remote: stringModel,\n          factory: this._editorFactory,\n          translator: this._translator,\n          ...this._viewOptions,\n        });\n      }\n    }\n    if (!view) {\n      // 3.\n      view = createNbdimeMergeView({\n        remote: model.stringify(),\n        factory: this._editorFactory,\n        translator: this._translator,\n        ...this._viewOptions,\n      });\n    }\n    return view;\n  }\n\n  /**\n   * Creates a menu that is shown when hovering over the output.\n   *\n   * Stored in this.menu.\n   */\n  protected createHoverMenu() {\n    this.menu = new Panel();\n    this.menu.addClass(HOVER_MENU_CLASS);\n    this.container.addWidget(this.menu);\n\n    // Add rendered/source toggle:\n    let btnSource = document.createElement('button');\n    let sourceText = [this._trans.__('Show source'), this._trans.__('Render')];\n    btnSource.textContent = sourceText[0];\n    btnSource.onclick = (ev: MouseEvent) => {\n      this.forceText = !this.forceText;\n      btnSource.textContent = sourceText[this.forceText ? 1 : 0];\n      this.updateView();\n    };\n    let w = new Widget({ node: btnSource });\n    w.addClass(SOURCE_BUTTON_CLASS);\n    this.menu.addWidget(w);\n\n    // Add trust button:\n    let btnTrust = document.createElement('button');\n    btnTrust.textContent = this._trans.__('Trust');\n    btnTrust.onclick = (ev: MouseEvent) => {\n      // Triggers change event:\n      this._model.trusted = !this._model.trusted;\n    };\n    w = new Widget({ node: btnTrust });\n    w.addClass(TRUST_BUTTON_CLASS);\n    this.menu.addWidget(w);\n\n    // Add mimetype select:\n    let mimetypes: string[] = [];\n    for (let output of this._model.contents) {\n      let bundle = OutputModel.getData(output);\n      mimetypes = mimetypes.concat(Object.keys(bundle));\n    }\n    mimetypes = mimetypes.filter(unique);\n    if (mimetypes.length > 1) {\n      let cboMimetype = buildSelect(mimetypes);\n      let selectedMimetype = this.selectedMimetype;\n      if (selectedMimetype) {\n        cboMimetype.selectedIndex = mimetypes.indexOf(selectedMimetype);\n      }\n      cboMimetype.onchange = (ev: Event) => {\n        this.selectedMimetype = mimetypes[cboMimetype.selectedIndex];\n      };\n      w = new Widget({ node: cboMimetype });\n      w.addClass(MIMETYPE_SELECT_CLASS);\n      this.menu.addWidget(w);\n    } else if (mimetypes.length === 1) {\n      let mtLabel = document.createElement('span');\n      mtLabel.innerText = mimetypes[0];\n      w = new Widget({ node: mtLabel });\n      // w.addClass(MIMETYPE_SELECT_CLASS);\n      this.menu.addWidget(w);\n    }\n  }\n\n  /**\n   * Update trusted status\n   */\n  protected trustedChanged(trusted: boolean) {\n    this.updateView();\n    if (trusted) {\n      this.removeClass(UNTRUSTED_CLASS);\n    } else if (OutputPanel.isTrustSignificant(this._model, this.rendermime)) {\n      this.addClass(UNTRUSTED_CLASS);\n    }\n  }\n\n  /**\n   * Update view\n   */\n  protected updateView(): void {\n    let model = this._model;\n    if (this.view instanceof RenderableOutputView) {\n      // Previosuly rendered\n      if (\n        !this.forceText &&\n        RenderableOutputView.canRender(model, this.rendermime)\n      ) {\n        // Can still render\n        this.view.updateView(this.selectedMimetype!, model.trusted);\n      } else {\n        // Can no longer render\n        let view = this.createView(this.forceText);\n        this.replaceView(view);\n      }\n    } else {\n      // Previously text output\n      // Here, we replace the view irregardles of old vs new type\n      let view = this.createView(this.forceText);\n      this.replaceView(view);\n    }\n  }\n\n  protected get selectedMimetype(): string | null {\n    if (this._mimetype !== null) {\n      return this._mimetype;\n    }\n    let data = OutputModel.getData(this._model.base || this._model.remote!);\n    let mt = this.rendermime.preferredMimeType(\n      data,\n      this._model.trusted ? 'any' : 'ensure',\n    );\n    return mt === undefined ? null : mt;\n  }\n\n  protected set selectedMimetype(value: string | null) {\n    if (this._mimetype !== value) {\n      this._mimetype = value;\n      this.updateView();\n    }\n  }\n\n  protected rendermime: IRenderMimeRegistry;\n  protected editorClasses: string[];\n  protected container: Panel;\n\n  protected view: Widget;\n\n  protected menu: Panel;\n  protected _mimetype: string | null = null;\n  protected _trans: TranslationBundle;\n  protected forceText = false;\n\n  /**\n   * Whether trust can affect the output rendering.\n   */\n  static isTrustSignificant(\n    model: OutputDiffModel,\n    rendermime: IRenderMimeRegistry,\n  ): boolean {\n    if (model.trusted) {\n      return false;\n    }\n    let toTest: nbformat.IOutput[] = [];\n    if (model.base) {\n      toTest.push(model.base);\n    }\n    if (model.remote && model.remote !== model.base) {\n      toTest.push(model.remote);\n    }\n    for (let o of toTest) {\n      let untrustedModel = new OutputModel({ value: o, trusted: false });\n      let modelMimeTypes = Object.keys(untrustedModel.data);\n      let rendererMimeTypes = toArray(rendermime.mimeTypes);\n      let candidates = intersection(modelMimeTypes, rendererMimeTypes);\n      for (let mimeType of candidates) {\n        let factory = rendermime.getFactory(mimeType);\n        if (\n          factory &&\n          (!factory.safe || sanitizable.indexOf(mimeType) !== -1)\n        ) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Widget for an output with renderable MIME data.\n */\nexport class RenderableOutputView extends RenderableDiffView<nbformat.IOutput> {\n  constructor(\n    model: OutputDiffModel,\n    editorClass: string[],\n    rendermime: IRenderMimeRegistry,\n    mimetype: string,\n  ) {\n    super(model, editorClass, rendermime, mimetype);\n  }\n\n  /**\n   * Create a widget which renders the given cell output\n   */\n  protected createSubView(output: nbformat.IOutput, trusted: boolean): Widget {\n    let panel = new RenderedOutputWidget(this.rendermime);\n    panel.updateView(output, trusted, this.mimetype);\n    return panel;\n  }\n\n  /**\n   * Update trusted status\n   */\n  updateView(mimeType: string, trusted: boolean): void {\n    let i = 0;\n    let model = this.model;\n    this.mimetype = mimeType;\n    each(this.layout!.widgets, (w: Widget) => {\n      if (w instanceof RenderedOutputWidget) {\n        let output: nbformat.IOutput | null = null;\n        if (i === 0 && model.base) {\n          // Use base data\n          output = model.base;\n        } else if (model.remote) {\n          output = model.remote;\n        }\n        if (output) {\n          w.updateView(output, trusted, mimeType);\n        }\n        ++i;\n      }\n    });\n  }\n\n  protected declare model: OutputDiffModel;\n\n  /**\n   * Checks if a cell output can be rendered (either safe/trusted or\n   * sanitizable)\n   */\n  static canRender(\n    model: OutputDiffModel,\n    rendermime: IRenderMimeRegistry,\n  ): boolean {\n    let toTest = model.contents;\n    for (let o of toTest) {\n      let bundle = OutputModel.getData(o);\n      let mimetype = rendermime.preferredMimeType(\n        bundle,\n        model.trusted ? 'any' : 'ensure',\n      );\n      if (!mimetype) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nclass RenderedOutputWidget extends Panel {\n  /**\n   *\n   */\n  constructor(rendermime: IRenderMimeRegistry) {\n    super();\n    this.rendermime = rendermime;\n  }\n\n  updateView(output: nbformat.IOutput, trusted: boolean, mimetype: string) {\n    let old = this.renderer;\n    this.renderer = this.createRenderer(output, trusted, mimetype);\n    if (old !== undefined) {\n      old.dispose();\n    }\n    this.addWidget(this.renderer);\n  }\n\n  protected createRenderer(\n    output: nbformat.IOutput,\n    trusted: boolean,\n    mimetype: string,\n  ): IRenderMime.IRenderer {\n    let model = new OutputModel({ value: output, trusted });\n    let widget = this.rendermime.createRenderer(mimetype);\n    widget.renderModel(model);\n    widget.addClass(RENDERED_OUTPUT_CLASS);\n    let bundle = OutputModel.getData(output);\n    if (isBase64(bundle[mimetype] as string)) {\n      widget.addClass(DATA_IS_BASE64_CLASS);\n    }\n    return widget;\n  }\n\n  protected renderer: IRenderMime.IRenderer | undefined;\n\n  protected rendermime: IRenderMimeRegistry;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type { JSONValue, PartialJSONValue } from '@lumino/coreutils';\n\nimport { PanelLayout, Widget } from '@lumino/widgets';\n\nimport type { IRenderMimeRegistry } from '@jupyterlab/rendermime';\n\nimport type { RenderableDiffModel } from '../model';\n\n/**\n * Widget for outputs with renderable MIME data.\n */\nexport abstract class RenderableDiffView<\n  T extends JSONValue | PartialJSONValue,\n> extends Widget {\n  constructor(\n    model: RenderableDiffModel<T>,\n    editorClass: string[],\n    rendermime: IRenderMimeRegistry,\n    mimetype: string,\n  ) {\n    super();\n    this.rendermime = rendermime;\n    this.model = model;\n    this.mimetype = mimetype;\n    let bdata = model.base;\n    let rdata = model.remote;\n    this.layout = new PanelLayout();\n\n    let ci = 0;\n    if (bdata) {\n      let widget = this.createSubView(bdata, model.trusted);\n      this.layout.addWidget(widget);\n      widget.addClass(editorClass[ci++]);\n    }\n    if (rdata && rdata !== bdata) {\n      let widget = this.createSubView(rdata, model.trusted);\n      this.layout.addWidget(widget);\n      widget.addClass(editorClass[ci++]);\n    }\n  }\n\n  get layout(): PanelLayout | null {\n    return super.layout as PanelLayout | null;\n  }\n  set layout(value: PanelLayout | null) {\n    super.layout = value;\n  }\n\n  mimetype: string;\n\n  /**\n   * Create a widget which renders the given cell output\n   */\n  protected abstract createSubView(data: T, trusted: boolean): Widget;\n\n  protected rendermime: IRenderMimeRegistry;\n\n  protected model: RenderableDiffModel<T>;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n// This code is based on the CodeMirror mergeview.js source:\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n'use strict';\n\nimport {\n  IDiffEntry,\n  IDiffObjectEntry,\n  IDiffPatch,\n  opRemove,\n  opReplace,\n  opRemoveRange,\n  opPatch,\n  DiffCollection,\n} from '../diff/diffentries';\n\nimport { getSubDiffByKey, stripSource } from '../diff/util';\n\nimport { patch } from '../patch';\n\nimport {\n  arraysEqual,\n  deepCopy,\n  valueIn,\n  isPrefixArray,\n  findSharedPrefix,\n  splitLines,\n} from '../common/util';\n\nexport type DecisionPath = (string | number)[];\n\nexport interface IMergeDecision {\n  local_diff?: IDiffEntry[] | null;\n  remote_diff?: IDiffEntry[] | null;\n\n  conflict?: boolean;\n\n  action?: string;\n\n  common_path?: DecisionPath;\n\n  custom_diff?: IDiffEntry[] | null;\n\n  similar_insert?: IDiffEntry[] | null;\n}\n\nexport type Action =\n  | 'base'\n  | 'local'\n  | 'remote'\n  | 'local_then_remote'\n  | 'remote_then_local'\n  | 'custom'\n  | 'clear'\n  | 'clear_parent'\n  | 'either';\n\nfunction validateAction(action: string): Action {\n  if (\n    valueIn(action, [\n      'base',\n      'local',\n      'remote',\n      'local_then_remote',\n      'remote_then_local',\n      'custom',\n      'clear',\n      'clear_parent',\n      'either',\n    ])\n  ) {\n    return action as Action;\n  }\n  throw new Error('Invalid merge decision action: ' + action);\n}\n\n/**\n * Take the value, or take default if value is undefined\n */\nfunction valueOrDefault<T>(value: T | undefined, defaultValue: T): T {\n  return value === undefined ? defaultValue : value;\n}\n\nexport class MergeDecision {\n  /**\n   * Create a MergeDecision from JSON structure.\n   *\n   * If any of the JSON fields are undefined, the values\n   * will be set to default values. The default values\n   * of all values except the common path can be overridden\n   * by the additional parameters to this function.\n   */\n  constructor(\n    decision: IMergeDecision,\n    localDiff?: IDiffEntry[] | null,\n    remoteDiff?: IDiffEntry[] | null,\n    action?: Action,\n    conflict?: boolean,\n    customDiff?: IDiffEntry[] | null,\n    similarInsert?: IDiffEntry[] | null,\n  );\n  /**\n   * Create a MergeDecision from values.\n   *\n   * Default values are used for any missing parameters.\n   */\n  constructor(\n    commonPath: DecisionPath,\n    localDiff?: IDiffEntry[] | null,\n    remoteDiff?: IDiffEntry[] | null,\n    action?: Action,\n    conflict?: boolean,\n    customDiff?: IDiffEntry[] | null,\n    similarInsert?: IDiffEntry[] | null,\n  );\n  /**\n   * MergeDecision copy constructor.\n   */\n  constructor(decision: MergeDecision);\n  constructor(\n    obj: DecisionPath | IMergeDecision | MergeDecision,\n    localDiff: IDiffEntry[] | null = null,\n    remoteDiff: IDiffEntry[] | null = null,\n    action: Action = 'base',\n    conflict = false,\n    customDiff: IDiffEntry[] | null = null,\n    similarInsert: IDiffEntry[] | null = null,\n  ) {\n    this.level = 0;\n    if (obj instanceof Array) {\n      this._path = obj;\n    } else if (obj instanceof MergeDecision) {\n      this._path = obj.absolutePath.slice();\n      localDiff = obj.localDiff;\n      remoteDiff = obj.remoteDiff;\n      action = obj.action;\n      conflict = obj.conflict;\n      customDiff = obj.customDiff;\n      similarInsert = obj.similarInsert;\n      this.level = obj.level;\n    } else {\n      this._path = valueOrDefault(obj.common_path, []);\n      localDiff = valueOrDefault(obj.local_diff, localDiff);\n      remoteDiff = valueOrDefault(obj.remote_diff, remoteDiff);\n      action = validateAction(valueOrDefault(obj.action, action));\n      conflict = valueOrDefault(obj.conflict, conflict);\n      customDiff = valueOrDefault(obj.custom_diff, customDiff);\n      similarInsert = valueOrDefault(obj.similar_insert, similarInsert);\n    }\n    this.localDiff = localDiff;\n    this.remoteDiff = remoteDiff;\n    this.action = action;\n    this.conflict = conflict;\n    this.customDiff = customDiff;\n    this.similarInsert = similarInsert;\n  }\n\n  setValuesFrom(other: MergeDecision): void {\n    this._path = other.absolutePath.slice();\n    this.localDiff = other.localDiff;\n    this.remoteDiff = other.remoteDiff;\n    this.action = other.action;\n    this.conflict = other.conflict;\n    this.customDiff = other.customDiff;\n    this.similarInsert = other.similarInsert;\n    this.level = other.level;\n  }\n\n  get localPath(): DecisionPath {\n    return this._path.slice(this.level);\n  }\n\n  get absolutePath(): DecisionPath {\n    return this._path;\n  }\n\n  set absolutePath(value: DecisionPath) {\n    this._path = value;\n  }\n\n  action: Action;\n\n  localDiff: IDiffEntry[] | null;\n\n  remoteDiff: IDiffEntry[] | null;\n\n  customDiff: IDiffEntry[] | null;\n\n  similarInsert: IDiffEntry[] | null;\n\n  conflict: boolean;\n\n  protected _path: DecisionPath;\n\n  pushPath(key: number | string) {\n    this._path.push(key);\n  }\n\n  get diffs(): DiffCollection {\n    let diffs = [this.localDiff, this.remoteDiff];\n    if (this.customDiff) {\n      diffs.push(this.customDiff);\n    }\n    return diffs;\n  }\n\n  set diffs(value: DiffCollection) {\n    this.localDiff = value[0];\n    this.remoteDiff = value[1];\n    if (value.length > 2) {\n      this.customDiff = value[2];\n    }\n  }\n\n  serialize(): IMergeDecision {\n    return {\n      common_path: this.absolutePath.slice(),\n      local_diff: stripSource(this.localDiff),\n      remote_diff: stripSource(this.remoteDiff),\n      action: this.action,\n      conflict: this.conflict,\n      custom_diff: stripSource(this.customDiff),\n    };\n  }\n\n  level: number;\n}\n\n/**\n * Compare to DecisionPath's for sorting.\n *\n * The rules are that deeper paths sort before other paths\n * with the same prefix, as they correspond to patch ops,\n * which will not affect the indexing of following decisions\n * on lists.\n *\n * @param {DecisionPath} a The first decision path\n * @param {DecisionPath} b The second decision path\n * @returns {number} Returns a negative number if a should\n *  sort first, positive number if b should sort first, or\n *  zero if the are identical.\n */\nexport function decisionPathSortKey(a: DecisionPath, b: DecisionPath): number {\n  if (a.length === b.length) {\n    // Equally deep, sort on keys\n    for (let lvl = 0; lvl < a.length; ++lvl) {\n      if (a[lvl] === b[lvl]) {\n        // Keys are equal, try a deeper level\n        continue;\n      }\n      // Keys differ on this level!\n      return a[lvl] < b[lvl] ? -1 : 1;\n    }\n    // Paths are identical\n    return 0;\n  } else {\n    // Sort deeper paths first\n    return b.length - a.length;\n  }\n}\n\n/**\n * Compare the paths of two decisions for sorting.\n *\n * This is a thin wrapper around decisionPathSortKey\n *\n * @export\n * @param {MergeDecision} a The first decision\n * @param {MergeDecision} b The second decision\n * @returns {number}  Returns a negative number if a should\n *  sort first, positive number if b should sort first, or\n *  zero if the are identical.\n */\nexport function decisionSortKey(a: MergeDecision, b: MergeDecision): number {\n  return decisionPathSortKey(a.absolutePath, b.absolutePath);\n}\n\n/**\n * Adds a decision to an existing, sorted collection of merge decisions\n *\n * Ensures that the location of the newly added decision\n * will comply with the format specification\n *\n * @export\n * @param {MergeDecision[]} decisions\n * @param {MergeDecision} toAdd\n * @param {(number | string)} [firstKey]\n * @returns {void}\n */\nexport function addSorted(\n  decisions: MergeDecision[],\n  toAdd: MergeDecision,\n  firstKey?: number | string,\n): void {\n  let idx = 0;\n  for (; idx < decisions.length; ++idx) {\n    let c = decisionPathSortKey(\n      decisions[idx].absolutePath,\n      toAdd.absolutePath,\n    );\n    if (c > 0) {\n      decisions.splice(idx, 0, toAdd);\n      return;\n    } else if (firstKey !== undefined && c === 0) {\n      let key: string | number | null = null;\n      for (let diff of decisions[idx].diffs) {\n        if (!diff) {\n          continue;\n        }\n        for (let d of diff) {\n          if (!key || d.key < key) {\n            key = d.key;\n          }\n        }\n      }\n      if (firstKey === key) {\n        throw new Error(\n          \"Shouldn't have multiple decisions with diff on same key\",\n        );\n      } else if (key === null || firstKey < key) {\n        decisions.splice(idx, 0, toAdd);\n        return;\n      }\n    }\n  }\n  decisions.push(toAdd);\n}\n\nexport function popPath(\n  diffs: DiffCollection,\n  popInner?: boolean,\n): { diffs: DiffCollection; key: string | number } | null {\n  if (diffs.length < 1) {\n    return null;\n  }\n  // Find first non-null, non-empty diff list:\n  let i = 0;\n  for (let di of diffs) {\n    if (di !== null && di.length > 0) {\n      break;\n    }\n    i++;\n  }\n  // Assert that we have at least one non-null diff:\n  if (i === diffs.length) {\n    console.log('Empty merge decision (no diffs)!');\n    return null;\n  }\n\n  // Check if ops and keys are equal for all non-null diffs\n  let d = diffs[i]!;\n  let op = d[0].op;\n  let key = d[0].key;\n  for (let di of diffs) {\n    if (di && di.length > 0) {\n      // Note that while diff lists can have 2 entries, they should never cause\n      // a pop, as they will have a difference in op.\n      for (let dj of di) {\n        if (dj.op !== op || dj.key !== key) {\n          return null;\n        }\n      }\n    }\n  }\n  // Inspect patch op further along:\n  if (op === 'patch') {\n    // Only pop if sub-diff has length 1 (unless popInner is true)\n    if (popInner !== true) {\n      for (let di of diffs) {\n        if (\n          di &&\n          di.length > 0 &&\n          (di.length !== 1 ||\n            !(di[0] as IDiffPatch).diff ||\n            (di[0] as IDiffPatch).diff!.length !== 1)\n        ) {\n          return null;\n        }\n      }\n    }\n    let retDiffs: DiffCollection = [];\n    for (let di of diffs) {\n      if (di && di.length > 0) {\n        retDiffs.push((di[0] as IDiffPatch).diff);\n      } else {\n        retDiffs.push(null);\n      }\n    }\n    return { diffs: retDiffs, key: key };\n  }\n  return null;\n}\n\nexport function pushPath(\n  diffs: IDiffEntry[],\n  prefix: DecisionPath,\n): IDiffEntry[] {\n  for (let key of prefix.reverse()) {\n    diffs = [opPatch(key, diffs)];\n  }\n  return diffs;\n}\n\n/**\n * Expand the `common_path` field of the merge decisions for optimized\n * processing. Modifies the merge decisions in-place.\n */\nexport function resolveCommonPaths(decisions: MergeDecision[]) {\n  for (let md of decisions) {\n    let diffs = md.diffs;\n    let path = md.absolutePath || [];\n    let popped = popPath(diffs, true);\n    while (popped) {\n      path.push(popped.key);\n      diffs = popped.diffs;\n      popped = popPath(diffs, true);\n    }\n    md.absolutePath = path;\n    md.diffs = diffs;\n  }\n}\n\n/**\n * Make a new 'cleared' value of the right type.\n */\nfunction makeClearedValue(value: any): any {\n  if (value instanceof Array) {\n    // Clearing e.g. an outputs list means setting it to an empty array\n    return [];\n  } else if (typeof value === 'string') {\n    // Clearing e.g. a source string means setting it to an empty string\n    return '';\n  } else if (value === null || valueIn(typeof value, ['number', 'boolean'])) {\n    // Clearing anything else (atomic values) means setting it to null\n    return null;\n  } else {\n    // Clearing e.g. a metadata dict means setting it to an empty Object\n    return {};\n  }\n}\n\nfunction _resolvePathInObject(obj: any, path: DecisionPath) {\n  for (let key of path) {\n    obj = obj[key]; // Should throw if key missing\n  }\n  return obj;\n}\n\nfunction _combineDiffs(\n  a: IDiffEntry[] | null,\n  b: IDiffEntry[] | null,\n): IDiffEntry[] {\n  if (a && b) {\n    return a.concat(b);\n  } else if (a) {\n    return a.slice();\n  } else if (b) {\n    return b.slice();\n  } else {\n    return [];\n  }\n}\n\nfunction resolveAction(base: any, decision: MergeDecision): IDiffEntry[] {\n  let a = decision.action;\n  if (a === 'base') {\n    return []; // no-op\n  } else if (a === 'local' || a === 'either') {\n    return decision.localDiff ? decision.localDiff.slice() : [];\n  } else if (a === 'remote') {\n    return decision.remoteDiff ? decision.remoteDiff.slice() : [];\n  } else if (a === 'custom') {\n    return decision.customDiff ? decision.customDiff.slice() : [];\n  } else if (a === 'local_then_remote') {\n    return _combineDiffs(decision.localDiff, decision.remoteDiff);\n  } else if (a === 'remote_then_local') {\n    return _combineDiffs(decision.remoteDiff, decision.localDiff);\n  } else if (a === 'clear') {\n    let key: string | null = null;\n    if (typeof base !== 'object') {\n      throw new TypeError(\"Can only use `'clear'` action on objects/dicts\");\n    }\n    for (let d of _combineDiffs(\n      decision.localDiff,\n      decision.remoteDiff,\n    ) as IDiffObjectEntry[]) {\n      if (key) {\n        if (key !== d.key) {\n          throw new Error('Cannot combine diffs with different keys');\n        }\n      } else {\n        key = d.key;\n      }\n    }\n    if (key) {\n      let d = opReplace(key, makeClearedValue(base[key]));\n      d.source = { decision, action: 'custom' };\n      return [d];\n    } else {\n      return [];\n    }\n  } else if (a === 'clear_parent') {\n    if (Array.isArray(base)) {\n      let d = opRemoveRange(0, base.length);\n      d.source = { decision, action: 'custom' };\n      return [d];\n    } else if (typeof base === 'string') {\n      let len = splitLines(base).length;\n      let d = opRemoveRange(0, len);\n      d.source = { decision, action: 'custom' };\n      return [d];\n    } else {\n      // Ideally we would do a opReplace on the parent, but this is not\n      // easily combined with this method, so simply remove all keys\n      let diff: IDiffEntry[] = [];\n      for (let key of base) {\n        let d = opRemove(key);\n        d.source = { decision, action: 'custom' };\n        diff.push(d);\n      }\n      return diff;\n    }\n  } else {\n    throw new Error('The action \"' + a + '\" is not defined');\n  }\n}\n\n/**\n * Prevent paths from pointing to specific string lines.\n *\n * Check if path points to a specific line in a string, if so, split off index.\n *\n * Returns a tuple of path and any line key.\n */\nfunction splitDiffStringPath(\n  base: any,\n  path: DecisionPath,\n): [DecisionPath, DecisionPath | null] {\n  for (let i = 0; i < path.length; ++i) {\n    if (typeof base === 'string') {\n      return [path.slice(0, i), path.slice(i)];\n    }\n    base = base[path[i]];\n  }\n  return [path, null];\n}\n\n/**\n * Apply a merge decision's action to a base.\n *\n * Returns a new, patched object, leaving the base unmodified.\n */\nexport function applyDecisions<T>(base: T, decisions: MergeDecision[]): T;\nexport function applyDecisions(base: any, decisions: MergeDecision[]): any {\n  let merged = deepCopy(base);\n  let prevPath: DecisionPath | null = null;\n  let parent: any = null;\n  let lastKey: string | number | null = null;\n  let resolved: any = null;\n  let diffs: IDiffEntry[] = [];\n  // clear_parent actions should override other decisions on same obj, so\n  // we need to track it\n  let clearParent: boolean = false;\n  for (let md of decisions) {\n    let spl = splitDiffStringPath(merged, md.localPath);\n    let path = spl[0];\n    let line = spl[1];\n    // We patch all decisions with the same path in one op\n    if (arraysEqual(path, prevPath)) {\n      if (clearParent) {\n        // Another entry will clear the parent, so all other decisions\n        // should be dropped\n      } else {\n        if (md.action === 'clear_parent') {\n          clearParent = true;\n          diffs = []; // Clear any exisiting decsions!\n        }\n        let ad = resolveAction(resolved, md);\n        if (line) {\n          ad = pushPath(ad, line);\n        }\n        diffs = diffs.concat(ad);\n      }\n    } else {\n      // Different path, start a new collection\n      if (prevPath !== null) {\n        // First, apply previous diffs\n        if (parent === null) {\n          // Operations on root create new merged object\n          merged = patch(resolved, diffs);\n        } else {\n          // If not, overwrite entry in parent (which is an entry in merged).\n          // This is ok, as no paths should point to subobjects of the patched\n          // object.\n          parent[lastKey!] = patch(resolved, diffs);\n        }\n      }\n\n      prevPath = path.slice();\n      // Resolve path in base and output\n      resolved = merged;\n      parent = null;\n      lastKey = null;\n      for (let key of path) {\n        parent = resolved;\n        resolved = resolved[key]; // Should throw if key missing\n        lastKey = key;\n      }\n      diffs = resolveAction(resolved, md);\n      if (line) {\n        diffs = pushPath(diffs, line);\n      }\n      clearParent = md.action === 'clear_parent';\n    }\n  }\n\n  // Apply the last collection of diffs, if present (same as above)\n  if (prevPath !== null) {\n    if (parent === null) {\n      merged = patch(resolved, diffs);\n    } else {\n      parent[lastKey!] = patch(resolved, diffs);\n    }\n  }\n  return merged;\n}\n\ntype DiffTree = {\n  [prefix: string]: { path: DecisionPath; diff: IDiffEntry[] };\n};\n\n/**\n * Merge a tree of diffs at varying path levels to one diff at their shared root\n *\n * Relies on the format specification about decision ordering to help\n * simplify the process (deeper paths should come before its parent paths).\n * This is realized by the `sortedPaths` argument.\n */\nfunction _mergeTree(tree: DiffTree, sortedPaths: string[]): IDiffEntry[] {\n  let trunk: IDiffEntry[] = [];\n  let root: DecisionPath | null = null;\n  for (let i = 0; i < sortedPaths.length; ++i) {\n    let path = tree[sortedPaths[i]].path;\n    let subdiffs = tree[sortedPaths[i]].diff;\n    trunk = trunk.concat(subdiffs);\n\n    let nextPath: DecisionPath | null;\n    if (i === sortedPaths.length - 1) {\n      nextPath = root;\n    } else {\n      nextPath = tree[sortedPaths[i + 1]].path;\n    }\n\n    // First, check if path is subpath of nextPath:\n    if (isPrefixArray(nextPath, path)) {\n      // We can simply promote existing diffs to next path\n      if (nextPath !== null) {\n        trunk = pushPath(trunk, path.slice(nextPath.length));\n        root = nextPath;\n      }\n    } else {\n      // We have started on a new trunk\n      // Collect branches on the new trunk, and merge the trunks\n      let newTrunk = _mergeTree(tree, sortedPaths.slice(i + 1));\n      nextPath = tree[sortedPaths[sortedPaths.length - 1]].path;\n      let prefix = findSharedPrefix(path, nextPath);\n      let pl = prefix ? prefix.length : 0;\n      trunk = pushPath(trunk, path.slice(pl)).concat(\n        pushPath(newTrunk, nextPath.slice(pl)),\n      );\n      break; // Recursion will exhaust sortedPaths\n    }\n  }\n  return trunk;\n}\n\n/**\n * Builds a diff for direct application on base. The `which` argument either\n * selects the 'local', 'remote' or 'merged' diffs.\n */\nexport function buildDiffs(\n  base: any,\n  decisions: MergeDecision[],\n  which: 'local' | 'remote' | 'merged',\n): IDiffEntry[] | null {\n  let tree: DiffTree = {};\n  let sortedPaths: string[] = [];\n  let local = which === 'local';\n  let merged = which === 'merged';\n  if (!local && !merged) {\n    console.assert(which === 'remote');\n  }\n  for (let md of decisions) {\n    let subdiffs: IDiffEntry[] | null = null;\n    let spl = splitDiffStringPath(base, md.localPath);\n    let path = spl[0];\n    let line = spl[1];\n    if (merged) {\n      let sub = _resolvePathInObject(base, path);\n      subdiffs = resolveAction(sub, md);\n    } else {\n      subdiffs = local ? md.localDiff : md.remoteDiff;\n      if (subdiffs === null) {\n        continue;\n      }\n    }\n    let strPath = '/' + path.join('/');\n    if (tree.hasOwnProperty(strPath)) {\n      // Existing tree entry, simply add diffs to it\n      if (line) {\n        let matchDiff = getSubDiffByKey(tree[strPath].diff, line[0]);\n        if (matchDiff) {\n          matchDiff.push.apply(matchDiff, subdiffs);\n        } else {\n          subdiffs = pushPath(subdiffs, line);\n          tree[strPath].diff.push(subdiffs[0]);\n        }\n      } else {\n        tree[strPath].diff = tree[strPath].diff.concat(subdiffs);\n      }\n    } else {\n      // Make new entry in tree\n      if (line) {\n        subdiffs = pushPath(subdiffs, line);\n      }\n      tree[strPath] = { diff: subdiffs, path: path };\n      sortedPaths.push(strPath);\n    }\n  }\n  if (Object.keys(tree).length === 0) {\n    return null;\n  }\n  if (!tree.hasOwnProperty('/')) {\n    tree['/'] = { diff: [], path: [] };\n    sortedPaths.push('/');\n  }\n\n  // Tree is constructed, now join all branches at diverging points (joints)\n  return _mergeTree(tree, sortedPaths);\n}\n\n/**\n * Move a path prefix in a merge decision from `common_path` to the diffs.\n *\n * This is done by wrapping the diffs in nested patch ops.\n */\nexport function pushPatchDecision(\n  decision: MergeDecision,\n  prefix: DecisionPath,\n): MergeDecision {\n  let dec = new MergeDecision(decision);\n  // We need to start with inner most key to nest correctly, so reverse:\n  for (let key of prefix.slice().reverse()) {\n    if (dec.absolutePath.length === 0) {\n      throw new Error(\n        'Cannot remove key from empty decision path: ' + key + ', ' + dec,\n      );\n    }\n    let popped = dec.absolutePath.pop()!;\n    if (popped !== key) {\n      // Pop and assert\n      throw Error(\n        \"Cannot push a patch that doesn't correspond to \" +\n          'a key in the decision path! Key: ' +\n          key +\n          '; Remaining path: ' +\n          dec.absolutePath.concat([popped]),\n      );\n    }\n    let ld = dec.localDiff && dec.localDiff.length > 0;\n    let rd = dec.remoteDiff && dec.remoteDiff.length > 0;\n    let cd = dec.customDiff && dec.customDiff.length > 0;\n    dec.localDiff = ld ? [opPatch(key, dec.localDiff)] : null;\n    dec.remoteDiff = rd ? [opPatch(key, dec.remoteDiff)] : null;\n    dec.customDiff = cd ? [opPatch(key, dec.customDiff)] : null;\n  }\n  return dec;\n}\n\n/**\n * Filter decisions based on matching (segment of) path\n *\n * Checks whether each decision's path start with `path`. If `skipLevels` is\n * given, the first levels of the decision's path is ignored for the comparison.\n *\n * Once matched, the matching decisions' levels are adjusted such that they\n * point to after the matching segment.\n *\n * Example:\n * Given a list of decisions with paths:\n *   /cells/0/outputs/0\n *   /cells/0/outputs/1\n *   /cells/2/outputs/1\n *   /cells/12/outputs/0/data\n *\n * If called with path `['cells']`:\n *   All decisions will be returned, with level set to 1\n * If called with path `['cells', 0]`:\n *   The first two will be returned, with level set to 2\n * If called with path `['outputs']`, and skipLevel = 2:\n *   All decisions will be returned, with level set to 3\n * If called with path `['outputs', 0]`, and skipLevel = 2:\n *   Decision 1 and 4 will be returned, with level set to 4\n *\n * Note that since the same decision instances are returned, this will modify\n * the level of the passed decisions.\n */\nexport function filterDecisions(\n  decisions: MergeDecision[],\n  path: DecisionPath,\n  skipLevels?: number,\n  maxLength?: number,\n): MergeDecision[] {\n  let ret: MergeDecision[] = [];\n  skipLevels = skipLevels || 0;\n  for (let md of decisions) {\n    if (maxLength !== undefined && md.absolutePath.length > maxLength) {\n      continue;\n    }\n    if (isPrefixArray(path, md.absolutePath.slice(skipLevels))) {\n      md.level = skipLevels + path.length;\n      ret.push(md);\n    }\n  }\n  return ret;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport * as nbformat from '@jupyterlab/nbformat';\n\nimport { Signal } from '@lumino/signaling';\n\nimport type {\n  IDiffAddRange,\n  IDiffEntry,\n  IDiffArrayEntry,\n  IDiffPatchObject,\n  IDiffImmutableObjectEntry,\n} from '../../diff/diffentries';\n\nimport { getDiffEntryByKey } from '../../diff/util';\n\nimport {\n  CellDiffModel,\n  createAddedCellDiffModel,\n  createDeletedCellDiffModel,\n  createPatchedCellDiffModel,\n  createUnchangedCellDiffModel,\n  OutputDiffModel,\n  makeOutputModels,\n  ImmutableDiffModel,\n  setMimetypeFromCellType,\n  createImmutableModel,\n} from '../../diff/model';\n\nimport {\n  MergeDecision,\n  resolveCommonPaths,\n  buildDiffs,\n  decisionSortKey,\n  filterDecisions,\n  pushPatchDecision,\n  popPath,\n  applyDecisions,\n  Action,\n} from '../../merge/decisions';\n\nimport { patch } from '../../patch';\n\nimport {\n  arraysEqual,\n  valueIn,\n  hasEntries,\n  splitLines,\n  unique,\n  stableSort,\n} from '../../common/util';\n\nimport { splitMergeDecisionsOnChunks } from '../../chunking';\n\nimport { ObjectMergeModel, DecisionStringDiffModel } from './common';\n\nimport { NotifyUserError } from '../../common/exceptions';\n\n/**\n * Create a cell diff model based on a set of merge\n * decisions that patch the cell.\n */\nfunction createPatchedCellDecisionDiffModel(\n  base: nbformat.ICell,\n  decisions: MergeDecision[],\n  local: CellDiffModel | null,\n  remote: CellDiffModel | null,\n  mimetype: string,\n): CellDiffModel {\n  for (let md of decisions) {\n    if (md.localPath.length === 0) {\n      let val = popPath(md.diffs, true);\n      if (val !== null) {\n        md.diffs = val.diffs;\n        md.pushPath(val.key);\n      }\n    }\n  }\n\n  let source = new DecisionStringDiffModel(\n    base.source,\n    filterDecisions(decisions, ['source'], 2),\n    [local ? local.source : null, remote ? remote.source : null],\n  );\n  setMimetypeFromCellType(source, base, mimetype);\n\n  let metadata = new DecisionStringDiffModel(\n    base.metadata,\n    filterDecisions(decisions, ['metadata'], 2),\n    [local ? local.metadata : null, remote ? remote.metadata : null],\n  );\n\n  let outputs: OutputDiffModel[] | null = null;\n  let executionCount: ImmutableDiffModel | null = null;\n  if (nbformat.isCode(base)) {\n    if (base.outputs) {\n      let outputBase = base.outputs;\n      let outputDec = filterDecisions(decisions, ['outputs'], 2);\n      let mergedDiff = buildDiffs(\n        outputBase,\n        outputDec,\n        'merged',\n      ) as IDiffArrayEntry[];\n      let merged: nbformat.IOutput[];\n      if (mergedDiff && mergedDiff.length > 0) {\n        merged = patch(outputBase, mergedDiff);\n      } else {\n        merged = outputBase;\n      }\n      outputs = makeOutputModels(outputBase, merged, mergedDiff);\n    }\n    let execBase = base.execution_count;\n    let cellDecs = filterDecisions(decisions, ['cells'], 0, 2);\n    for (let dec of cellDecs) {\n      if (\n        getDiffEntryByKey(dec.localDiff, 'execution_count') !== null ||\n        getDiffEntryByKey(dec.remoteDiff, 'execution_count') !== null ||\n        getDiffEntryByKey(dec.customDiff, 'execution_count') !== null\n      ) {\n        dec.level = 2;\n        let mergeExecDiff = buildDiffs(base, [dec], 'merged') as\n          | IDiffImmutableObjectEntry[]\n          | null;\n        let execDiff = hasEntries(mergeExecDiff) ? mergeExecDiff[0] : null;\n        // Pass base as remote, which means fall back to unchanged if no diff:\n        executionCount = createImmutableModel(execBase, execBase, execDiff);\n      }\n    }\n  }\n\n  let idModel = createImmutableModel(\n    base.id ? (base.id as string) : null,\n    null,\n  );\n  return new CellDiffModel(\n    source,\n    metadata,\n    outputs,\n    executionCount,\n    base.cell_type,\n    idModel,\n  );\n}\n\n/**\n * CellMergeModel\n */\nexport class CellMergeModel extends ObjectMergeModel<\n  nbformat.ICell,\n  CellDiffModel\n> {\n  constructor(\n    base: nbformat.ICell | null,\n    decisions: MergeDecision[],\n    mimetype: string,\n  ) {\n    // TODO: Remove/extend allowlist once we support more\n    super(base, [], mimetype, [\n      'source',\n      'metadata',\n      'outputs',\n      'execution_count',\n      'id',\n    ]);\n    this.onesided = false;\n    this._deleteCell = false;\n    this.processDecisions(decisions);\n  }\n\n  /**\n   * Whether the cell is present in only one of the two side (local/remote)\n   */\n  onesided: boolean;\n\n  /**\n   * Run time flag whether the user wants to delete the cell\n   *\n   * @type {boolean}\n   */\n  get deleteCell(): boolean {\n    return this._deleteCell;\n  }\n  set deleteCell(value: boolean) {\n    if (this._deleteCell !== value) {\n      this._deleteCell = value;\n      this.deleteCellChanged.emit(value);\n    }\n  }\n  private _deleteCell: boolean;\n\n  readonly deleteCellChanged = new Signal<CellMergeModel, boolean>(this);\n\n  /**\n   * Run time flag whether the user wants to clear the outputs of the cell\n   *\n   * @type {boolean}\n   */\n  get clearOutputs(): boolean {\n    return this._clearOutputs;\n  }\n  set clearOutputs(value: boolean) {\n    if (this._clearOutputs !== value) {\n      this._clearOutputs = value;\n      this.clearOutputsChanged.emit(value);\n    }\n  }\n  private _clearOutputs = false;\n\n  readonly clearOutputsChanged = new Signal<CellMergeModel, boolean>(this);\n\n  /**\n   * Whether source is the same in local and remote\n   */\n  get agreedSource(): boolean {\n    return (\n      !!this.local &&\n      !!this.remote &&\n      this.local.source.remote === this.remote.source.remote\n    );\n  }\n\n  /**\n   * Whether metadata is the same in local and remote\n   */\n  get agreedMetadata(): boolean {\n    if (!this.local || !this.remote) {\n      return false;\n    }\n    return this.local.metadata.remote === this.remote.metadata.remote;\n  }\n\n  /**\n   * Whether outputs are the same in local and remote\n   */\n  get agreedOutputs(): boolean {\n    if (!this.local || !this.remote) {\n      return false;\n    }\n    let lo = this.local.outputs;\n    let ro = this.remote.outputs;\n    if (!hasEntries(lo) || !hasEntries(ro)) {\n      return !hasEntries(lo) && !hasEntries(ro);\n    }\n    if (lo.length !== ro.length) {\n      return false;\n    }\n    for (let i = 0; i < lo.length; ++i) {\n      if (JSON.stringify(lo[i].remote) !== JSON.stringify(ro[i].remote)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Whether the cell ids are the same in local and remote\n   */\n  get agreedIds(): boolean {\n    if (!this.local || !this.remote) {\n      return false;\n    }\n    return this.local.cellId.remote === this.remote.cellId.remote;\n  }\n\n  /**\n   * Whether cell is the same in local and remote\n   */\n  get agreedCell(): boolean {\n    // TODO: Also check other fields?\n    return (\n      this.agreedSource &&\n      this.agreedMetadata &&\n      this.agreedOutputs &&\n      this.agreedIds\n    );\n  }\n\n  /**\n   * Whether the cell has any conflicted decisions.\n   */\n  get conflicted(): boolean {\n    for (let dec of this.decisions) {\n      if (dec.conflict) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Whether the cell has any conflicted decisions on a specific key.\n   */\n  hasConflictsOn(key: string) {\n    let decs = filterDecisions(this.decisions, [key], 2);\n    for (let dec of decs) {\n      if (dec.conflict) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Whether the cell has any conflicted decisions on source.\n   */\n  get sourceConflicted(): boolean {\n    return this.hasConflictsOn('source');\n  }\n\n  /**\n   * Whether the cell has any conflicted decisions on metadata.\n   */\n  get metadataConflicted(): boolean {\n    return this.hasConflictsOn('metadata');\n  }\n\n  /**\n   * Whether the cell has any conflicted decisions.\n   */\n  get outputsConflicted(): boolean {\n    return this.hasConflictsOn('outputs');\n  }\n\n  /**\n   * Clear any conflicts on decisions on outputs\n   */\n  clearOutputConflicts() {\n    let decs = filterDecisions(this.decisions, ['outputs'], 2);\n    for (let dec of decs) {\n      dec.conflict = false;\n    }\n  }\n\n  /**\n   * Get the decision on `execution_count` field (should only be one).\n   *\n   * Returns null if no decision on `execution_count` was found.\n   */\n  getExecutionCountDecision(): MergeDecision | null {\n    let cellDecs = filterDecisions(this.decisions, ['cells'], 0, 2);\n    for (let dec of cellDecs) {\n      if (\n        getDiffEntryByKey(dec.localDiff, 'execution_count') !== null ||\n        getDiffEntryByKey(dec.remoteDiff, 'execution_count') !== null ||\n        getDiffEntryByKey(dec.customDiff, 'execution_count') !== null\n      ) {\n        return dec;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Get the decision on `id` field (should only be one).\n   *\n   * Returns null if no decision on `id` was found.\n   */\n  getCellIdDecision(): MergeDecision | null {\n    let cellDecs = filterDecisions(this.decisions, ['cells'], 0, 2);\n    for (let dec of cellDecs) {\n      if (\n        getDiffEntryByKey(dec.localDiff, 'id') !== null ||\n        getDiffEntryByKey(dec.remoteDiff, 'id') !== null ||\n        getDiffEntryByKey(dec.customDiff, 'id') !== null\n      ) {\n        return dec;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Apply merge decisions to create the merged cell\n   */\n  serialize(): nbformat.ICell | null {\n    if (this.deleteCell) {\n      return null;\n    }\n    if (this.base === null) {\n      // Only possibility is that cell is added\n      if (this.decisions.length > 1 || !this.merged.added) {\n        throw new NotifyUserError('Invalid cell decision');\n      }\n      let dec = this.decisions[0];\n      // Either onesided or identical inserts, but possibly with\n      // a custom diff on top!\n      let d: IDiffEntry;\n      if (dec.action === 'local' || dec.action === 'either') {\n        if (!dec.localDiff) {\n          throw new NotifyUserError('Invalid cell decision');\n        }\n        d = dec.localDiff[0];\n      } else if (dec.action === 'remote') {\n        if (!dec.remoteDiff) {\n          throw new NotifyUserError('Invalid cell decision');\n        }\n        d = dec.remoteDiff[0];\n      } else if (dec.action === 'custom') {\n        if (!dec.customDiff) {\n          throw new NotifyUserError('Invalid cell decision');\n        }\n        d = dec.customDiff[0];\n      } else {\n        throw new NotifyUserError('Invalid cell decision');\n      }\n      if (d.op !== 'addrange') {\n        throw new NotifyUserError('Invalid cell decision');\n      }\n      return d.valuelist[0];\n    }\n    let decisions: MergeDecision[] = [];\n    for (let md of this.decisions) {\n      let nmd = new MergeDecision(md);\n      nmd.level = 2;\n      decisions.push(nmd);\n    }\n    let output = applyDecisions(this.base, decisions);\n    let src = output.source;\n    if (Array.isArray(src)) {\n      src = src.join('');\n    }\n    if (src !== this._merged!.source.remote) {\n      console.warn(\n        \"Serialized outputs doesn't match model value! \" +\n          'Keeping the model value.',\n      );\n      output.source = splitLines(this._merged!.source.remote!);\n    }\n    if (this.clearOutputs && nbformat.isCode(output)) {\n      output.outputs = [];\n    }\n    return output;\n  }\n\n  protected processDecisions(decisions: MergeDecision[]): void {\n    // First check for cell-level decisions:\n    if (decisions.length === 1) {\n      if (arraysEqual(decisions[0].absolutePath, ['cells'])) {\n        // We have a cell level decision\n        let md = decisions[0];\n        decisions = this.applyCellLevelDecision(md);\n        if (decisions.length === 0) {\n          this.decisions.push(md);\n        }\n      }\n    }\n\n    for (let md of decisions) {\n      md.level = 2;\n      if (md.absolutePath.length < 2 || md.absolutePath[0] !== 'cells') {\n        throw new Error('Not a valid path for a cell decision');\n      } else if (\n        md.absolutePath.length === 2 &&\n        (hasEntries(md.localDiff) || hasEntries(md.remoteDiff))\n      ) {\n        // Have decision on /cells/X/.\n        // Split the decision on subkey:\n\n        // Nest diff as a patch on cell, which can be split by `splitPatch`:\n        let splitDec = pushPatchDecision(md, md.absolutePath.slice(1, 2));\n        let localDiff = hasEntries(splitDec.localDiff)\n          ? (splitDec.localDiff[0] as IDiffPatchObject)\n          : null;\n        let remoteDiff = hasEntries(splitDec.remoteDiff)\n          ? (splitDec.remoteDiff[0] as IDiffPatchObject)\n          : null;\n\n        let subDecisions = this.splitPatch(splitDec, localDiff, remoteDiff);\n        // Add all split decisions:\n        for (let subdec of subDecisions) {\n          subdec.level = 2;\n          this.decisions.push(subdec);\n        }\n      } else {\n        // Decision has path on subkey\n        // Make local path relative to cell\n        this.decisions.push(md);\n      }\n    }\n  }\n\n  /**\n   * Apply a cell level decision to the model\n   *\n   * This creates the revelant kinds of models\n   */\n  protected applyCellLevelDecision(md: MergeDecision): MergeDecision[] {\n    let newDecisions: MergeDecision[] = [];\n    /* Possibilities:\n     1. Insertion: base is null! Null diff of missing side (unchanged).\n     2. Deletion: Null diff of present side (unchanged). Set deleteCell\n        depending on action.\n     3. Deletion vs patch: Same as 2., but split patch decision onto\n        source/metadata/outputs.\n     4. Identical ops (insertion or deletion)\n     Cases that shouldn't happen:\n     5. Insertion vs insertion: Shouldn't happen! Should have been split\n        into two decisions with an insertion each before creating model.\n     6. Patch vs patch: Shouldn't occur, as those should have been recursed\n     */\n    console.assert(\n      !this.onesided,\n      'Cannot have multiple cell decisions on one cell!',\n    );\n    this.onesided = true; // We set this to distinguish case 3 from normal\n    if (!hasEntries(md.localDiff)) {\n      // 1. or 2.:\n      this._local = null;\n      if (!md.remoteDiff || md.remoteDiff.length !== 1) {\n        throw new Error(\n          'Merge decision does not conform to expectation: ' + md,\n        );\n      }\n      if (this.base === null) {\n        // 1.\n        let first = md.remoteDiff[0];\n        if (first.op !== 'addrange') {\n          throw new Error(\n            'Merge decision does not conform to expectation: ' + md,\n          );\n        }\n        let v = first.valuelist[0] as nbformat.ICell;\n        this._remote = createAddedCellDiffModel(v, this.mimetype);\n        this._merged = createAddedCellDiffModel(v, this.mimetype);\n      } else {\n        // 2.\n        this._remote = createDeletedCellDiffModel(this.base, this.mimetype);\n        this._merged = createDeletedCellDiffModel(this.base, this.mimetype);\n        this.deleteCell = valueIn(md.action, ['remote', 'either']);\n      }\n    } else if (!hasEntries(md.remoteDiff)) {\n      // 1. or 2.:\n      this._remote = null;\n      if (!md.localDiff || md.localDiff.length !== 1) {\n        throw new Error(\n          'Merge decision does not conform to expectation: ' + md,\n        );\n      }\n      if (this.base === null) {\n        // 1.\n        let first = md.localDiff[0];\n        if (first.op !== 'addrange') {\n          throw new Error(\n            'Merge decision does not conform to expectation: ' + md,\n          );\n        }\n        let v = first.valuelist[0] as nbformat.ICell;\n        this._local = createAddedCellDiffModel(v, this.mimetype);\n        this._merged = createAddedCellDiffModel(v, this.mimetype);\n      } else {\n        // 2.\n        this._local = createDeletedCellDiffModel(this.base, this.mimetype);\n        this._merged = createDeletedCellDiffModel(this.base, this.mimetype);\n        this.deleteCell = valueIn(md.action, ['local', 'either']);\n      }\n    } else {\n      console.assert(hasEntries(md.localDiff) && hasEntries(md.remoteDiff));\n      console.assert(md.localDiff.length === 1 && md.remoteDiff.length === 1);\n      // 3. or 4.\n      if (md.localDiff[0].op === md.remoteDiff[0].op) {\n        // 4.\n        if (this.base === null) {\n          // Identical insertions (this relies on preprocessing to ensure only\n          // one value in valuelist)\n          let v = (md.localDiff[0] as IDiffAddRange).valuelist[0];\n          this._local = createAddedCellDiffModel(v, this.mimetype);\n          this._remote = createAddedCellDiffModel(v, this.mimetype);\n          this._merged = createAddedCellDiffModel(v, this.mimetype);\n        } else {\n          // Identical delections\n          this._local = createDeletedCellDiffModel(this.base, this.mimetype);\n          this._remote = createDeletedCellDiffModel(this.base, this.mimetype);\n          this._merged = createDeletedCellDiffModel(this.base, this.mimetype);\n          this.deleteCell = valueIn(md.action, ['local', 'remote', 'either']);\n        }\n      } else {\n        // 3., by method of elimination\n        let ops = [md.localDiff[0].op, md.remoteDiff[0].op];\n        console.assert(valueIn('removerange', ops) && valueIn('patch', ops));\n        if (this.base === null) {\n          throw new Error(\n            'Invalid merge decision, ' +\n              'cannot have null base for deleted cell: ' +\n              md,\n          );\n        }\n        if (ops[0] === 'removerange') {\n          this._local = createDeletedCellDiffModel(this.base, this.mimetype);\n          this.deleteCell = md.action === 'local';\n          // The patch op will be on cell level. Split it on sub keys!\n          newDecisions = newDecisions.concat(\n            this.splitPatch(md, null, md.remoteDiff[0] as IDiffPatchObject),\n          );\n        } else {\n          this._remote = createDeletedCellDiffModel(this.base, this.mimetype);\n          this.deleteCell = md.action === 'remote';\n          // The patch op will be on cell level. Split it on sub keys!\n          newDecisions = newDecisions.concat(\n            this.splitPatch(md, md.localDiff[0] as IDiffPatchObject, null),\n          );\n        }\n        resolveCommonPaths(newDecisions);\n      }\n    }\n    return newDecisions;\n  }\n\n  /**\n   * Split a decision with a patch on one side into one decision\n   * for each sub entry in the patch.\n   */\n  protected splitPatch(\n    md: MergeDecision,\n    localPatch: IDiffPatchObject | null,\n    remotePatch: IDiffPatchObject | null,\n  ): MergeDecision[] {\n    let local = !!localPatch && hasEntries(localPatch.diff);\n    let remote = !!remotePatch && hasEntries(remotePatch.diff);\n    if (!local && !remote) {\n      return [];\n    }\n    let localDiff = local ? localPatch!.diff : null;\n    let remoteDiff = remote ? remotePatch!.diff : null;\n    let split: MergeDecision[] = [];\n    let keys: (string | number)[] = [];\n    if (local) {\n      for (let d of localDiff!) {\n        keys.push(d.key);\n      }\n    }\n    if (remote) {\n      for (let d of remoteDiff!) {\n        keys.push(d.key);\n      }\n    }\n    keys = keys.filter(unique);\n    if (local && remote) {\n      // Sanity check\n      if (localPatch!.key !== remotePatch!.key) {\n        throw new Error('Different keys of patch ops given to `splitPatch`.');\n      }\n    }\n    let patchKey = local ? localPatch!.key : remotePatch!.key;\n    for (let key of keys) {\n      if (this._allowlist && !valueIn(key, this._allowlist)) {\n        throw new NotifyUserError(\n          'Currently not able to handle decisions on variable \"' + key + '\"',\n        );\n      }\n      let el = getDiffEntryByKey(localDiff, key);\n      let er = getDiffEntryByKey(remoteDiff, key);\n      let onsesided = !(el && er);\n      let action: Action = md.action;\n      // If one-sided, change 'base' actions to present side\n      if (action === 'base' && onsesided) {\n        action = el ? 'local' : 'remote';\n      }\n      // Create new action:\n      split.push(\n        new MergeDecision(\n          md.absolutePath.concat([patchKey]),\n          el ? [el] : null,\n          er ? [er] : null,\n          action,\n          md.conflict,\n        ),\n      );\n    }\n    let ret = this.splitOnSourceChunks(split);\n    resolveCommonPaths(ret);\n    return stableSort(ret, decisionSortKey);\n  }\n\n  /**\n   * Split decisions on 'source' by chunks.\n   *\n   * This prevents one decision from contributing to more than one chunk.\n   */\n  protected splitOnSourceChunks(decisions: MergeDecision[]): MergeDecision[] {\n    let out: MergeDecision[] = [];\n    for (let i = 0; i < decisions.length; ++i) {\n      let dec = decisions[i];\n      if (dec.absolutePath[2] === 'source') {\n        let base = this.base!.source;\n        if (!Array.isArray(base)) {\n          base = splitLines(base);\n        }\n        dec.level = 3;\n        let sub = splitMergeDecisionsOnChunks(base, [dec]);\n        resolveCommonPaths(sub);\n        out = out.concat(stableSort(sub, decisionSortKey));\n      } else {\n        out.push(dec);\n      }\n    }\n    return out;\n  }\n\n  protected createDiffModel(diff: IDiffEntry[]): CellDiffModel {\n    if (this.base === null) {\n      throw new Error(\n        'Cannot create a patched or unchanged diff model with null base!',\n      );\n    }\n    if (diff && diff.length > 0) {\n      return createPatchedCellDiffModel(this.base, diff, this.mimetype);\n    } else {\n      return createUnchangedCellDiffModel(this.base, this.mimetype);\n    }\n  }\n\n  protected createMergedDiffModel(): CellDiffModel {\n    if (this.base === null) {\n      throw new Error(\n        'Cannot create a patched or unchanged merged diff model with null base!',\n      );\n    }\n    return createPatchedCellDecisionDiffModel(\n      this.base,\n      this.decisions,\n      this.local,\n      this.remote,\n      this.mimetype,\n    );\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type { IDiffEntry } from '../../diff/diffentries';\n\nimport { DiffRangePos, raw2Pos } from '../../diff/range';\n\nimport { StringDiffModel, IStringDiffModel } from '../../diff/model';\n\nimport {\n  MergeDecision,\n  buildDiffs,\n  applyDecisions,\n} from '../../merge/decisions';\n\nimport { LineChunker, Chunk, labelSource } from '../../chunking';\n\nimport { patchStringified, stringifyAndBlankNull } from '../../patch';\n\nimport type { DeepCopyableObject } from '../../common/util';\n\n/**\n * A string diff model based on merge decisions.\n */\nexport class DecisionStringDiffModel extends StringDiffModel {\n  constructor(\n    base: any,\n    decisions: MergeDecision[],\n    sourceModels: (IStringDiffModel | null)[],\n    collapsible?: boolean,\n    header?: string,\n    collapsed?: boolean,\n  ) {\n    // Set up initial parameters for super call\n    let baseStr = stringifyAndBlankNull(base);\n    super(baseStr, '', [], [], collapsible, header, collapsed);\n    this.rawBase = base;\n    this.decisions = decisions;\n    this._outdated = true;\n    this._sourceModels = sourceModels;\n    this._update();\n  }\n\n  decisions: MergeDecision[];\n\n  rawBase: any;\n\n  get additions(): DiffRangePos[] {\n    if (this._outdated) {\n      this._update();\n    }\n    return this._additions;\n  }\n  set additions(value: DiffRangePos[]) {\n    this._additions = value;\n  }\n\n  get deletions(): DiffRangePos[] {\n    if (this._outdated) {\n      this._update();\n    }\n    return this._deletions;\n  }\n  set deletions(value: DiffRangePos[]) {\n    this._deletions = value;\n  }\n\n  get remote(): string {\n    if (this._outdated) {\n      this._update();\n    }\n    return this._remote;\n  }\n  set remote(value: string) {\n    this._remote = value;\n  }\n\n  invalidate() {\n    this._outdated = true;\n  }\n\n  get invalid(): boolean {\n    return this._outdated;\n  }\n\n  /**\n   * Chunk additions/deletions into line-based chunks, while also producing\n   * chunks from source models where the decision is a no-op (action 'base').\n   */\n  getLineChunks(): Chunk[] {\n    let models: (IStringDiffModel | null)[] = [this];\n    models = models.concat(this._sourceModels);\n    let chunker = new LineChunker();\n    let iter = new StringDiffModel.SyncedDiffIter(models);\n    for (let v = iter.next(); v !== undefined; v = iter.next()) {\n      if (iter.currentModel() === this) {\n        // Chunk diffs in own model normally\n        // (they should already be present in own model)\n        chunker.addDiff(v.range, v.isAddition);\n      } else {\n        // Skip ops in other models that are not no-ops\n        if (!v.range.source || v.range.source.decision.action !== 'base') {\n          continue;\n        }\n        // Other model\n        chunker.addGhost(v.range, v.isAddition, iter.currentOffset);\n      }\n    }\n    return chunker.chunks;\n  }\n\n  protected _update(): void {\n    this._outdated = false;\n    let diff = buildDiffs(this.rawBase, this.decisions, 'merged');\n    let out = patchStringified(this.rawBase, diff);\n    this._additions = raw2Pos(out.additions, out.remote);\n    this._deletions = raw2Pos(out.deletions, this.base || '');\n    this._remote = out.remote;\n  }\n\n  protected _additions: DiffRangePos[];\n  protected _deletions: DiffRangePos[];\n  protected _remote: string;\n  protected _outdated: boolean;\n  protected _sourceModels: (IStringDiffModel | null)[];\n}\n\n/**\n * Abstract base class for a merge model of objects of the type ObjectType,\n * which uses DiffModelType to model each side internally.\n *\n * Implementors need to define the abstract functions createDiffModel and\n * createMergedDiffModel.\n */\nexport abstract class ObjectMergeModel<\n  ObjectType extends DeepCopyableObject,\n  DiffModelType,\n> {\n  /**\n   * Create a diff model of the correct type given the diff (which might be\n   * null)\n   */\n  protected abstract createDiffModel(diff: IDiffEntry[] | null): DiffModelType;\n\n  /**\n   * Create a diff model of the correct type for the merge\n   */\n  protected abstract createMergedDiffModel(): DiffModelType;\n\n  /**\n   *\n   */\n  constructor(\n    base: ObjectType | null,\n    decisions: MergeDecision[],\n    mimetype: string,\n    allowlist?: string[],\n  ) {\n    this.base = base;\n    this.mimetype = mimetype;\n    this._allowlist = allowlist || null;\n\n    this.decisions = decisions;\n  }\n\n  /**\n   * Base value of the object\n   */\n  base: ObjectType | null;\n\n  /**\n   * The mimetype to use for the source\n   */\n  mimetype: string;\n\n  /**\n   * The merge decisions that apply to this object\n   */\n  readonly decisions: MergeDecision[];\n\n  /**\n   * Apply merge decisions to create the merged cell\n   */\n  serialize(): ObjectType | null {\n    if (this.base === null) {\n      return null;\n    }\n    return applyDecisions(this.base, this.decisions);\n  }\n\n  /**\n   * Model of the local diff vs. base\n   */\n  get local(): DiffModelType | null {\n    if (this._local === undefined) {\n      // We're builiding from decisions\n      this._finalizeDecisions();\n      let diff = buildDiffs(this.base, this.decisions, 'local');\n      this._local = this.createDiffModel(diff);\n    }\n    return this._local;\n  }\n\n  /**\n   * Model of the remote diff vs. base\n   */\n  get remote(): DiffModelType | null {\n    if (this._remote === undefined) {\n      this._finalizeDecisions();\n      let diff = buildDiffs(this.base, this.decisions, 'remote');\n      this._remote = this.createDiffModel(diff);\n    }\n    return this._remote;\n  }\n\n  /**\n   * Model of the diff of the merged cell vs. base\n   */\n  get merged(): DiffModelType {\n    if (this._merged === undefined) {\n      this._finalizeDecisions();\n      // Merge model needs access to local and remote models to also include\n      // chunks from them\n      this._merged = this.createMergedDiffModel();\n    }\n    return this._merged;\n  }\n\n  /**\n   *\n   */\n  get subModels(): [DiffModelType | null, DiffModelType | null, DiffModelType] {\n    return [this.local, this.remote, this.merged];\n  }\n\n  /**\n   * Prevent further changes to decisions, and label the diffs\n   *\n   * The labels are used for picking of decisions\n   */\n  protected _finalizeDecisions(): void {\n    if (!this._finalized) {\n      for (let md of this.decisions) {\n        if (md.action === 'either') {\n          labelSource(md.localDiff, { decision: md, action: 'either' });\n          labelSource(md.remoteDiff, { decision: md, action: 'either' });\n        } else {\n          labelSource(md.localDiff, { decision: md, action: 'local' });\n          labelSource(md.remoteDiff, { decision: md, action: 'remote' });\n        }\n        labelSource(md.customDiff, { decision: md, action: 'custom' });\n      }\n      this._finalized = true;\n    }\n  }\n\n  /**\n   * List of fields to handle\n   */\n  protected _allowlist: string[] | null;\n\n  protected _local?: DiffModelType | null;\n  protected _remote?: DiffModelType | null;\n  protected _merged?: DiffModelType;\n\n  protected _finalized: boolean = false;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './cell';\nexport * from './common';\nexport * from './metadata';\nexport * from './notebook';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type * as nbformat from '@jupyterlab/nbformat';\n\nimport type { IDiffEntry } from '../../diff/diffentries';\n\nimport {\n  IStringDiffModel,\n  createPatchStringDiffModel,\n  createDirectStringDiffModel,\n} from '../../diff/model';\n\nimport type { MergeDecision } from '../../merge/decisions';\n\nimport { ObjectMergeModel, DecisionStringDiffModel } from './common';\nimport { JSONObject, JSONExt } from '@lumino/coreutils';\n\n/**\n * Model of a merge of metadata with decisions\n */\nexport class MetadataMergeModel extends ObjectMergeModel<\n  nbformat.INotebookMetadata,\n  IStringDiffModel\n> {\n  constructor(base: nbformat.INotebookMetadata, decisions: MergeDecision[]) {\n    super(base, decisions, 'application/json');\n  }\n\n  serialize(): nbformat.INotebookMetadata {\n    if (!this.merged || this.merged.remote === null) {\n      throw new Error('Missing notebook metadata merge data.');\n    }\n    // This will check whether metadata is valid JSON.\n    // Validation of compatibility vs notebook format\n    // will happen on server side.\n    return JSON.parse(this.merged.remote);\n  }\n\n  protected createDiffModel(diff: IDiffEntry[]): IStringDiffModel {\n    if (diff && diff.length > 0) {\n      return createPatchStringDiffModel(this.base, diff);\n    } else {\n      const baseCopy = JSONExt.deepCopy(this.base) as JSONObject;\n      return createDirectStringDiffModel(baseCopy, baseCopy);\n    }\n  }\n\n  protected createMergedDiffModel(): IStringDiffModel {\n    return new DecisionStringDiffModel(this.base, this.decisions, [\n      this.local,\n      this.remote,\n    ]);\n  }\n\n  declare base: nbformat.INotebookMetadata;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type * as nbformat from '@jupyterlab/nbformat';\n\nimport {\n  arraysEqual,\n  valueIn,\n  hasEntries,\n  stableSort,\n} from '../../common/util';\n\nimport type {\n  IDiffAddRange,\n  IDiffPatch,\n  IDiffRemoveRange,\n  IDiffArrayEntry,\n  IDiffEntry,\n} from '../../diff/diffentries';\n\nimport {\n  IMergeDecision,\n  MergeDecision,\n  resolveCommonPaths,\n  filterDecisions,\n  decisionSortKey,\n} from '../../merge/decisions';\n\nimport { labelSource } from '../../chunking';\n\nimport { stringify } from '../../patch';\n\nimport { CellMergeModel } from './cell';\n\nimport { MetadataMergeModel } from './metadata';\n\n/**\n * Diff model for a Jupyter Notebook\n */\nexport class NotebookMergeModel {\n  static preprocessDecisions(\n    rawMergeDecisions: IMergeDecision[],\n  ): MergeDecision[] {\n    let mergeDecisions: MergeDecision[] = [];\n    for (let rmd of rawMergeDecisions) {\n      mergeDecisions.push(new MergeDecision(rmd));\n    }\n    mergeDecisions = splitCellChunks(mergeDecisions);\n    mergeDecisions = splitCellRemovals(mergeDecisions);\n    mergeDecisions = splitCellInsertions(mergeDecisions);\n    mergeDecisions = splitCellListPatch(mergeDecisions);\n    resolveCommonPaths(mergeDecisions);\n    for (let md of mergeDecisions) {\n      if (md.action === 'either') {\n        labelSource(md.localDiff, { decision: md, action: 'either' });\n        labelSource(md.remoteDiff, { decision: md, action: 'either' });\n      } else {\n        labelSource(md.localDiff, { decision: md, action: 'local' });\n        labelSource(md.remoteDiff, { decision: md, action: 'remote' });\n      }\n      labelSource(md.customDiff, { decision: md, action: 'custom' });\n    }\n    return mergeDecisions;\n  }\n\n  /**\n   * Create a new NotebookMergeModel from a base notebook and a list of\n   * merge decisions.\n   *\n   * The base as well as the merge decisions are normally supplied by the\n   * nbdime server.\n   */\n  constructor(\n    base: nbformat.INotebookContent,\n    rawMergeDecisions: IMergeDecision[],\n  ) {\n    this.base = base;\n    let ctor = this.constructor as typeof NotebookMergeModel;\n    let decisions = ctor.preprocessDecisions(rawMergeDecisions);\n\n    // The notebook metadata MIME type is used for determining the MIME type\n    // of source cells, so store it easily accessible:\n    let mimetype: string | undefined;\n    try {\n      mimetype = base.metadata.language_info!.mimetype;\n    } catch (e) {\n      // missing metadata(probably old notebook)\n    }\n    this.mimetype = mimetype || 'text/python';\n\n    this.cells = this.buildCellList(decisions);\n\n    let metadataDecs = filterDecisions(decisions, ['metadata']);\n    this.metadata = new MetadataMergeModel(base.metadata, metadataDecs);\n    this.unsavedChanges = false;\n  }\n\n  serialize(): nbformat.INotebookContent {\n    let nb: any = {};\n    // Simply copy all root-level fields except cells/metadata\n    for (let key in this.base) {\n      if (!valueIn(key, ['cells', 'metadata'])) {\n        nb[key] = this.base[key];\n      }\n    }\n\n    // Serialize metadata\n    nb['metadata'] = this.metadata.serialize();\n\n    // Serialzie cell list\n    let cells: (nbformat.ICell | null)[] = [];\n    for (let c of this.cells) {\n      let s = c.serialize();\n      if (s !== null) {\n        cells.push(s);\n      }\n    }\n    nb['cells'] = cells;\n\n    // As long as base is a valid notebook, and sub-serialization is valid,\n    // this output should be a valid notebook.\n    return nb as nbformat.INotebookContent;\n  }\n\n  get decisions(): MergeDecision[] {\n    let ret: MergeDecision[] = [];\n    for (let c of this.cells) {\n      ret = ret.concat(c.decisions);\n    }\n    ret = ret.concat(this.metadata.decisions);\n    return ret;\n  }\n\n  get conflicts(): MergeDecision[] {\n    let ret: MergeDecision[] = [];\n    for (let md of this.decisions) {\n      if (md.conflict) {\n        ret.push(md);\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * Base notebook of the merge\n   */\n  base: nbformat.INotebookContent;\n\n  /**\n   * List of individual cell merges\n   */\n  cells: CellMergeModel[];\n\n  /**\n   * Metadata merge model\n   */\n  metadata: MetadataMergeModel;\n\n  /**\n   * The default MIME type according to the notebook's root metadata\n   */\n  mimetype: string;\n\n  /**\n   * Whether there are unsaved changes\n   */\n  unsavedChanges: boolean;\n\n  /**\n   * Correlate the different cells in the diff lists into a merge list\n   */\n  protected buildCellList(decisions: MergeDecision[]): CellMergeModel[] {\n    // We have to check for merge decisions on the `cells` object in\n    // order to check for added cells. This assumes that the common\n    // paths of the merge decisions have been resolved. It also assumes that\n    // no merge decision can have root as its common path.\n\n    // Create arrays of base value and decisions to match base cell list\n    let cellDecisions: { base: any; decisions: MergeDecision[] }[] = [];\n    for (let bc of this.base.cells) {\n      // Create empty decisions array for now, add in below\n      cellDecisions.push({ base: bc, decisions: [] });\n    }\n\n    let insertOffset = 0;\n    // Assumes merge decisions come in order!\n    for (let md of decisions) {\n      let key = md.absolutePath;\n      if (key.length < 1 || key[0] !== 'cells') {\n        continue; // Only care about decisions on cells here\n      }\n\n      if (arraysEqual(key, ['cells'])) {\n        let idx: number | null = null;\n        let insertion = false;\n        for (let di of md.diffs) {\n          // Ensure diff has exactly one item:\n          if (!di || di.length === 0) {\n            continue;\n          }\n          // All keys should be the same since we run splitCellChunks first\n          idx = di[0].key as number;\n          if (di[0].op === 'addrange') {\n            // Insert entries into `cells` at idx\n            let offsetIdx = insertOffset + idx;\n            cellDecisions.splice(offsetIdx, 0, { base: null, decisions: [md] });\n            insertOffset += 1;\n            insertion = true; // flag to break outer loop\n            break;\n          }\n          // Only checking for insertions in this loop, since insertions can\n          // only be paired with other insertions.\n        }\n        if (insertion) {\n          continue;\n        }\n        // If we reach this point, it is not an insertion merge!\n        if (idx === null) {\n          throw new Error('No index could be found for merge decision!');\n        }\n        let cds = cellDecisions[idx + insertOffset].decisions;\n        cds.push(md);\n      } else {\n        // Has a path into a cell\n        // Format specifies that these always comes before decisions that\n        // change the order of cells, so index is straight forward!\n        let idx = key[1] as number;\n        let cds = cellDecisions[idx].decisions;\n        cds.push(md);\n      }\n    }\n\n    let cells: CellMergeModel[] = [];\n    for (let cellInfo of cellDecisions) {\n      cells.push(\n        new CellMergeModel(cellInfo.base, cellInfo.decisions, this.mimetype),\n      );\n    }\n\n    return cells;\n  }\n}\n\nfunction isChunk(diff: IDiffEntry[] | null): diff is IDiffArrayEntry[] {\n  return !!diff && diff.length === 2 && diff[0].key === diff[1].key;\n}\n\n/**\n * The merge format allows for chunking of sequence diffs such that one or more\n * entries in the diff lists have 2 entries, where the first is always an\n * insertion (addrange). For cells, we split these decisions in two, for easier\n * visualization. Note: When several diff entries have 2 entries, the second\n * entries are identical.\n */\nfunction splitCellChunks(mergeDecisions: MergeDecision[]): MergeDecision[] {\n  let output: MergeDecision[] = [];\n  for (let md of mergeDecisions) {\n    if (arraysEqual(md.absolutePath, ['cells'])) {\n      if (md.localDiff && !md.remoteDiff) {\n        for (let d of md.localDiff) {\n          let nmd = new MergeDecision(md);\n          nmd.localDiff = [d];\n          output.push(nmd);\n        }\n      } else if (md.remoteDiff && !md.localDiff) {\n        for (let d of md.remoteDiff) {\n          let nmd = new MergeDecision(md);\n          nmd.absolutePath = md.absolutePath.slice();\n          nmd.remoteDiff = [d];\n          output.push(nmd);\n        }\n      } else if (isChunk(md.localDiff)) {\n        if (isChunk(md.remoteDiff)) {\n          // Both diffs are chunks, split adds vs agreed removes\n          let nmd = new MergeDecision(md);\n          nmd.localDiff = md.localDiff.slice(0, 1);\n          nmd.remoteDiff = md.remoteDiff.slice(0, 1);\n          output.push(nmd);\n\n          output.push(\n            new MergeDecision(\n              md.absolutePath.slice(),\n              md.localDiff.slice(1),\n              md.remoteDiff.slice(1),\n              'either', // Check for custom action first?\n            ),\n          );\n        } else {\n          // Split off local\n          let nmd = new MergeDecision(md);\n          nmd.localDiff = md.localDiff.slice(0, 1);\n          output.push(nmd);\n\n          output.push(\n            new MergeDecision(\n              md.absolutePath.slice(),\n              md.localDiff.slice(1),\n              [],\n              'local', // Check for custom action first?\n              md.conflict,\n            ),\n          );\n        }\n      } else if (isChunk(md.remoteDiff)) {\n        // Split off remote\n        let nmd = new MergeDecision(md);\n        nmd.remoteDiff = md.remoteDiff.slice(0, 1);\n        output.push(nmd);\n\n        output.push(\n          new MergeDecision(\n            md.absolutePath.slice(),\n            [],\n            md.remoteDiff.slice(1),\n            'remote', // Check for custom action first?\n            md.conflict,\n          ),\n        );\n      } else if (hasEntries(md.remoteDiff) && hasEntries(md.localDiff)) {\n        const ops = [md.remoteDiff[0].op, md.localDiff[0].op].sort();\n        if (ops.join(',') === 'addrange,removerange') {\n          // Insertion and deletions on the same index are simply split\n          // but both keep the conflict status\n\n          // Just do local first (alt. do add first)\n          let lmd = new MergeDecision(md);\n          lmd.action = 'local';\n          lmd.localDiff = md.localDiff.slice();\n          lmd.remoteDiff = null;\n          output.push(lmd);\n\n          let rmd = new MergeDecision(md);\n          rmd.action = 'remote';\n          rmd.localDiff = null;\n          rmd.remoteDiff = md.remoteDiff.slice();\n          output.push(rmd);\n        } else {\n          output.push(md); // deepCopy?\n        }\n      } else {\n        output.push(md); // deepCopy?\n      }\n    } else {\n      output.push(md);\n    }\n  }\n  resolveCommonPaths(output);\n  return output;\n}\n\n/**\n * If any decisions have diffs on different cells, split them\n * up for one decision per cell.\n */\nfunction splitCellListPatch(mergeDecisions: MergeDecision[]): MergeDecision[] {\n  let output: MergeDecision[] = [];\n\n  for (let md of mergeDecisions) {\n    if (!arraysEqual(md.absolutePath, ['cells'])) {\n      output.push(md);\n      continue;\n    }\n    // Null out empty diffs\n    let dl = hasEntries(md.localDiff) ? md.localDiff : null;\n    let dr = hasEntries(md.remoteDiff) ? md.remoteDiff : null;\n\n    if (dl && dl.length < 2 && dr && dr.length < 2) {\n      // Single cell affected\n      output.push(md);\n      continue;\n    }\n\n    // Before this is called, we should have split up chunks\n    // as well as range addition/removal, so all diffs\n    // should have different keys\n    let maxlen = Math.max(dl ? dl.length : 0, dr ? dr.length : 0);\n    for (let i = 0; i < maxlen; ++i) {\n      let subdl = dl && i < dl.length ? [dl[i]] : null;\n      let subdr = dr && i < dr.length ? [dr[i]] : null;\n      output.push(\n        new MergeDecision(\n          md.absolutePath.slice(),\n          subdl,\n          subdr,\n          md.action,\n          md.conflict,\n        ),\n      );\n    }\n  }\n  return stableSort(output, decisionSortKey);\n}\n\n/**\n * Split \"removerange\" diffs on cell list level into individual decisions!\n */\nfunction splitCellRemovals(mergeDecisions: MergeDecision[]): MergeDecision[] {\n  let output: MergeDecision[] = [];\n\n  let makeSplitPart = function (\n    md: MergeDecision,\n    key: number,\n    local: boolean,\n    remote: boolean,\n  ): MergeDecision {\n    let newMd = new MergeDecision(\n      md.absolutePath.slice(),\n      null,\n      null,\n      md.action,\n      md.conflict,\n    );\n    let newDiff: IDiffRemoveRange[] = [\n      {\n        key: key,\n        op: 'removerange',\n        length: 1,\n      },\n    ];\n    console.assert(local || remote);\n    if (local) {\n      newMd.localDiff = newDiff;\n    }\n    if (remote) {\n      newMd.remoteDiff = newDiff;\n    }\n    return newMd;\n  };\n\n  for (let md of mergeDecisions) {\n    if (!arraysEqual(md.absolutePath, ['cells'])) {\n      output.push(md);\n      continue;\n    }\n\n    let dl = hasEntries(md.localDiff)\n      ? (md.localDiff[md.localDiff.length - 1] as IDiffArrayEntry)\n      : null;\n    let dr = hasEntries(md.remoteDiff)\n      ? (md.remoteDiff[md.remoteDiff.length - 1] as IDiffArrayEntry)\n      : null;\n    // TODO: Does it make sense to split on custom?\n\n    if ((dl && !dr) || (dr && !dl)) {\n      // One-way diff\n      let d = dl ? dl : dr!;\n\n      if (d.op === 'removerange' && d.length > 1) {\n        // Found a one-way diff to split!\n        for (let i = 0; i < d.length; ++i) {\n          output.push(makeSplitPart(md, d.key + i, !!dl, !!dr));\n        }\n      } else {\n        // Not a removerange type:\n        output.push(md);\n        continue;\n      }\n    } else if (dr && dl) {\n      // Two way diff, keys need to be matched\n      if (dl.op !== 'removerange' && dr.op !== 'removerange') {\n        // Not a removerange type:\n        output.push(md);\n        continue;\n      } else if (dl.op === dr.op) {\n        // Both sides have removerange, just match keys/length\n        // Note: Assume that ranges have overlap, since they are in one decision\n        let klStart = dl.key;\n        let krStart = dr.key;\n        let start = Math.min(klStart, krStart);\n        let klEnd = klStart + (dl as IDiffRemoveRange).length;\n        let krEnd = krStart + (dr as IDiffRemoveRange).length;\n        let end = Math.max(klEnd, krEnd);\n        for (let i = start; i < end; ++i) {\n          let local = i >= klStart && i < klEnd;\n          let remote = i >= krStart && i < krEnd;\n          output.push(makeSplitPart(md, i, local, remote));\n        }\n      } else {\n        // One side has removerange, the other a patch op (implied)\n        let remLocal = dl.op === 'removerange';\n        let rOp = (remLocal ? dl : dr) as IDiffRemoveRange;\n        let pOp = (remLocal ? dr : dl) as IDiffPatch;\n        console.assert(pOp.op === 'patch');\n\n        let pidx = pOp.key;\n        let start = rOp.key;\n        for (let i = start; i < start + rOp.length; ++i) {\n          let newMd = makeSplitPart(md, i, remLocal, !remLocal);\n          if (i === pidx) {\n            if (remLocal) {\n              newMd.remoteDiff = [pOp];\n            } else {\n              newMd.localDiff = [pOp];\n            }\n          }\n          output.push(newMd);\n        }\n      }\n    }\n  }\n  return output;\n}\n\n/**\n * Split \"addrange\" diffs on cell list level into individual decisions!\n * Also splits two-way insertions into two individual ones.\n */\nfunction splitCellInsertions(mergeDecisions: MergeDecision[]): MergeDecision[] {\n  let output: MergeDecision[] = [];\n\n  let makeSplitPart = function (\n    md: MergeDecision,\n    value: any,\n    local: boolean,\n    remote: boolean,\n  ): MergeDecision {\n    let newMd = new MergeDecision(\n      md.absolutePath.slice(),\n      null,\n      null,\n      md.action,\n      md.conflict,\n    );\n    if (\n      (local && !hasEntries(md.localDiff)) ||\n      (!local && !hasEntries(md.remoteDiff))\n    ) {\n      throw new Error('Invalid input: ' + md);\n    }\n    let key = (local ? md.localDiff : md.remoteDiff)![0].key as number;\n    let newDiff: IDiffAddRange[] = [\n      {\n        key: key,\n        op: 'addrange',\n        valuelist: [value],\n      },\n    ];\n\n    console.assert(local || remote);\n    if (local) {\n      newMd.localDiff = newDiff;\n    }\n    if (remote) {\n      newMd.remoteDiff = newDiff;\n    }\n    return newMd;\n  };\n\n  for (let md of mergeDecisions) {\n    // Just push decisions not on cells list:\n    if (!arraysEqual(md.absolutePath, ['cells'])) {\n      output.push(md);\n      continue;\n    }\n\n    // Check wether all diffs are pure addrange\n    let correctType = true;\n    if (md.localDiff) {\n      for (let dl of md.localDiff) {\n        if (dl.op !== 'addrange') {\n          correctType = false;\n          break;\n        }\n      }\n    }\n    if (md.remoteDiff) {\n      for (let dl of md.remoteDiff) {\n        if (dl.op !== 'addrange') {\n          correctType = false;\n          break;\n        }\n      }\n    }\n    if (!correctType) {\n      output.push(md);\n      continue;\n    }\n\n    let dl =\n      md.localDiff && md.localDiff.length === 1\n        ? (md.localDiff[0] as IDiffAddRange)\n        : null;\n    let dr =\n      md.remoteDiff && md.remoteDiff.length === 1\n        ? (md.remoteDiff[0] as IDiffAddRange)\n        : null;\n\n    if ((dl && !dr) || (dr && !dl)) {\n      // One-way diff\n      let d = dl ? dl : dr!;\n      let insert = d.valuelist;\n      for (let v of insert) {\n        output.push(makeSplitPart(md, v, !!dl, !!dr));\n      }\n    } else if (dl && dr) {\n      // Two way diff\n      // First, check if both insertions are equal!\n      let eq = stringify(dl.valuelist) === stringify(dr.valuelist);\n      if (eq) {\n        // Split to one decision per cell\n        for (let c of dl.valuelist) {\n          output.push(makeSplitPart(md, c, true, true));\n        }\n      } else {\n        // Next, check decision for ruling on order (e.g.\n        // local_then_remote, which we will use as the default).\n\n        let start = dl.key;\n        console.assert(start === dr.key);\n        if (md.action === 'remote_then_local') {\n          // Only case where we need to switch order!\n          for (let c of dr.valuelist) {\n            const part = makeSplitPart(md, c, false, true);\n            part.action = 'remote';\n            output.push(part);\n          }\n          for (let c of dl.valuelist) {\n            const part = makeSplitPart(md, c, true, false);\n            part.action = 'local';\n            output.push(part);\n          }\n        } else {\n          for (let c of dl.valuelist) {\n            const part = makeSplitPart(md, c, true, false);\n            part.action = 'local';\n            output.push(part);\n          }\n          for (let c of dr.valuelist) {\n            const part = makeSplitPart(md, c, false, true);\n            part.action = 'remote';\n            output.push(part);\n          }\n        }\n      }\n    }\n  }\n  return output;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport * as nbformat from '@jupyterlab/nbformat';\n\nimport { Panel, Widget } from '@lumino/widgets';\n\nimport type { CodeEditor } from '@jupyterlab/codeeditor';\n\nimport type { IRenderMimeRegistry } from '@jupyterlab/rendermime';\n\nimport type { TranslationBundle } from '@jupyterlab/translation';\n\nimport { MergePanel } from '../../common/basepanel';\n\nimport { CollapsiblePanel } from '../../common/collapsiblepanel';\n\nimport { DragPanel } from '../../common/dragpanel';\n\nimport type {\n  ICellDiffWidgetOptions,\n  IMergeViewOptions,\n} from '../../common/interfaces';\n\nimport { createNbdimeMergeView, MergeView } from '../../common/mergeview';\n\nimport { hasEntries, splitLines } from '../../common/util';\n\nimport {\n  IStringDiffModel,\n  StringDiffModel,\n  IDiffModel,\n  OutputDiffModel,\n} from '../../diff/model';\n\nimport { CellDiffWidget } from '../../diff/widget';\n\nimport { FlexPanel } from '../../upstreaming/flexpanel';\n\nimport type { CellMergeModel } from '../model';\n\nimport { RenderableOutputsMergeView } from './output';\n\nimport {\n  createCheckbox,\n  UNCHANGED_MERGE_CLASS,\n  ONEWAY_LOCAL_CLASS,\n  ONEWAY_REMOTE_CLASS,\n  TWOWAY_ADDITION_CLASS,\n  TWOWAY_DELETION_CLASS,\n  MERGE_CLASSES,\n} from './common';\n\nexport const CELLMERGE_CLASS = 'jp-Cell-merge';\nconst CELL_HEADER_CLASS = 'jp-Merge-cellHeader';\nconst CELL_HEADER_TITLE_CLASS = 'jp-Merge-cellHeader-title';\n\nconst MARKED_DELETE = 'jp-mod-todelete';\nconst MARKED_CLEAR_OUTPUTS = 'jp-mod-clearoutputs';\nconst CLEAR_OUTPUT_TOGGLE_CLASS = 'jp-Merge-clearOutput-toggle';\nconst DELETE_CELL_TOGGLE_CLASS = 'jp-Merge-delete-cell-toggle';\n\nconst EXECUTIONCOUNT_ROW_CLASS = 'jp-Cellrow-executionCount';\nconst SOURCE_ROW_CLASS = 'jp-Cellrow-source';\nconst METADATA_ROW_CLASS = 'jp-Cellrow-metadata';\nconst OUTPUTS_ROW_CLASS = 'jp-Cellrow-outputs';\n\nconst OUTPUTS_CONFLICTED_CLASS = 'jp-conflicted-outputs';\nconst MARK_OUTPUTS_RESOLVED_CLASS = 'jp-conflicted-outputs-button';\nconst CELL_ID_CONFLICTED_CLASS = 'jp-conflicted-cellId';\n\nexport interface ICellMergeViewOptions {\n  local: IStringDiffModel | null;\n  remote: IStringDiffModel | null;\n  merged: IDiffModel;\n  readOnly?: boolean;\n  editorClasses: string[];\n  editorFactory?: CodeEditor.Factory;\n}\n\n/**\n * CellMergeWidget for cell changes\n */\nexport class CellMergeWidget extends MergePanel<CellMergeModel> {\n  static createMergeView({\n    merged,\n    editorFactory,\n    readOnly,\n    ...others\n  }: ICellMergeViewOptions & IMergeViewOptions): Widget | null {\n    let view: Widget | null = null;\n    if (merged instanceof StringDiffModel) {\n      view = createNbdimeMergeView({\n        merged,\n        readOnly: readOnly ?? false,\n        factory: editorFactory,\n        ...others,\n      });\n    }\n    return view;\n  }\n\n  protected static getOutputs(\n    models: OutputDiffModel[],\n    base?: boolean,\n  ): nbformat.IOutput[] {\n    let raw: nbformat.IOutput[] = [];\n    for (let m of models) {\n      if (base === true) {\n        if (m.base) {\n          raw.push(m.base);\n        }\n      } else {\n        if (m.remote) {\n          raw.push(m.remote);\n        }\n      }\n    }\n    return raw;\n  }\n\n  /**\n   *\n   */\n  constructor({\n    rendermime,\n    mimetype,\n    ...options\n  }: ICellDiffWidgetOptions<CellMergeModel>) {\n    super(options);\n    this.addClass(CELLMERGE_CLASS);\n    this._rendermime = rendermime;\n    this._trans = this._translator.load('nbdime');\n    this.mimetype = mimetype;\n\n    this.init();\n  }\n\n  validateMerged(candidate: nbformat.ICell): nbformat.ICell {\n    if (this.sourceView && this.sourceView instanceof MergeView) {\n      let text = this.sourceView.getMergedValue();\n      let lines = splitLines(text);\n      if (candidate.source !== lines) {\n        candidate.source = lines;\n      }\n    }\n    if (this.metadataView && this.metadataView instanceof MergeView) {\n      let text = this.metadataView.getMergedValue();\n      if (JSON.stringify(candidate.metadata) !== text) {\n        // This will need to be validated server side,\n        // and should not be touched by client side\n        // (structure might differ from assumed form)\n        candidate.metadata = JSON.parse(text);\n      }\n    }\n    if (nbformat.isCode(candidate) && this.outputViews) {\n      let model = this.outputViews.merged;\n      let outputs = model.toJSON();\n      candidate.outputs = outputs;\n    }\n    return candidate;\n  }\n\n  protected init() {\n    let model = this.model;\n    let CURR_CLASSES = MERGE_CLASSES.slice(); // copy\n\n    this.createHeader();\n\n    // Mark cells that have no changes:\n    if (\n      model.merged.unchanged &&\n      model.local &&\n      model.local.unchanged &&\n      model.remote &&\n      model.remote.unchanged\n    ) {\n      this.addClass(UNCHANGED_MERGE_CLASS);\n    }\n\n    /*\n     Two different display layouts depending on cell merge type:\n     1. Unchanged or one way insert/delete of cell, or identical insert/delete:\n        Single r/w editor (merged), with appropriate coloring for insert/delete\n     2. Everything else:\n        Full 4x merge view\n    */\n    let ladd = model.local && model.local.added;\n    let ldel = model.local && model.local.deleted;\n    let radd = model.remote && model.remote.added;\n    let rdel = model.remote && model.remote.deleted;\n    if ((ladd && !radd) || (ldel && !rdel)) {\n      this.headerTitle = ladd\n        ? this._trans.__('Cell added locally')\n        : this._trans.__('Cell deleted locally');\n    } else if ((radd && !ladd) || (rdel && !ldel)) {\n      this.headerTitle = radd\n        ? this._trans.__('Cell added remotely')\n        : this._trans.__('Cell deleted remotely');\n    }\n\n    if (\n      model.local === null ||\n      model.remote === null || // One sided change\n      (model.local.unchanged &&\n        model.remote.unchanged &&\n        model.merged.unchanged) || // Unchanged\n      model.local.added !== model.remote.added || // Onesided addition\n      (model.local.deleted && model.remote.unchanged) || // Onesided deletion (other side unchanged)\n      (model.local.unchanged && model.remote.deleted) || // Onesided deletion (other side unchanged)\n      (model.local.added && model.agreedCell) || // Identical additions\n      (model.local.deleted && model.remote.deleted) // Deletion on both\n    ) {\n      CURR_CLASSES = CURR_CLASSES.slice(1, 3);\n      // Add single view of source:\n      let view = CellDiffWidget.createView({\n        model: model.merged.source,\n        parent: model.merged,\n        editorClasses: CURR_CLASSES,\n        rendermime: this._rendermime,\n        editorFactory: this._editorFactory,\n        translator: this._translator,\n      });\n      if ((ladd && !radd) || (ldel && !rdel)) {\n        this.addClass(ONEWAY_LOCAL_CLASS);\n      } else if ((radd && !ladd) || (rdel && !ldel)) {\n        this.addClass(ONEWAY_REMOTE_CLASS);\n      } else if (ldel && rdel) {\n        this.headerTitle = this._trans.__('Deleted on both sides');\n        this.addClass(TWOWAY_DELETION_CLASS);\n      } else if (ladd && radd) {\n        this.headerTitle = this._trans.__('Added on both sides');\n        this.addClass(TWOWAY_ADDITION_CLASS);\n      }\n      view.addClass(SOURCE_ROW_CLASS);\n      this.addWidget(view);\n\n      if (hasEntries(model.merged.outputs)) {\n        // Add single view of rendered output\n        let container = new Panel();\n        for (let m of model.merged.outputs) {\n          view = CellDiffWidget.createView({\n            model: m,\n            parent: model.merged,\n            editorClasses: CURR_CLASSES,\n            rendermime: this._rendermime,\n            editorFactory: this._editorFactory,\n            translator: this._translator,\n          });\n          container.addWidget(view);\n        }\n        container.addClass(OUTPUTS_ROW_CLASS);\n        this.addWidget(container);\n      }\n    } else {\n      // Setup full 4-way mergeview of source, metadata and outputs\n      // as needed (if changed). Source/metadata/output are each a \"row\"\n      let execDec = model.getExecutionCountDecision();\n      if (execDec && execDec.action === 'clear') {\n        let row = new FlexPanel({ direction: 'left-to-right' });\n        row.addClass(EXECUTIONCOUNT_ROW_CLASS);\n        let textWidget = new Widget();\n        textWidget.node.textContent = this._trans.__(\n          'Execution count will be cleared.',\n        );\n        row.addWidget(textWidget);\n        this.addWidget(row);\n      }\n      let idDec = model.getCellIdDecision();\n      if (idDec && idDec.conflict) {\n        this.headerTitle = this._trans.__(\n          'Cell has conflicting IDs! Use a text editor to edit the value (base value kept).',\n        );\n        this.addClass(CELL_ID_CONFLICTED_CLASS);\n      }\n      let sourceView: Widget | null = null;\n      if (\n        model.local &&\n        model.local.source.unchanged &&\n        model.remote &&\n        model.remote.source.unchanged &&\n        model.merged.source.unchanged\n      ) {\n        // Use single unchanged view of source\n        sourceView = CellDiffWidget.createView({\n          model: model.merged.source,\n          parent: model.merged,\n          editorClasses: CURR_CLASSES,\n          rendermime: this._rendermime,\n          editorFactory: this._editorFactory,\n          translator: this._translator,\n        });\n      } else {\n        sourceView = CellMergeWidget.createMergeView({\n          local: model.local ? model.local.source : null,\n          remote: model.remote ? model.remote.source : null,\n          merged: model.merged.source,\n          editorClasses: CURR_CLASSES,\n          editorFactory: this._editorFactory,\n          translator: this._translator,\n          ...this._viewOptions,\n        });\n      }\n      if (sourceView === null) {\n        throw new Error('Was not able to create merge view for cell!');\n      }\n      this.sourceView = sourceView;\n      sourceView.addClass(SOURCE_ROW_CLASS);\n      this.addWidget(sourceView);\n\n      let metadataChanged = false;\n      let outputsChanged = false;\n      for (let m of model.subModels) {\n        if (!m || m.deleted) {\n          // Don't consider deleted cells\n          continue;\n        }\n        metadataChanged =\n          metadataChanged || (!!m.metadata && !m.metadata.unchanged);\n\n        if (m.outputs && m.outputs.length > 0) {\n          for (let o of m.outputs) {\n            outputsChanged = outputsChanged || !o.unchanged;\n          }\n        }\n      }\n\n      if (metadataChanged) {\n        let metadataView = CellMergeWidget.createMergeView({\n          local: model.local ? model.local.metadata : null,\n          remote: model.remote ? model.remote.metadata : null,\n          merged: model.merged.metadata,\n          editorClasses: CURR_CLASSES,\n          editorFactory: this._editorFactory,\n          translator: this._translator,\n          ...this._viewOptions,\n          readOnly: true, // Do not allow manual edit of metadata\n        });\n        if (metadataView === null) {\n          throw new Error(\n            'Was not able to create merge view for cell metadata!',\n          );\n        }\n        this.metadataView = metadataView;\n        let container = new Panel();\n        container.addWidget(metadataView);\n\n        let header = this._trans.__('Metadata changed');\n        let collapser = new CollapsiblePanel(container, header, true);\n        collapser.addClass(METADATA_ROW_CLASS);\n        this.addWidget(collapser);\n      }\n      if (outputsChanged || hasEntries(model.merged.outputs)) {\n        // We know here that we have code cell\n        // -> all have outputs !== null\n        let baseOut = CellMergeWidget.getOutputs(\n          model.local ? model.local.outputs! : [],\n          true,\n        );\n        let localOut = CellMergeWidget.getOutputs(\n          model.local ? model.local.outputs! : [],\n        );\n        let remoteOut = CellMergeWidget.getOutputs(\n          model.remote ? model.remote.outputs! : [],\n        );\n        let mergedOut = CellMergeWidget.getOutputs(model.merged.outputs!);\n        let view = new RenderableOutputsMergeView(\n          mergedOut,\n          MERGE_CLASSES,\n          this._rendermime,\n          baseOut,\n          remoteOut,\n          localOut,\n          this._viewOptions.showBase,\n        );\n        this.outputViews = view;\n\n        let header = outputsChanged\n          ? model.outputsConflicted\n            ? this._trans.__('Outputs conflicted')\n            : this._trans.__('Outputs changed')\n          : this._trans.__('Outputs unchanged');\n        let collapser = new CollapsiblePanel(view, header, !outputsChanged);\n        collapser.addClass(OUTPUTS_ROW_CLASS);\n\n        if (model.outputsConflicted) {\n          collapser.addClass(OUTPUTS_CONFLICTED_CLASS);\n          let conflictClearBtn = new Widget();\n          conflictClearBtn.addClass(MARK_OUTPUTS_RESOLVED_CLASS);\n          let node = conflictClearBtn.node;\n          let btn = document.createElement('button');\n          btn.onclick = (ev: MouseEvent) => {\n            if (ev.button !== 0) {\n              return; // Only main button clicks\n            }\n            model.clearOutputConflicts();\n            collapser.removeClass(OUTPUTS_CONFLICTED_CLASS);\n            collapser.headerTitle = this._trans.__('Outputs changed');\n            ev.preventDefault();\n            ev.stopPropagation();\n            conflictClearBtn.parent = null!;\n          };\n          btn.textContent = this._trans.__('Mark resolved');\n          node.appendChild(btn);\n          collapser.header.insertWidget(1, conflictClearBtn);\n        }\n\n        this.addWidget(collapser);\n      }\n    }\n  }\n\n  protected createHeader(): void {\n    let header = new Panel();\n    header.addClass(CELL_HEADER_CLASS);\n\n    // Add drag handle\n    let w = DragPanel.createDefaultHandle();\n    header.addWidget(w);\n\n    // Add title widget\n    w = new Widget();\n    this.headerTitleWidget = w;\n    w.addClass(CELL_HEADER_TITLE_CLASS);\n    header.addWidget(w);\n\n    if (hasEntries(this.model.merged.outputs)) {\n      // Add \"clear outputs\" checkbox\n      let clearOutputToggle = this._createClearOutputToggle();\n      header.addWidget(clearOutputToggle);\n    }\n\n    // Add \"delete cell\" checkbox\n    let deleteToggle = this._createDeleteToggle();\n    header.addWidget(deleteToggle);\n\n    // Add header to widget\n    this.addWidget(header);\n    this.header = header;\n  }\n\n  private _createClearOutputToggle(): Widget {\n    let { checkbox, widget } = createCheckbox(\n      this.model.clearOutputs,\n      this._trans.__('Clear outputs'),\n    );\n    if (this.model.clearOutputs) {\n      this.addClass(MARKED_CLEAR_OUTPUTS);\n    }\n    // Map checkbox -> model\n    checkbox.onchange = event => {\n      this.model.clearOutputs = checkbox.checked;\n      this.toggleClass(MARKED_CLEAR_OUTPUTS, checkbox.checked);\n    };\n    // Map model -> checkbox\n    this.model.clearOutputsChanged.connect((_model, value) => {\n      checkbox.checked = value;\n      this.toggleClass(MARKED_CLEAR_OUTPUTS, value);\n    });\n    widget.addClass(CLEAR_OUTPUT_TOGGLE_CLASS);\n    return widget;\n  }\n\n  private _createDeleteToggle(): Widget {\n    let { checkbox, widget } = createCheckbox(\n      this.model.deleteCell,\n      this._trans.__('Delete cell'),\n    );\n    if (this.model.deleteCell) {\n      this.addClass(MARKED_DELETE);\n    }\n    // Map checkbox -> model\n    checkbox.onchange = event => {\n      this.model.deleteCell = checkbox.checked;\n      this.toggleClass(MARKED_DELETE, checkbox.checked);\n    };\n    // Map model -> checkbox\n    this.model.deleteCellChanged.connect((_model, value) => {\n      checkbox.checked = value;\n      this.toggleClass(MARKED_DELETE, value);\n    });\n    widget.addClass(DELETE_CELL_TOGGLE_CLASS);\n    return widget;\n  }\n\n  mimetype: string;\n\n  header: Panel;\n  headerTitleWidget: Widget;\n\n  sourceView: Widget | null = null;\n  metadataView: Widget | null = null;\n  outputViews: RenderableOutputsMergeView | null = null;\n\n  set headerTitle(value: string) {\n    this.headerTitleWidget.node.innerText = value;\n  }\n\n  /**\n   * Get the model for the widget.\n   *\n   * #### Notes\n   * This is a read-only property.\n   */\n  get model(): CellMergeModel {\n    return this._model;\n  }\n\n  private _rendermime: IRenderMimeRegistry;\n  protected _trans: TranslationBundle;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport { Widget } from '@lumino/widgets';\n\n// Merge classes:\nexport const UNCHANGED_MERGE_CLASS = 'jp-Merge-unchanged';\nexport const ONEWAY_LOCAL_CLASS = 'jp-Merge-oneway-local';\nexport const ONEWAY_REMOTE_CLASS = 'jp-Merge-oneway-remote';\nexport const TWOWAY_ADDITION_CLASS = 'jp-Merge-twoway-addition';\nexport const TWOWAY_DELETION_CLASS = 'jp-Merge-twoway-deletion';\n\nconst BASE_MERGE_CLASS = 'jp-Merge-base';\nconst LOCAL_MERGE_CLASS = 'jp-Merge-local';\nconst REMOTE_MERGE_CLASS = 'jp-Merge-remote';\nconst MERGED_MERGE_CLASS = 'jp-Merge-merged';\n\nexport const MERGE_CLASSES = [\n  BASE_MERGE_CLASS,\n  LOCAL_MERGE_CLASS,\n  REMOTE_MERGE_CLASS,\n  MERGED_MERGE_CLASS,\n];\n\n/**\n * Create a widget containing a checkbox with a label.\n *\n * @export\n * @param {boolean} value - The initial check state (true = checked)\n * @param {string} text - The text of the label\n * @returns {{checkbox: HTMLInputElement, widget: Widget }}\n */\nexport function createCheckbox(\n  value: boolean,\n  text: string,\n  indeterminate = false,\n): { checkbox: HTMLInputElement; widget: Widget } {\n  let checkbox = document.createElement('input');\n  checkbox.setAttribute('type', 'checkbox');\n  checkbox.checked = value;\n  checkbox.indeterminate = indeterminate;\n  // Create label for checkbox:\n  let widget = new Widget();\n  let label = document.createElement('label');\n  label.textContent = text;\n  // Combine checkbox and label:\n  label.insertBefore(checkbox, label.childNodes[0]);\n  // Add checkbox to header:\n  widget.node.appendChild(label);\n  return { checkbox, widget };\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport { nullTranslator, type ITranslator } from '@jupyterlab/translation';\n\nimport { Panel, Widget } from '@lumino/widgets';\n\nimport { Signal, ISignal } from '@lumino/signaling';\n\nimport { FriendlyDragDrop, DragDropPanel } from '../../common/dragpanel';\n\nimport type { CellMergeWidget } from './cell';\n\nconst CELL_DRAG_DROP_CLASS = 'jp-merge-celldragdrop';\n\nconst MARK_CHUNK_RESOLVED_CLASS = 'jp-conflicted-cells-button';\nconst CHUNK_HEADER_CLASS = 'jp-conflicted-cells-header';\nconst CONFLICTED_CELL_CHUNK_CLASS = 'jp-conflicted-cells';\n\nexport class CellsDragDrop extends FriendlyDragDrop {\n  /**\n   *\n   */\n  constructor(options?: DragDropPanel.IOptions) {\n    super(options);\n    this.addClass(CELL_DRAG_DROP_CLASS);\n  }\n\n  /**\n   * Called when something has been dropped in the panel.\n   *\n   * As only internal moves are supported, we know the type of the keys\n   */\n  protected move(from: number[], to: number[]): void {\n    let friendFromId = from[0];\n    let friendToId = to[0];\n    let widgetFromId = from[1];\n    let widgetToId = to[1];\n    let adjustedTo = widgetToId;\n    if (friendFromId === friendToId) {\n      if (widgetToId > widgetFromId) {\n        // Have to adjust index for insertWidget in same instance\n        adjustedTo -= 1;\n        to[1] = adjustedTo;\n      } else if (widgetFromId === widgetToId) {\n        // No-op, same position\n        return;\n      }\n    }\n    let toPanel = this.friends[friendToId];\n    let fromPanel = this.friends[friendFromId];\n    const cell = fromPanel.widgets[widgetFromId];\n    toPanel.insertWidget(adjustedTo, cell);\n    this._moved.emit({\n      widget: cell as CellMergeWidget,\n      oldParent: fromPanel as CellsDragDrop,\n      before:\n        adjustedTo > 0\n          ? (toPanel.widgets[adjustedTo - 1] as CellMergeWidget)\n          : null,\n      after:\n        adjustedTo < toPanel.widgets.length\n          ? (toPanel.widgets[adjustedTo + 1] as CellMergeWidget)\n          : null,\n    });\n  }\n\n  get moved(): ISignal<this, CellsDragDrop.IMovedArgs> {\n    return this._moved;\n  }\n\n  private _moved = new Signal<this, CellsDragDrop.IMovedArgs>(this);\n}\n\nexport namespace CellsDragDrop {\n  export interface IMovedArgs {\n    widget: CellMergeWidget;\n    oldParent: CellsDragDrop;\n    before: CellMergeWidget | null;\n    after: CellMergeWidget | null;\n  }\n}\n\nexport class ChunkedCellsWidget extends Panel {\n  /**\n   *\n   */\n  constructor({ translator }: { translator?: ITranslator } = {}) {\n    super();\n    const trans = (translator ?? nullTranslator).load('nbdime');\n    this.addClass(CONFLICTED_CELL_CHUNK_CLASS);\n    this.header = new Widget();\n    this.header.addClass(CHUNK_HEADER_CLASS);\n    this.header.node.textContent = trans.__('Conflicting cell operations');\n    let button = document.createElement('button');\n    button.textContent = trans.__('Resolve Conflict');\n    button.onclick = this.onResolve.bind(this);\n    button.className = MARK_CHUNK_RESOLVED_CLASS;\n    this.header.node.appendChild(button);\n    this.addWidget(this.header);\n    this.cells = new CellsDragDrop();\n    this.addWidget(this.cells);\n  }\n\n  onResolve(event?: MouseEvent) {\n    for (let cell of this.cells.widgets) {\n      let model = (cell as CellMergeWidget).model;\n      if (model.onesided && model.conflicted) {\n        for (let d of model.decisions) {\n          d.conflict = false;\n        }\n      }\n    }\n    this.removeClass(CONFLICTED_CELL_CHUNK_CLASS);\n    this.header.parent = null;\n    this.header.dispose();\n    this._resolved.emit(undefined);\n  }\n\n  dispose() {\n    this.cells.parent = null;\n    this.cells = null!;\n    if (this.header) {\n      this.header.parent = null;\n    }\n    this.header = null!;\n    super.dispose();\n  }\n\n  header: Widget;\n\n  cells: CellsDragDrop;\n\n  get resolved(): ISignal<this, void> {\n    return this._resolved;\n  }\n\n  private _resolved = new Signal<this, void>(this);\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './cell';\nexport * from './notebook';\nexport * from './metadata';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type * as nbformat from '@jupyterlab/nbformat';\n\nimport type {\n  IDiffWidgetOptions,\n  IMergeViewOptions,\n} from '../../common/interfaces';\n\nimport { createNbdimeMergeView, MergeView } from '../../common/mergeview';\n\nimport { CollapsiblePanel } from '../../common/collapsiblepanel';\n\nimport { MergePanel } from '../../common/basepanel';\n\nimport type { MetadataMergeModel } from '../model';\n\nconst ROOT_METADATA_CLASS = 'jp-Metadata-merge';\n\n/**\n * MetadataWidget for changes to Notebook-level metadata\n */\nexport class MetadataMergeWidget extends MergePanel<MetadataMergeModel> {\n  constructor(\n    options: IDiffWidgetOptions<MetadataMergeModel> & IMergeViewOptions,\n  ) {\n    super(options);\n    this.addClass(ROOT_METADATA_CLASS);\n    this.init();\n  }\n\n  init() {\n    const model = this._model;\n\n    // We know/assume that MetadataMergeModel never has\n    // null values for local/remote:\n    const viewOptions = {...this._viewOptions};\n    const unchanged = model.decisions.length === 0;\n    if (unchanged) {\n      viewOptions.collapseIdentical = false;\n    }\n    this.view = createNbdimeMergeView({\n      remote: model.remote,\n      local: model.local,\n      merged: model.merged,\n      factory: this._editorFactory,\n      translator: this._translator,\n      ...viewOptions,\n    });\n    const trans = this._translator.load('nbdime');\n    const wrapper = new CollapsiblePanel(\n      this.view,\n      unchanged ? trans.__('Notebook metadata unchanged') : trans.__('Notebook metadata changed'),\n      true,\n    );\n    this.addWidget(wrapper);\n  }\n\n  validateMerged(\n    candidate: nbformat.INotebookMetadata,\n  ): nbformat.INotebookMetadata {\n    const text = this.view.getMergedValue();\n    if (JSON.stringify(candidate) !== text) {\n      // This will need to be validated server side,\n      // and should not be touched by client side\n      // (structure might differ from assumed form)\n      candidate = JSON.parse(text);\n    }\n    return candidate;\n  }\n\n  protected view: MergeView;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type * as nbformat from '@jupyterlab/nbformat';\n\nimport type { IRenderMimeRegistry } from '@jupyterlab/rendermime';\n\nimport type { ITranslator, TranslationBundle } from '@jupyterlab/translation';\n\nimport { MergePanel } from '../../common/basepanel';\n\nimport type {\n  IMergeViewOptions,\n  IMimeDiffWidgetOptions,\n} from '../../common/interfaces';\n\nimport { hasEntries, deepCopy } from '../../common/util';\n\nimport { FlexPanel } from '../../upstreaming/flexpanel';\n\nimport type { NotebookMergeModel } from '../model';\n\nimport { MetadataMergeWidget } from './metadata';\n\nimport { CellMergeWidget } from './cell';\n\nimport { createCheckbox } from './common';\n\nimport { CellsDragDrop, ChunkedCellsWidget } from './dragdrop';\n\nconst NBMERGE_CLASS = 'jp-Notebook-merge';\nconst NB_MERGE_CONTROLS_CLASS = 'jp-Merge-notebook-controls';\n\n/**\n * NotebookMergeWidget\n */\nexport class NotebookMergeWidget extends MergePanel<NotebookMergeModel> {\n  constructor({\n    rendermime,\n    ...options\n  }: IMimeDiffWidgetOptions<NotebookMergeModel> & IMergeViewOptions) {\n    super(options);\n    this._rendermime = rendermime;\n\n    this.addClass(NBMERGE_CLASS);\n  }\n\n  /**\n   * Start adding sub-widgets.\n   *\n   * Separated from constructor to allow 'live' adding of widgets\n   */\n  init(): Promise<void> {\n    let model = this._model;\n    let rendermime = this._rendermime;\n\n    let work = Promise.resolve();\n    this.addWidget(\n      new NotebookMergeControls({ model, translator: this._translator }),\n    );\n    work = work.then(() => {\n      if (model.metadata) {\n        this.metadataWidget = new MetadataMergeWidget({\n          model: model.metadata,\n          editorFactory: this._editorFactory,\n          translator: this._translator,\n          ...this._viewOptions,\n        });\n        this.addWidget(this.metadataWidget);\n      }\n    });\n    work = work.then(() => {\n      this.cellContainer = new CellsDragDrop({\n        acceptDropsFromExternalSource: true,\n      });\n      this.cellContainer.setFriendlyGroup(CellsDragDrop.makeGroup());\n      this.cellContainer.moved.connect(this.onDragDropMove, this);\n      this.addWidget(this.cellContainer);\n    });\n    this.cellWidgets = [];\n    let chunk: ChunkedCellsWidget | null = null;\n    for (let c of model.cells) {\n      work = work.then(() => {\n        return new Promise<void>(resolve => {\n          let w = new CellMergeWidget({\n            model: c,\n            rendermime,\n            mimetype: model.mimetype,\n            editorFactory: this._editorFactory,\n            translator: this._translator,\n            ...this._viewOptions,\n          });\n          this.cellWidgets.push(w);\n          if (c.onesided && c.conflicted) {\n            if (chunk === null) {\n              chunk = new ChunkedCellsWidget({ translator: this._translator });\n              chunk.cells.moved.connect(this.onDragDropMove, this);\n              chunk.resolved.connect(this.onChunkResolved, this);\n              this.cellContainer.addToFriendlyGroup(chunk.cells);\n            }\n            chunk.cells.addWidget(w);\n          } else {\n            if (chunk !== null) {\n              this.cellContainer.addWidget(chunk);\n              chunk = null;\n            }\n            this.cellContainer.addWidget(w);\n          }\n          // This limits us to drawing 60 cells per second, which shouldn't\n          // be a problem...\n          requestAnimationFrame(() => {\n            resolve();\n          });\n        });\n      });\n    }\n    work = work.then(() => {\n      if (chunk !== null) {\n        this.cellContainer.addWidget(chunk);\n      }\n    });\n    return work;\n  }\n\n  validateMerged(\n    candidate: nbformat.INotebookContent,\n  ): nbformat.INotebookContent {\n    let validated = deepCopy(candidate);\n    // Validate metadata\n    if (this.metadataWidget) {\n      validated.metadata = this.metadataWidget.validateMerged(\n        candidate.metadata,\n      );\n    }\n\n    // Validate cells\n    let i = 0;\n    for (let c of this.cellWidgets) {\n      if (!c.model.deleteCell) {\n        validated.cells[i] = c.validateMerged(candidate.cells[i]);\n        ++i;\n      }\n    }\n    return validated;\n  }\n\n  /**\n   * Get the model for the widget.\n   *\n   * #### Notes\n   * This is a read-only property.\n   */\n  get model(): NotebookMergeModel {\n    return this._model;\n  }\n\n  protected onDragDropMove(\n    sender: CellsDragDrop,\n    args: CellsDragDrop.IMovedArgs,\n  ): void {\n    // Move cell in model list\n    let { widget, oldParent, before, after } = args;\n    let from = this._model.cells.indexOf(widget.model);\n    let to: number;\n    if (after) {\n      to = this._model.cells.indexOf(after.model);\n    } else if (before) {\n      to = this._model.cells.indexOf(before.model) + 1;\n    } else {\n      throw new Error('Need either before or after');\n    }\n    if (to > from) {\n      to -= 1;\n    }\n    this._model.cells.splice(to, 0, this._model.cells.splice(from, 1)[0]);\n    if (oldParent.widgets.length === 0) {\n      let chunk = oldParent.parent! as ChunkedCellsWidget;\n      chunk.onResolve();\n    }\n    // Mark any conflict on a cell moved from chunk as resolved\n    if (\n      oldParent !== this.cellContainer &&\n      widget.parent === this.cellContainer\n    ) {\n      for (let d of widget.model.decisions) {\n        d.conflict = false;\n      }\n    }\n  }\n\n  protected onChunkResolved(sender: ChunkedCellsWidget, args: void): void {\n    let index = this.cellContainer.widgets.indexOf(sender);\n    while (sender.cells.widgets.length > 0) {\n      this.cellContainer.insertWidget(index++, sender.cells.widgets[0]);\n    }\n    sender.parent = null;\n    sender.dispose();\n  }\n\n  protected metadataWidget: MetadataMergeWidget | null = null;\n  protected cellWidgets: CellMergeWidget[];\n  protected cellContainer: CellsDragDrop;\n\n  private _rendermime: IRenderMimeRegistry;\n}\n\n/**\n * Collection of notebook-wide controls\n */\nclass NotebookMergeControls extends FlexPanel {\n  constructor({\n    model,\n    translator,\n  }: {\n    model: NotebookMergeModel;\n    translator: ITranslator;\n  }) {\n    super({\n      direction: 'left-to-right',\n    });\n    this.model = model;\n    this.trans = translator.load('nbdime');\n    this.addClass(NB_MERGE_CONTROLS_CLASS);\n    let anyOutputs = false;\n    for (let cell of model.cells) {\n      if (hasEntries(cell.merged.outputs)) {\n        anyOutputs = true;\n        break;\n      }\n    }\n    if (anyOutputs) {\n      this.init_controls();\n    }\n  }\n\n  init_controls(): void {\n    // Add \"Clear all outputs\" checkbox\n    let chk = createCheckbox(false, this.trans.__('Clear all cell outputs'));\n    this.clearOutputsToggle = chk.checkbox;\n    this.addWidget(chk.widget);\n\n    // Add \"Clear all conflicted outputs\" checkbox\n    chk = createCheckbox(false, this.trans.__('Clear conflicted cell outputs'));\n    this.clearConflictedOutputsToggle = chk.checkbox;\n    this.addWidget(chk.widget);\n\n    this.updateOutputsToggles();\n    this.connectOutputsToggles();\n  }\n\n  connectOutputsToggles(): void {\n    for (let cell of this.model.cells) {\n      if (hasEntries(cell.merged.outputs)) {\n        cell.clearOutputsChanged.connect(this.updateOutputsToggles, this);\n      }\n    }\n    this.clearOutputsToggle.addEventListener('change', this);\n    this.clearConflictedOutputsToggle.addEventListener('change', this);\n  }\n\n  disconnectOutputsToggles(): void {\n    for (let cell of this.model.cells) {\n      if (hasEntries(cell.merged.outputs)) {\n        cell.clearOutputsChanged.disconnect(this.updateOutputsToggles, this);\n      }\n    }\n    this.clearOutputsToggle.removeEventListener('change', this);\n    this.clearConflictedOutputsToggle.removeEventListener('change', this);\n  }\n\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'change':\n        if (event.currentTarget === this.clearOutputsToggle) {\n          this.onClearAllOutputsChanged();\n        } else if (event.currentTarget === this.clearConflictedOutputsToggle) {\n          this.onClearConflictedOutputsChanged();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  onClearAllOutputsChanged(): void {\n    this.disconnectOutputsToggles();\n    try {\n      let value = this.clearOutputsToggle.checked;\n      for (let cell of this.model.cells) {\n        if (hasEntries(cell.merged.outputs)) {\n          cell.clearOutputs = value;\n        }\n      }\n    } finally {\n      this.updateOutputsToggles();\n      this.connectOutputsToggles();\n    }\n  }\n\n  onClearConflictedOutputsChanged(): void {\n    this.disconnectOutputsToggles();\n    try {\n      let value = this.clearConflictedOutputsToggle.checked;\n      for (let cell of this.model.cells) {\n        if (hasEntries(cell.merged.outputs) && cell.outputsConflicted) {\n          cell.clearOutputs = value;\n        }\n      }\n    } finally {\n      this.updateOutputsToggles();\n      this.connectOutputsToggles();\n    }\n  }\n\n  updateOutputsToggles(): void {\n    // null = indeterminate\n    let all: boolean | null | undefined = undefined;\n    let conflicted: boolean | null | undefined = undefined;\n    for (let cell of this.model.cells) {\n      if (hasEntries(cell.merged.outputs)) {\n        let current = cell.clearOutputs;\n        if (all === null) {\n          // Indeterminate, current value won't change it\n        } else if (all === undefined) {\n          all = current;\n        } else if (all !== current) {\n          all = null;\n        }\n        if (cell.outputsConflicted) {\n          if (conflicted === null) {\n            // Indeterminate, current value won't change it\n          } else if (conflicted === undefined) {\n            conflicted = current;\n          } else if (conflicted !== current) {\n            conflicted = null;\n          }\n        }\n      }\n      if (conflicted === null && all === null) {\n        // Both indeterminate, short circuit\n        break;\n      }\n    }\n\n    this.clearOutputsToggle.checked = all === true;\n    this.clearOutputsToggle.indeterminate = all === null;\n\n    this.clearConflictedOutputsToggle.checked = conflicted === true;\n    this.clearConflictedOutputsToggle.indeterminate = conflicted === null;\n    this.clearConflictedOutputsToggle.disabled = conflicted === undefined;\n    if (conflicted === undefined) {\n      this.clearConflictedOutputsToggle.parentElement!.setAttribute(\n        'disabled',\n        '',\n      );\n    } else {\n      this.clearConflictedOutputsToggle.parentElement!.removeAttribute(\n        'disabled',\n      );\n    }\n  }\n\n  clearOutputsToggle: HTMLInputElement;\n\n  clearConflictedOutputsToggle: HTMLInputElement;\n\n  model: NotebookMergeModel;\n\n  protected trans: TranslationBundle;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type * as nbformat from '@jupyterlab/nbformat';\n\nimport type { IRenderMimeRegistry, IOutputModel } from '@jupyterlab/rendermime';\n\nimport {\n  OutputArea,\n  OutputAreaModel,\n  IOutputAreaModel,\n} from '@jupyterlab/outputarea';\n\nimport type { Drag } from '@lumino/dragdrop';\n\nimport { PanelLayout, Widget } from '@lumino/widgets';\n\nimport {\n  DragDropPanel,\n  DropPanel,\n  DragPanel,\n  findChild,\n  MIME_INDEX,\n} from '../../common/dragpanel';\n\nimport { FlexPanel } from '../../upstreaming/flexpanel';\n\nconst REORDERABLE_OUTPUT_CLASS = 'jp-Merge-reorder-outputs';\nconst REORDERABLE_OUTPUT_DRAGIMAGE_CLASS = 'jp-Merge-dragimage-output';\nconst DELETE_DROP_ZONE_CLASS = 'jp-Merge-output-drop-delete';\n\n/**\n * An OutputAreaModel which allows for reordering of its\n * outputs.\n */\nexport class ReorderableOutputModel extends OutputAreaModel {\n  insert(index: number, item: IOutputModel): void {\n    // Note: We do not need worry about consolidating outputs\n    // like the `add` method in parent class.\n    this.list.insert(index, item);\n  }\n\n  move(fromIndex: number, toIndex: number): void {\n    // Note: We do not need worry about consolidating outputs\n    // like the `add` method in parent class.\n    this.list.move(fromIndex, toIndex);\n  }\n\n  remove(index: number): IOutputModel | undefined {\n    return this.list.remove(index);\n  }\n}\n\n/**\n * An OutputArea which supports the reordering\n * capabilities of ReorderableOutputModel\n */\nexport class ReorderableOutputWidget extends OutputArea {\n  declare readonly model: ReorderableOutputModel;\n\n  /**\n   * Follow changes on the model state.\n   */\n  protected onModelChanged(\n    sender: IOutputAreaModel,\n    args: IOutputAreaModel.ChangedArgs,\n  ) {\n    let layout = this.layout as PanelLayout;\n    switch (args.type) {\n      case 'move':\n        layout.insertWidget(args.newIndex, layout.widgets[args.oldIndex]);\n        break;\n      case 'remove':\n        layout.removeWidgetAt(args.oldIndex);\n        break;\n      default:\n        return super.onModelChanged(sender, args);\n    }\n  }\n}\n\nclass DisconnectedDropTarget extends DropPanel {\n  constructor() {\n    super({ acceptDropsFromExternalSource: true });\n  }\n\n  protected findDropTarget(input: HTMLElement): HTMLElement | null {\n    if (input === this.node || this.node.contains(input)) {\n      return this.node;\n    }\n    return null;\n  }\n\n  protected processDrop(dropTarget: HTMLElement, event: Drag.Event): void {\n    if (this.callback) {\n      this.callback(dropTarget, event);\n    }\n  }\n\n  callback: ((dropTarget: HTMLElement, event: Drag.Event) => void) | null =\n    null;\n}\n\n/**\n * Widget for showing side by side comparison and picking of merge outputs\n */\nexport class RenderableOutputsMergeView extends DragDropPanel {\n  static makeOutputsDraggable(area: OutputArea): void {\n    for (const widget of area.layout!) {\n      DragPanel.makeHandle(widget);\n    }\n  }\n\n  private static get deleteDrop(): DisconnectedDropTarget {\n    if (!RenderableOutputsMergeView._deleteDrop) {\n      let widget = new DisconnectedDropTarget();\n      widget.addClass(DELETE_DROP_ZONE_CLASS);\n      let icon = document.createElement('i');\n      icon.className = 'fa fa-lg fa-trash-o';\n      icon.setAttribute('aria-hidden', 'true');\n      widget.node.appendChild(icon);\n      widget.node.style.position = 'absolute';\n      RenderableOutputsMergeView._deleteDrop = widget;\n    }\n    return RenderableOutputsMergeView._deleteDrop;\n  }\n  private static _deleteDrop: DisconnectedDropTarget | null = null;\n\n  /**\n   *\n   */\n  constructor(\n    merged: nbformat.IOutput[],\n    classes: string[],\n    rendermime: IRenderMimeRegistry,\n    base: nbformat.IOutput[] | null,\n    remote: nbformat.IOutput[] | null,\n    local: nbformat.IOutput[] | null,\n    showBase = true,\n  ) {\n    super();\n    this.showBase = showBase;\n    this.addClass(REORDERABLE_OUTPUT_CLASS);\n\n    if (!base !== !remote || !base !== !local) {\n      // Assert that either none, or all of base/remote/local are given\n      throw new Error(\n        'Renderable outputs merge-view either takes only merged output ' +\n          'or a full set of four output lists.',\n      );\n    }\n\n    if (base) {\n      this.base = new OutputAreaModel();\n      for (let output of base) {\n        this.base.add(output);\n      }\n      this.remote = new OutputAreaModel();\n      for (let output of remote!) {\n        this.remote.add(output);\n      }\n      this.local = new OutputAreaModel();\n      for (let output of local!) {\n        this.local.add(output);\n      }\n    }\n    this.merged = new ReorderableOutputModel();\n    for (let output of merged) {\n      this.merged.add(output);\n    }\n    this.rendermime = rendermime;\n    this.panes = [];\n\n    this.init(classes);\n  }\n\n  init(classes: string[]): void {\n    let row = new FlexPanel({ direction: 'left-to-right', evenSizes: true });\n    if (this.local) {\n      let leftPane = new OutputArea({\n        model: this.local,\n        rendermime: this.rendermime,\n      });\n      leftPane.addClass(classes[1]);\n      row.addWidget(leftPane);\n      this.panes.push(leftPane);\n    }\n    if (this.base && this.showBase) {\n      let basePane = new OutputArea({\n        model: this.base,\n        rendermime: this.rendermime,\n      });\n      basePane.addClass(classes[0]);\n      row.addWidget(basePane);\n      this.panes.push(basePane);\n    }\n    if (this.remote) {\n      let rightPane = new OutputArea({\n        model: this.remote,\n        rendermime: this.rendermime,\n      });\n      rightPane.addClass(classes[2]);\n      row.addWidget(rightPane);\n      this.panes.push(rightPane);\n    }\n    if (row.widgets.length > 0) {\n      this.addWidget(row);\n      row = new FlexPanel({ direction: 'left-to-right', evenSizes: true });\n    }\n\n    this.mergePane = new ReorderableOutputWidget({\n      model: this.merged,\n      rendermime: this.rendermime,\n    });\n    this.mergePane.addClass(classes[3]);\n    row.addWidget(this.mergePane);\n    this.panes.push(this.mergePane);\n    this.addWidget(row);\n\n    for (let p of this.panes) {\n      RenderableOutputsMergeView.makeOutputsDraggable(p);\n    }\n  }\n\n  /**\n   * Overrided version to allow drag and drop from source lists to merged list\n   */\n  protected findDragTarget(handle: HTMLElement): HTMLElement | null {\n    // First check for a drag handle\n    if (handle === null) {\n      return null;\n    }\n\n    // Next find out which pane it belongs to, and which output it belongs to\n    for (let pane of this.panes) {\n      let child = findChild(pane.node, handle);\n      if (child !== null) {\n        return child;\n      }\n    }\n    return null;\n  }\n\n  protected getIndexOfChildNode(node: HTMLElement, parent?: PanelLayout): any {\n    for (let pane of this.panes) {\n      let child = findChild(pane.node, node);\n      if (child !== null) {\n        let paneIndex = this.panes.indexOf(pane);\n        return [\n          paneIndex,\n          super.getIndexOfChildNode(child, pane.layout as PanelLayout),\n        ];\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Called when something has been dropped in the panel.\n   *\n   * As only internal moves are supported, we know the type of the keys\n   */\n  protected move(from: number[], to: number[]): void {\n    let paneFrom = from[0];\n    let paneTo = to[0];\n    if (this.panes[paneTo] !== this.mergePane) {\n      // Shouldn't happen if drop target code is correct...\n      return;\n    }\n    let outputFrom = from[1];\n    let outputTo = to[1];\n    let adjustedTo = outputTo;\n    if (paneFrom === paneTo) {\n      if (outputTo > outputFrom) {\n        // Have to adjust index for insertWidget in same instance\n        adjustedTo -= 1;\n        to[1] = adjustedTo;\n      } else if (outputFrom === outputTo) {\n        // No-op, same position\n        return;\n      }\n    }\n    let toModel = this.mergePane.model;\n    let fromModel = this.panes[paneFrom].model;\n    if (paneTo !== paneFrom) {\n      toModel.insert(adjustedTo, fromModel.get(outputFrom));\n    } else {\n      toModel.move(outputFrom, adjustedTo);\n    }\n    RenderableOutputsMergeView.makeOutputsDraggable(this.mergePane);\n  }\n\n  /**\n   * Find a drop target from a given node\n   *\n   * Returns null if no valid drop target was found.\n   */\n  protected findDropTarget(node: HTMLElement): HTMLElement | null {\n    if (node === this.mergePane.node && this.mergePane.model.length === 0) {\n      // If empty, use pane as target\n      return this.mergePane.node;\n    }\n    // Only valid drop target is in merge pane!\n    return findChild(this.mergePane.node, node);\n  }\n\n  protected processDrop(dropTarget: HTMLElement, event: Drag.Event): void {\n    if (dropTarget === RenderableOutputsMergeView.deleteDrop.node) {\n      // Simply remove output\n      let [paneIdx, outputIdx] = event.mimeData.getData(MIME_INDEX) as number[];\n      if (this.panes[paneIdx] !== this.mergePane) {\n        // Shouldn't happen if drop target code is correct...\n        return;\n      }\n      this.mergePane.model.remove(outputIdx);\n      // Event cleanup\n      event.preventDefault();\n      event.stopPropagation();\n      event.dropAction = 'move';\n    } else if (\n      dropTarget === this.mergePane.node &&\n      this.mergePane.model.length === 0\n    ) {\n      // Dropping on empty merge pane\n      let sourceKey = event.mimeData.getData(MIME_INDEX) as number[];\n      this.move(sourceKey, [this.panes.indexOf(this.mergePane), 0]);\n      // Event cleanup\n      event.preventDefault();\n      event.stopPropagation();\n      event.dropAction = 'copy';\n    } else {\n      super.processDrop(dropTarget, event);\n    }\n  }\n\n  protected getDragImage(handle: HTMLElement) {\n    let target = this.findDragTarget(handle);\n    if (target) {\n      let image = target.cloneNode(true) as HTMLElement;\n      image.style.width = target.offsetWidth.toString() + 'px';\n      image.classList.add(REORDERABLE_OUTPUT_DRAGIMAGE_CLASS);\n      return image;\n    }\n    return null;\n  }\n\n  protected startDrag(\n    handle: HTMLElement,\n    clientX: number,\n    clientY: number,\n  ): void {\n    super.startDrag(handle, clientX, clientY);\n    // After starting drag, show delete drop-zone ('trash')\n    if (findChild(this.mergePane.node, handle)) {\n      let dd = RenderableOutputsMergeView.deleteDrop;\n      dd.callback = this.processDrop.bind(this);\n      // Calculate position and size:\n      let ourRect = this.mergePane.node.getBoundingClientRect();\n      dd.node.style.left = '0';\n      dd.node.style.width =\n        (ourRect.left + window.pageXOffset).toString() + 'px';\n      dd.node.style.top = (ourRect.top + window.pageYOffset).toString() + 'px';\n      dd.node.style.height = ourRect.height.toString() + 'px';\n      // Attach to document\n      Widget.attach(dd, document.body);\n    }\n  }\n\n  protected onDragComplete(action: Drag.DropAction) {\n    super.onDragComplete(action);\n    // After finishing drag, hide delete drop-zone ('trash')\n    if (RenderableOutputsMergeView.deleteDrop.isAttached) {\n      Widget.detach(RenderableOutputsMergeView.deleteDrop);\n    }\n  }\n\n  base: OutputAreaModel | null = null;\n\n  remote: OutputAreaModel | null = null;\n\n  local: OutputAreaModel | null = null;\n\n  merged: ReorderableOutputModel;\n\n  mergePane: ReorderableOutputWidget;\n\n  panes: OutputArea[];\n\n  rendermime: IRenderMimeRegistry;\n\n  protected showBase: boolean;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type { ReadonlyJSONObject } from '@lumino/coreutils';\n\nimport type { IDiffObjectEntry } from '../diff/diffentries';\n\nimport { valueIn, unique } from '../common/util';\n\nexport class PatchObjectHelper implements Iterator<string> {\n  constructor(base: ReadonlyJSONObject, diff: IDiffObjectEntry[] | null) {\n    this._diffLUT = {};\n    let diffKeys: string[] = [];\n    if (diff) {\n      for (let d of diff) {\n        diffKeys.push(d.key);\n        this._diffLUT[d.key] = d;\n      }\n    }\n    this._diffKeys = diffKeys;\n    this.baseKeys = _objectKeys(base);\n  }\n\n  keys(): Iterable<string> {\n    this._remainingKeys = this.baseKeys\n      .concat(this._diffKeys)\n      .filter(unique)\n      .sort();\n    const iterator = this;\n    return {\n      [Symbol.iterator](): Iterator<string> {\n        return iterator;\n      },\n    };\n  }\n\n  isDiffKey(key: string): boolean {\n    return valueIn(key, this._diffKeys);\n  }\n\n  getDiffEntry(key: string): IDiffObjectEntry {\n    return this._diffLUT[key];\n  }\n\n  /**\n   * Whether there any dict entries after the current add/remove diff op.\n   *\n   * Note that if the current op is a remove op, it does not take into\n   * account any entries added below it. Similarly, if the current op is\n   * an add op it does not take into account any entries that are\n   * removed after it.\n   *\n   * Assumes current key is a diff key to either an add or remove op.\n   * @returns {boolean}\n   */\n  entriesAfterCurrentAddRem(): boolean {\n    if (this._currentIsAddition === undefined) {\n      throw new Error('Current op is not an add or remove op');\n    }\n    // Check for unchanged entries after, or any changed entries\n    // that are not of the OPPOSITE add/remove type:\n    let oppositeOp = this._currentIsAddition ? 'remove' : 'add';\n    for (let key of this._remainingKeys) {\n      if (!valueIn(key, this._diffKeys)) {\n        // There remains unchanged entries after\n        return true;\n      } else if (this._diffLUT[key].op !== oppositeOp) {\n        // There remains entries that should not be ignored\n        return true;\n      }\n    }\n    return false;\n  }\n\n  next(): IteratorResult<string> {\n    let key = this._remainingKeys.shift();\n    if (!key) {\n      return {\n        done: true,\n        value: undefined,\n      };\n    }\n    if (key && valueIn(key, this._diffKeys)) {\n      let op = this._diffLUT[key].op;\n      if (op === 'add') {\n        this._currentIsAddition = true;\n      } else if (op === 'remove') {\n        this._currentIsAddition = false;\n      } else {\n        this._currentIsAddition = undefined;\n      }\n    }\n    return { value: key, done: false };\n  }\n\n  baseKeys: string[];\n\n  private _currentIsAddition: boolean | undefined;\n  private _diffKeys: string[];\n  private _diffLUT: { [key: string]: IDiffObjectEntry };\n  private _remainingKeys: string[];\n}\n\n/**\n * The keys present in a Object class. Equivalent to Object.keys, but with a\n * fallback if not defined.\n */\nlet _objectKeys =\n  Object.keys ||\n  function (obj: any): string[] {\n    let has =\n      Object.prototype.hasOwnProperty ||\n      function () {\n        return true;\n      };\n    let keys: string[] = [];\n    for (let key in obj) {\n      if (has.call(obj, key)) {\n        keys.push(key);\n      }\n    }\n    return keys;\n  };\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport {\n  JSONValue,\n  JSONArray,\n  JSONExt,\n  JSONObject,\n  PartialJSONArray,\n  PartialJSONObject,\n  PartialJSONValue,\n} from '@lumino/coreutils';\n\nimport { deepCopy } from '../common/util';\n\nimport {\n  IDiffEntry,\n  IDiffArrayEntry,\n  IDiffObjectEntry,\n  validateObjectOp,\n  validateSequenceOp,\n} from '../diff/diffentries';\n\nimport { patchString } from './stringified';\n\n/**\n * Patch a base JSON object according to diff. Returns the patched object.\n */\nexport function patch(base: string, diff: IDiffEntry[] | null): string;\nexport function patch<T extends PartialJSONArray | JSONArray>(\n  base: T,\n  diff: IDiffEntry[] | null,\n): T;\nexport function patch<T extends JSONObject | PartialJSONObject>(\n  base: T,\n  diff: IDiffEntry[] | null,\n): T;\nexport function patch(\n  base: JSONValue | PartialJSONValue,\n  diff: IDiffEntry[] | null,\n): JSONValue;\nexport function patch(\n  base: JSONValue | PartialJSONValue,\n  diff: IDiffEntry[] | null,\n): JSONValue {\n  if (typeof base === 'string') {\n    return patchString(base, diff as IDiffArrayEntry[], 0, false).remote;\n  } else if (Array.isArray(base)) {\n    const baseCopy = JSONExt.deepCopy(base) as JSONArray;\n    return patchSequence(baseCopy, diff as IDiffArrayEntry[]);\n  } else if (typeof base === 'number' || typeof base === 'boolean') {\n    throw new TypeError('Cannot patch an atomic type: ' + typeof base);\n  } else if (base === null) {\n    throw new TypeError('Cannot patch a null base!');\n  } else {\n    const baseCopy = JSONExt.deepCopy(base) as JSONObject;\n    return patchObject(baseCopy, diff as IDiffObjectEntry[]);\n  }\n}\n\n/**\n * Patch an array according to the diff.\n */\nfunction patchSequence(\n  base: JSONArray,\n  diff: IDiffArrayEntry[] | null,\n): JSONArray {\n  if (diff === null) {\n    return deepCopy(base);\n  }\n  // The patched sequence to build and return\n  let patched: JSONArray = [];\n  // Index into obj, the next item to take unless diff says otherwise\n  let take = 0;\n  let skip = 0;\n  for (let e of diff) {\n    // Check for valid entry first:\n    validateSequenceOp(base, e);\n    let index = e.key;\n\n    // Take values from base not mentioned in diff, up to not including\n    // index\n    for (let value of base.slice(take, index)) {\n      patched.push(deepCopy(value));\n    }\n\n    if (e.op === 'addrange') {\n      // Extend with new values directly\n      patched = patched.concat(e.valuelist);\n      skip = 0;\n    } else if (e.op === 'removerange') {\n      // Delete a number of values by skipping\n      skip = e.length;\n    } else if (e.op === 'patch') {\n      patched.push(patch(base[index], e.diff));\n      skip = 1;\n    }\n\n    // Skip the specified number of elements, but never decrement take.\n    // Note that take can pass index in diffs with repeated +/- on the\n    // same index, i.e. [op_remove(index), op_add(index, value)]\n    take = Math.max(take, index + skip);\n  }\n\n  // Take values at end not mentioned in diff\n  for (let value of base.slice(take)) {\n    patched.push(deepCopy(value));\n  }\n  return patched;\n}\n\n/**\n * Patch an object (dictionary type) according to the diff.\n */\nfunction patchObject(\n  base: JSONObject,\n  diff: IDiffObjectEntry[] | null,\n): JSONObject {\n  let patched: JSONObject = {};\n  let keysToCopy = Object.keys(base);\n\n  if (diff) {\n    for (let e of diff) {\n      // Check for valid entry first:\n      validateObjectOp(base, e, keysToCopy);\n      let key = e.key;\n\n      if (e.op === 'add') {\n        patched[key] = e.value;\n      } else if (e.op === 'remove') {\n        keysToCopy.splice(keysToCopy.indexOf(key), 1); // Remove key\n      } else if (e.op === 'replace') {\n        keysToCopy.splice(keysToCopy.indexOf(key), 1); // Remove key\n        patched[key] = e.value;\n      } else if (e.op === 'patch') {\n        keysToCopy.splice(keysToCopy.indexOf(key), 1); // Remove key\n        patched[key] = patch(base[key]!, e.diff);\n      }\n    }\n  }\n\n  // Take items not mentioned in diff\n  for (let key of keysToCopy) {\n    patched[key] = deepCopy(base[key]);\n  }\n  return patched;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nexport * from './common';\nexport * from './generic';\nexport * from './stringified';\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n'use strict';\n\nimport type {\n  ReadonlyJSONValue,\n  ReadonlyJSONArray,\n  ReadonlyJSONObject,\n} from '@lumino/coreutils';\n\nimport { valueIn, repeatString } from '../common/util';\n\nimport { JSON_INDENT, flattenStringDiff } from '../diff/util';\n\nimport {\n  IDiffEntry,\n  IDiffArrayEntry,\n  IDiffObjectEntry,\n  validateObjectOp,\n  validateSequenceOp,\n} from '../diff/diffentries';\n\nimport { DiffRangeRaw } from '../diff/range';\n\nimport * as stableStringify from 'json-stable-stringify';\nimport { PatchObjectHelper } from './common';\n\n// Workaround for TS issue #17002\ndeclare global {\n  interface ArrayConstructor {\n    isArray(arg: ReadonlyArray<any> | any): arg is ReadonlyArray<any>;\n  }\n}\n\n/**\n * The result of a patch operation of a stringified object.\n *\n * Contains the resulting remote string, as well as ranges describing which\n * parts of the string were changed.\n */\nexport type StringifiedPatchResult = {\n  /**\n   * The patched string value\n   */\n  remote: string;\n\n  /**\n   * Position ranges indicating added content, as indices into the remote value\n   */\n  additions: DiffRangeRaw[];\n\n  /**\n   * Position ranges indicating removed content, as indices into the base value\n   */\n  deletions: DiffRangeRaw[];\n};\n\n/**\n * Ordered stringify. Wraps stableStringify(), but handles indentation.\n *\n * indentFirst controls whether the first line is indented as well, and\n * defaults to true.\n */\nexport function stringify(\n  values: ReadonlyJSONValue | null,\n  level?: number,\n  indentFirst: boolean = true,\n): string {\n  let ret = stableStringify.default(values, { space: JSON_INDENT });\n  if (level) {\n    ret = _indent(ret, level, indentFirst);\n  }\n  return ret;\n}\n\n/**\n * Ensure value is string, if not stringify.\n */\nexport function stringifyAndBlankNull(value: ReadonlyJSONValue | null): string {\n  if (typeof value === 'string') {\n    return value;\n  } else if (value === null) {\n    return '';\n  } else {\n    return stringify(value);\n  }\n}\n\n/**\n * Patch a stringified JSON object.\n *\n * Returns the stringified value of the patched JSON object, as well as\n * position ranges indicating which parts of the string that was added or\n * removed.\n *\n * Internally, this builds the ranges based on the actual supplied diff, which\n * can therefore differ from a straigh string-based diff of stringified JSON\n * objects.\n */\nexport function patchStringified(\n  base: ReadonlyJSONValue,\n  diff: IDiffEntry[] | null,\n  level?: number,\n): StringifiedPatchResult {\n  if (level === undefined) {\n    level = 0;\n  }\n  if (typeof base === 'string') {\n    // Only stringify if level > 0\n    let stringifyPatch = level > 0;\n    return patchString(\n      base,\n      diff as IDiffArrayEntry[] | null,\n      level,\n      stringifyPatch,\n    );\n  } else if (Array.isArray(base)) {\n    return patchStringifiedList(base, diff as IDiffArrayEntry[] | null, level);\n  } else if (typeof base === 'number' || typeof base === 'boolean') {\n    throw new TypeError('Cannot patch an atomic type: ' + typeof base);\n  } else if (base === null) {\n    throw new TypeError('Cannot patch a null base!');\n  } else {\n    return patchStringifiedObject(\n      base,\n      diff as IDiffObjectEntry[] | null,\n      level,\n    );\n  }\n}\n\n/**\n * Patch a string according to a line based diff\n */\nexport function patchString(\n  base: string,\n  diff: IDiffArrayEntry[] | null,\n  level: number,\n  stringifyPatch?: boolean,\n): StringifiedPatchResult {\n  let additions: DiffRangeRaw[] = [];\n  let deletions: DiffRangeRaw[] = [];\n  let baseIndex = 0;\n\n  // Short-circuit if diff is empty\n  if (diff === null) {\n    return {\n      remote: stringifyPatch ? stringify(base, level) : base,\n      additions: additions,\n      deletions: deletions,\n    };\n  }\n  // Diffs are line-based, so flatten to character based:\n  diff = flattenStringDiff(base, diff);\n\n  // Index into obj, the next item to take unless diff says otherwise\n  let take = 0;\n  let skip = 0;\n  let remote = '';\n  for (let e of diff) {\n    let index = e.key;\n\n    // Take values from obj not mentioned in diff, up to not including index\n    let unchanged = base.slice(take, index);\n    remote += unchanged;\n    baseIndex += unchanged.length;\n\n    if (e.op === 'addrange') {\n      let added = e.valuelist;\n      additions.push(new DiffRangeRaw(remote.length, added.length, e.source));\n      remote += added;\n      skip = 0;\n    } else if (e.op === 'removerange') {\n      // Delete a number of values by skipping\n      skip = e.length;\n      deletions.push(new DiffRangeRaw(baseIndex, skip, e.source));\n      baseIndex += skip;\n    }\n    take = Math.max(take, index + skip);\n  }\n  remote += base.slice(take, base.length);\n  if (stringifyPatch) {\n    // The remote string should be stringified\n    remote = stringify(remote, level);\n    // Shift all indices by indentation + one to account for opening quote\n    _offsetRanges(level * JSON_INDENT.length + 1, additions, deletions);\n    // Offset ranges by JSON escaping\n    _adjustRangesByJSONEscapes(remote, additions);\n    _adjustRangesByJSONEscapes(stringify(base, level), deletions);\n  }\n  return { remote: remote, additions: additions, deletions: deletions };\n}\n\n/**\n * Patch a stringified object according to the object diff\n */\nfunction patchStringifiedObject(\n  base: ReadonlyJSONObject,\n  diff: IDiffObjectEntry[] | null,\n  level: number,\n): StringifiedPatchResult {\n  let remote = '';\n  let additions: DiffRangeRaw[] = [];\n  let deletions: DiffRangeRaw[] = [];\n  let postfix = ',\\n';\n\n  let baseIndex = 0;\n\n  // Short-circuit if diff is empty\n  if (diff === null) {\n    return {\n      remote: stringify(base, level),\n      additions: additions,\n      deletions: deletions,\n    };\n  }\n\n  // Object is dict. As diff keys should be unique, create map for easy processing\n  let helper = new PatchObjectHelper(base, diff);\n  let baseKeys = helper.baseKeys.slice();\n  for (const key of helper.keys()) {\n    let keyString = _makeKeyString(key, level + 1);\n    if (helper.isDiffKey(key)) {\n      // Entry has a change\n      let e = helper.getDiffEntry(key);\n      // Check for valid entry first:\n      validateObjectOp(base, e, baseKeys);\n\n      if (valueIn(e.op, ['add', 'replace', 'remove'])) {\n        // Replace is simply an add + remove, but without modifying keystring\n        let isReplace = e.op === 'replace';\n        if (e.op === 'add' || e.op === 'replace') {\n          let valr = stringify(e.value, level + 1, false) + postfix;\n          let start = remote.length;\n          let length = valr.length;\n          // Modify range depending on add or replace:\n          if (isReplace) {\n            start += keyString.length;\n          } else {\n            length += keyString.length;\n          }\n          // Check if postfix should be included or not\n          if (isReplace || !helper.entriesAfterCurrentAddRem()) {\n            length -= postfix.length;\n            if (e.op === 'add') {\n              length += 1; // Newline will still be added\n            }\n          }\n          additions.push(new DiffRangeRaw(start, length, e.source));\n          remote += keyString + valr;\n        }\n        if (e.op === 'remove' || e.op === 'replace') {\n          let valb = stringify(base[key], level + 1, false) + postfix;\n          let start = baseIndex;\n          let length = valb.length;\n          // Modify range depending on remove or replace:\n          if (isReplace) {\n            start += keyString.length;\n          } else {\n            length += keyString.length;\n          }\n          // Check if postfix should be included or not\n          if (isReplace || !helper.entriesAfterCurrentAddRem()) {\n            length -= postfix.length;\n            if (e.op === 'remove') {\n              length += 1; // Newline will still be removed\n            }\n          }\n          deletions.push(new DiffRangeRaw(start, length, e.source));\n          baseIndex += keyString.length + valb.length;\n          baseKeys.splice(baseKeys.indexOf(key), 1);\n        }\n      } else if (e.op === 'patch') {\n        let pd = patchStringified(base[key], e.diff, level + 1);\n        let valr = pd.remote;\n        // Insert key string:\n        valr =\n          keyString + valr.slice((level + 1) * JSON_INDENT.length) + postfix;\n        let offset =\n          remote.length + keyString.length - (level + 1) * JSON_INDENT.length;\n        _offsetRanges(offset, pd.additions, pd.deletions);\n        remote += valr;\n        additions = additions.concat(pd.additions);\n        deletions = deletions.concat(pd.deletions);\n\n        baseIndex +=\n          stringify(base[key], level + 1, false).length +\n          keyString.length +\n          postfix.length;\n        baseKeys.splice(baseKeys.indexOf(key), 1);\n      }\n    } else {\n      // Entry unchanged\n      let val = keyString + stringify(base[key], level + 1, false) + postfix;\n      remote += val;\n      baseIndex += val.length;\n    }\n  }\n\n  // Stringify correctly\n  if (remote.slice(remote.length - postfix.length) === postfix) {\n    remote = remote.slice(0, remote.length - postfix.length);\n  }\n  let indent = repeatString(JSON_INDENT, level);\n  remote = indent + '{\\n' + remote + '\\n' + indent + '}';\n  _offsetRanges(indent.length + 2, additions, deletions);\n  return { remote: remote, additions: additions, deletions: deletions };\n}\n\n/**\n * Patch a stringified list according to the list diff\n */\nfunction patchStringifiedList(\n  base: ReadonlyJSONArray,\n  diff: IDiffArrayEntry[] | null,\n  level: number,\n): StringifiedPatchResult {\n  let remote = '';\n  let additions: DiffRangeRaw[] = [];\n  let deletions: DiffRangeRaw[] = [];\n  let baseIndex = 0; // Position in base string\n  let postfix = ',\\n';\n\n  // Short-circuit if diff is empty\n  if (diff === null) {\n    return {\n      remote: stringify(base, level),\n      additions: additions,\n      deletions: deletions,\n    };\n  }\n  // Index into obj, the next item to take unless diff says otherwise\n  let take = 0;\n  let skip = 0;\n  for (let e of diff) {\n    // Check for valid entry first:\n    validateSequenceOp(base, e);\n    let index = e.key;\n\n    // Take values from obj not mentioned in diff, up to not including index\n    for (; index > take; take++) {\n      let unchanged = stringify(base[take], level + 1) + postfix;\n      remote += unchanged;\n      baseIndex += unchanged.length;\n    }\n\n    if (e.op === 'addrange') {\n      // Extend with new values directly\n      let val = '';\n      for (let v of e.valuelist) {\n        val += stringify(v, level + 1) + postfix;\n      }\n      let difflen = val.length;\n      if (index === base.length) {\n        difflen -= 1; // No comma if at end\n      }\n      additions.push(new DiffRangeRaw(remote.length, difflen, e.source));\n      remote += val;\n      skip = 0;\n    } else if (e.op === 'removerange') {\n      // Delete a number of values by skipping\n      let val = '';\n      let len = e.length;\n      for (let i = index; i < index + len; i++) {\n        val += stringify(base[i], level + 1) + postfix;\n      }\n      let difflen = val.length;\n      if (len + index === base.length) {\n        difflen -= 1; // No comma if at end\n      }\n      deletions.push(new DiffRangeRaw(baseIndex, difflen, e.source));\n      baseIndex += val.length;\n      skip = e.length;\n    } else if (e.op === 'patch') {\n      let pd = patchStringified(base[index], e.diff, level + 1);\n      skip = 1;\n\n      let val = pd.remote + postfix;\n      _offsetRanges(remote.length, pd.additions, pd.deletions);\n      additions = additions.concat(pd.additions);\n      deletions = deletions.concat(pd.deletions);\n      baseIndex += stringify(base[index], level + 1).length;\n      remote += val;\n    }\n\n    // Skip the specified number of elements, but never decrement take.\n    // Note that take can pass index in diffs with repeated +/- on the\n    // same index, i.e. [op_remove(index), op_add(index, value)]\n    take = Math.max(take, index + skip);\n  }\n\n  // Take unchanged values at end\n  for (; base.length > take; take++) {\n    remote += stringify(base[take], level + 1) + postfix;\n  }\n\n  // Stringify correctly\n  if (remote.slice(remote.length - postfix.length) === postfix) {\n    remote = remote.slice(0, remote.length - postfix.length);\n  }\n  let indent = repeatString(JSON_INDENT, level);\n  remote = indent + '[\\n' + remote + '\\n' + indent + ']';\n  _offsetRanges(indent.length + 2, additions, deletions);\n  return { remote: remote, additions: additions, deletions: deletions };\n}\n\n// Utility functions and variables:\n\n/**\n * Indent a (multiline) string with `JSON_INDENT` given number of times.\n *\n * indentFirst controls whether the first line is indented as well.\n */\nfunction _indent(str: string, levels: number, indentFirst: boolean): string {\n  indentFirst = indentFirst !== false;\n  let lines = str.split('\\n');\n  let ret: string[] = new Array(lines.length);\n  if (!indentFirst) {\n    ret[0] = lines[0];\n  }\n  for (let i = indentFirst ? 0 : 1; i < lines.length; i++) {\n    ret[i] = repeatString(JSON_INDENT, levels) + lines[i];\n  }\n  return ret.join('\\n');\n}\n\n/** Make a string for a stringified dict key, with indentation */\nfunction _makeKeyString(key: string, level: number) {\n  return repeatString(JSON_INDENT, level) + '\"' + key + '\": ';\n}\n\n/** Shift all positions in given ranges by same amount */\nfunction _offsetRanges(\n  offset: number,\n  additions: DiffRangeRaw[],\n  deletions: DiffRangeRaw[],\n) {\n  for (let a of additions) {\n    a.offset(offset);\n  }\n  for (let d of deletions) {\n    d.offset(offset);\n  }\n}\n\n/**\n * Adjust diff ranges to compensate for increased length occupied by characters\n * escaped during JSON stringification.\n */\nfunction _adjustRangesByJSONEscapes(\n  jsonString: string,\n  ranges: DiffRangeRaw[],\n) {\n  // First find all escaped characters, and expansion coefficients\n  let simpleEscapes = ['\\\\\"', '\\\\\\\\', '\\\\/', '\\\\b', '\\\\f', '\\\\n', '\\\\r', '\\\\t'];\n  let surrogateUnicodes =\n    /\\\\uD[89A-Fa-f][0-9a-fA-F]{2}\\\\uD[c-fC-F][0-9a-fA-F]{2}/g;\n  // Look for unicodes that are not part of a surrogate:\n  let unicodes =\n    /(?!\\\\uD[c-fC-F][0-9a-fA-F]{2})\\\\u(?!D[89A-Fa-f][0-9a-fA-F]{2})\\d{4}/g;\n  const SIMPLE_ESCAPE_LENGTH = 2;\n  const UNICODE_ESCAPE_LENGTH = 6;\n  const SURROGATE_ESCAPE_LENGTH = 12;\n\n  // Equal sized arrays identifying location and expansion\n  // factor of each escaped character:\n  let indices: number[] = [];\n  let expansions: number[] = [];\n\n  for (let e of simpleEscapes) {\n    let len = JSON.parse('\"' + e + '\"').length as number;\n    let i = 0;\n    while (1) {\n      i = jsonString.indexOf(e, i);\n      if (i < 0) {\n        break;\n      }\n      indices.push(i);\n      expansions.push(SIMPLE_ESCAPE_LENGTH - len);\n      i++;\n    }\n  }\n  let match: RegExpExecArray | null;\n  while ((match = unicodes.exec(jsonString)) !== null) {\n    indices.push(match.index);\n    expansions.push(\n      UNICODE_ESCAPE_LENGTH - JSON.parse('\"' + match[0] + '\"').length,\n    );\n  }\n  while ((match = surrogateUnicodes.exec(jsonString)) !== null) {\n    indices.push(match.index);\n    expansions.push(\n      SURROGATE_ESCAPE_LENGTH - JSON.parse('\"' + match[0] + '\"').length,\n    );\n  }\n\n  // Now adjust differences\n  // TODO: Optimize this algorithm?\n  for (let i = 0; i < indices.length; i++) {\n    for (let r of ranges) {\n      let idx = indices[i];\n      let exp = expansions[i];\n      if (r.from > idx) {\n        r.from += exp;\n      }\n      if (r.to > idx) {\n        r.to += exp;\n      }\n    }\n  }\n}\n","/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2016, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport { Message, MessageLoop } from '@lumino/messaging';\n\nimport { PanelLayout, Widget } from '@lumino/widgets';\n\n/**\n * The class name added to left-to-right flex layout parents.\n */\nconst LEFT_TO_RIGHT_CLASS = 'lm-mod-left-to-right';\n\n/**\n * The class name added to right-to-left flex layout parents.\n */\nconst RIGHT_TO_LEFT_CLASS = 'lm-mod-right-to-left';\n\n/**\n * The class name added to top-to-bottom flex layout parents.\n */\nconst TOP_TO_BOTTOM_CLASS = 'lm-mod-top-to-bottom';\n\n/**\n * The class name added to bottom-to-top flex layout parents.\n */\nconst BOTTOM_TO_TOP_CLASS = 'lm-mod-bottom-to-top';\n\n/**\n * A layout which arranges its widgets in a single row or column.\n *\n * Use the direction attribute to specify the layout direction.\n *\n * The sizing and flow of the children can be specified in several ways:\n *  - The container level properties `minimumSpacing`,`wrap`,\n *    `justifyContent`, `alignItems` and `alignContent`.\n *  - The stretching of the children in the layout direction either by:\n *    - Setting individual values per widget of grow/shrink/basis by\n *      `setGrow`, `setShrink` and `setSizeBasis`.\n *    - Using the convenience attributes `evenSizes` or `stretchType`.\n *  - Manually by CSS using the flexbox CSS attribute for the classes\n *    `lm-FlexPanel` and `lm-FlexPanel-child`.\n */\nexport class FlexLayout extends PanelLayout {\n  /**\n   * Construct a new flex layout.\n   *\n   * @param options - The options for initializing the layout.\n   */\n  constructor(options: FlexLayout.IOptions = {}) {\n    super();\n    if (options.direction !== void 0) {\n      this._direction = options.direction;\n    }\n    if (options.minimumSpacing !== void 0) {\n      this._minimumSpacing = Private.clampSpacing(options.minimumSpacing);\n    }\n    if (options.wrap !== void 0) {\n      this._wrap = options.wrap;\n    }\n    if (options.justifyContent !== void 0) {\n      this._justifyContent = options.justifyContent;\n    }\n    if (options.alignItems !== void 0) {\n      this._alignItems = options.alignItems;\n    }\n    if (options.alignContent !== void 0) {\n      this._alignContent = options.alignContent;\n    }\n    if (options.stretchType !== void 0) {\n      this._stretchType = options.stretchType;\n    }\n    if (options.evenSizes !== void 0) {\n      this._evenSizes = options.evenSizes;\n    }\n  }\n\n  /**\n   * Get the layout direction for the flex layout.\n   */\n  get direction(): FlexLayout.Direction {\n    return this._direction;\n  }\n\n  /**\n   * Set the layout direction for the flex layout.\n   */\n  set direction(value: FlexLayout.Direction) {\n    if (this._direction === value) {\n      return;\n    }\n    this._direction = value;\n    if (!this.parent) {\n      return;\n    }\n    Private.toggleDirection(this.parent, value);\n    this.parent.fit();\n  }\n\n  /**\n   * Get the minimum inter-element spacing for the flex layout.\n   */\n  get minimumSpacing(): number {\n    return this._minimumSpacing;\n  }\n\n  /**\n   * Set the minimum inter-element spacing for the flex layout.\n   */\n  set minimumSpacing(value: number) {\n    value = Private.clampSpacing(value);\n    if (this._minimumSpacing === value) {\n      return;\n    }\n    this._minimumSpacing = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.node.style.flexWrap = value ? 'wrap' : 'nowrap';\n    this.parent.fit();\n  }\n\n  /**\n   * Whether the layout should wrap its children if they do not all fit in\n   * column/row.\n   */\n  get wrap(): boolean {\n    return this._wrap;\n  }\n\n  set wrap(value: boolean) {\n    if (this._wrap === value) {\n      return;\n    }\n    this._wrap = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.node.style.flexWrap = value ? 'wrap' : 'nowrap';\n    this.parent.fit();\n  }\n\n  /**\n   * Controls how to align children in the direction of the layout.\n   */\n  get justifyContent(): FlexLayout.ContentJustification | null {\n    return this._justifyContent;\n  }\n\n  set justifyContent(value: FlexLayout.ContentJustification | null) {\n    if (this._justifyContent === value) {\n      return;\n    }\n    this._justifyContent = value;\n    let flex = Private.translateFlexString(value as string);\n    if (!this.parent) {\n      return;\n    }\n    this.parent.node.style.justifyContent = flex;\n    this.parent.fit();\n  }\n\n  /**\n   * Controls how to align children in the direction perpendicular to that\n   * of the layout (for a horizontal layout the will be the vertical align,\n   * and vice-versa).\n   */\n  get alignItems(): FlexLayout.ItemAlignment | null {\n    return this._alignItems;\n  }\n\n  set alignItems(value: FlexLayout.ItemAlignment | null) {\n    if (this._alignItems === value) {\n      return;\n    }\n    this._alignItems = value;\n    let flex = Private.translateFlexString(value as string);\n    if (!this.parent) {\n      return;\n    }\n    this.parent.node.style.alignItems = flex;\n    this.parent.fit();\n  }\n\n  /**\n   * If layout is set to wrap, this defines how the wrapped lines will be\n   * aligned in relation ro each other.\n   */\n  get alignContent(): FlexLayout.ContentAlignment | null {\n    return this._alignContent;\n  }\n\n  set alignContent(value: FlexLayout.ContentAlignment | null) {\n    if (this._alignContent === value) {\n      return;\n    }\n    this._alignContent = value;\n    let flex = Private.translateFlexString(value as string);\n    if (!this.parent) {\n      return;\n    }\n    this.parent.node.style.alignContent = flex;\n    // Setting has no effect unless wrap is true, but\n    // check against false to accomodate unset scenario\n    // where CSS rules might apply:\n    if (this._wrap !== false) {\n      this.parent.fit();\n    }\n  }\n\n  /**\n   * Describe how to stretch items to fit into flex panel.\n   */\n  get stretchType(): FlexLayout.StretchType | null {\n    return this._stretchType;\n  }\n\n  set stretchType(value: FlexLayout.StretchType | null) {\n    if (this._stretchType === value) {\n      return;\n    }\n    this._stretchType = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.fit();\n  }\n\n  /**\n   * If set, the free space is distributed such that the\n   * children are all the same size. Defaults to `false`.\n   *\n   * ### Notes\n   * Setting this to `true` will make the layout\n   * ignore the setting of `stretchType`.\n   */\n  get evenSizes(): boolean {\n    return this._evenSizes;\n  }\n\n  set evenSizes(value: boolean) {\n    if (this._evenSizes === value) {\n      return;\n    }\n    this._evenSizes = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.fit();\n  }\n\n  /**\n   * Determine whether direction is a horizontal one\n   */\n  isHorizontal(): boolean {\n    return (\n      this.direction === 'right-to-left' || this.direction === 'left-to-right'\n    );\n  }\n\n  /**\n   * Determine whether direction is a vertical one\n   */\n  isVertical(): boolean {\n    return !this.isHorizontal();\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    Private.toggleDirection(this.parent!, this.direction);\n    super.init();\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    // Call super implmentation\n    super.attachWidget(index, widget);\n\n    // Set order, if applicable\n    if (this.order) {\n      ArrayExt.insert(this.order, index, widget);\n    }\n\n    // Post a layout request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Change a widget's display order.\n   *\n   * @param fromIndex - The previous index of the widget in the layout.\n   *\n   * @param toIndex - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to move in the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected moveWidget(\n    fromIndex: number,\n    toIndex: number,\n    widget: Widget,\n  ): void {\n    if (fromIndex !== toIndex) {\n      // Change the order of the widget.\n      if (!this.order) {\n        this.order = this.widgets.slice();\n      }\n      ArrayExt.move(this.order, fromIndex, toIndex);\n      this._dirty = true;\n    }\n\n    // Post an update request for the parent widget.\n    this.parent!.update();\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    // Remove widget from order vector\n    if (this.order) {\n      let i = 0;\n      for (; i < this.order.length; ++i) {\n        if (widget === this.order[i]) {\n          ArrayExt.removeAt(this.order, i);\n          break;\n        }\n      }\n    }\n    // Call super implmentation\n    super.detachWidget(index, widget);\n\n    // Post a layout request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on an `'after-show'` message.\n   */\n  protected onAfterShow(msg: Message): void {\n    super.onAfterShow(msg);\n    this.parent!.update();\n  }\n\n  /**\n   * A message handler invoked on an `'after-attach'` message.\n   */\n  protected onAfterAttach(msg: Message): void {\n    super.onAfterAttach(msg);\n    Private.toggleDirection(this.parent!, this._direction);\n    let style = this.parent!.node.style;\n    style.flexWrap = this._wrap ? 'wrap' : 'nowrap';\n    style.justifyContent =\n      Private.translateFlexString(this._justifyContent) || '';\n    style.alignContent = Private.translateFlexString(this._alignContent) || '';\n    style.alignItems = Private.translateFlexString(this._alignItems) || '';\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    if (this.parent!.isVisible) {\n      this._update();\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.parent!.isVisible) {\n      this._update();\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   */\n  protected onFitRequest(msg: Message): void {\n    if (this.parent!.isAttached) {\n      this._fit();\n    }\n  }\n\n  /**\n   * Manage the display order of the widgets via the flexbox\n   * attribute `order`, while keeping the internal DOM order\n   * intact.\n   */\n  protected order: Widget[] | null = null;\n\n  /**\n   * Fit the layout to the total size required by the widgets.\n   */\n  private _fit(): void {\n    // Set the dirty flag to ensure only a single update occurs.\n    this._dirty = true;\n\n    // Notify the ancestor that it should fit immediately. This may\n    // cause a resize of the parent, fulfilling the required update.\n    let ancestor = this.parent!.parent;\n    if (ancestor) {\n      MessageLoop.sendMessage(ancestor, Widget.Msg.FitRequest);\n    }\n\n    // If the dirty flag is still set, the parent was not resized.\n    // Trigger the required update on the parent widget immediately.\n    if (this._dirty) {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n    }\n  }\n\n  /**\n   * Update the layout position and size of the widgets.\n   *\n   * The parent offset dimensions should be `-1` if unknown.\n   */\n  private _update(): void {\n    // Clear the dirty flag to indicate the update occurred.\n    this._dirty = false;\n\n    // Bail early if there are no widgets to layout.\n    let widgets = this.order || this.widgets;\n    if (widgets.length === 0) {\n      return;\n    }\n\n    // Set spacing by margins\n    let spacing = this.minimumSpacing.toString() + 'px';\n    if (this.isHorizontal()) {\n      for (let i = 0; i < widgets.length - 1; ++i) {\n        widgets[i].node.style.marginRight = spacing;\n      }\n    } else {\n      for (let i = 0; i < widgets.length - 1; ++i) {\n        widgets[i].node.style.marginBottom = spacing;\n      }\n    }\n\n    // Update stretch styles if set\n    if (this._evenSizes || this.stretchType) {\n      let basis: number | null = null;\n      let grow: number | null = null;\n      let shrink: number | null = null;\n      if (this._evenSizes) {\n        basis = 0;\n        grow = 1;\n      } else {\n        switch (this._stretchType) {\n          case 'grow':\n            // Allow items to grow from default size\n            grow = 1;\n            shrink = 0;\n            break;\n          case 'shrink':\n            // Allow items to shrink from default size\n            grow = 0;\n            shrink = 1;\n            break;\n          case 'both':\n            // Both growing and shrinking is allowed.\n            grow = 1;\n            shrink = 1;\n            break;\n          case 'fixed':\n            // Disallow both growing and shrinking.\n            grow = 0;\n            shrink = 0;\n            break;\n          default:\n            throw new TypeError('Invalid stretch type: ' + this._stretchType);\n        }\n      }\n      for (let i = 0; i < widgets.length; ++i) {\n        let style = widgets[i].node.style;\n        if (basis !== null) {\n          // Can only be 0, so no unit needed\n          style.flexBasis = basis.toString();\n        }\n        if (grow !== null) {\n          style.flexGrow = grow.toString();\n        }\n        if (shrink !== null) {\n          style.flexShrink = shrink.toString();\n        }\n      }\n    }\n\n    // Update display order\n    for (let i = 0; i < widgets.length; ++i) {\n      let widget = widgets[i];\n      widget.node.style.order = this.order ? i.toString() : '';\n    }\n  }\n\n  private _wrap = false;\n  private _minimumSpacing = 4;\n  private _justifyContent: FlexLayout.ContentJustification | null = null;\n  private _alignItems: FlexLayout.ItemAlignment | null = null;\n  private _alignContent: FlexLayout.ContentAlignment | null = null;\n  private _dirty = false;\n  private _direction: FlexLayout.Direction = 'top-to-bottom';\n  private _stretchType: FlexLayout.StretchType | null = null;\n  private _evenSizes: boolean = false;\n}\n\n/**\n * The namespace for the `FlexLayout` class statics.\n */\nexport namespace FlexLayout {\n  /**\n   * A type alias for a flex layout direction.\n   */\n  export type Direction =\n    | 'left-to-right'\n    | 'right-to-left'\n    | 'top-to-bottom'\n    | 'bottom-to-top';\n\n  /**\n   * Describes how to align children in the direction of the layout.\n   */\n  export type ContentJustification =\n    | 'start'\n    | 'end'\n    | 'center'\n    | 'space-between'\n    | 'space-around';\n\n  /**\n   * If layout is set to wrap, this defines how the wrapped lines will be\n   * aligned in relation ro each other.\n   */\n  export type ContentAlignment = ContentJustification | 'stretch';\n\n  /**\n   * Controls how to align children in the direction perpendicular to that\n   * of the layout (for a horizontal layout the will be the vertical align,\n   * and vice-versa).\n   */\n  export type ItemAlignment =\n    | 'start'\n    | 'end'\n    | 'center'\n    | 'baseline'\n    | 'stretch';\n\n  /**\n   * Describe how to stretch items to fit into flex panel:\n   * 'grow': Allow items to grow from default size\n   * 'shrink': Allow items to shrink from default size\n   * 'both': Both growing and shrinking is allowed.\n   * 'fixed': Do not allow either growing or shrinking.\n   */\n  export type StretchType = 'grow' | 'shrink' | 'both' | 'fixed';\n\n  /**\n   * An options object for initializing a flex layout.\n   */\n  export interface IOptions {\n    /**\n     * The direction of the layout.\n     *\n     * The default is `'top-to-bottom'`.\n     */\n    direction?: Direction;\n\n    /**\n     * The minimum spacing between items in the layout.\n     *\n     * The default is `4`.\n     */\n    minimumSpacing?: number;\n\n    /**\n     * Whether the layout should wrap its children if they do not all fit in\n     * column/row.\n     */\n    wrap?: boolean;\n\n    /**\n     * Controls how to align children in the direction of the layout.\n     */\n    justifyContent?: ContentJustification;\n\n    /**\n     * Controls how to align children in the direction perpendicular to that\n     * of the layout (for a horizontal layout the will be the vertical align,\n     * and vice-versa).\n     */\n    alignItems?: ItemAlignment;\n\n    /**\n     * If layout is set to wrap, this defines how the wrapped lines will be\n     * aligned in relation ro each other.\n     */\n    alignContent?: ContentAlignment;\n\n    /**\n     * Describe how to stretch items to fit into flex panel.\n     */\n    stretchType?: StretchType;\n\n    /**\n     * If set, the free space is distributed such that the\n     * children are all the same size. Defaults to `false`.\n     *\n     * ### Notes\n     * Setting this to `true` will make the layout\n     * ignore the setting of `stretchType`.\n     */\n    evenSizes?: boolean;\n  }\n\n  /**\n   * Get the flex-grow number of the widget\n   */\n  export function getGrow(widget: Widget): number | null {\n    let value = widget.node.style.flexGrow;\n    return value ? parseInt(value, 10) : null;\n  }\n\n  /**\n   * Set the flex-grow number of the widget\n   */\n  export function setGrow(widget: Widget, value: number, fit = true): void {\n    widget.node.style.flexGrow = value === null ? '' : value.toString();\n    if (fit && widget.parent) {\n      widget.parent.fit();\n    }\n  }\n\n  /**\n   * Get the flex-shrink number of the widget\n   */\n  export function getShrink(widget: Widget): number | null {\n    let value = widget.node.style.flexShrink;\n    return value ? parseInt(value, 10) : null;\n  }\n\n  /**\n   * Set the flex-shrink number of the widget\n   */\n  export function setShrink(widget: Widget, value: number | null, fit = true) {\n    widget.node.style.flexShrink = value === null ? '' : value.toString();\n    if (fit && widget.parent) {\n      widget.parent.fit();\n    }\n  }\n\n  /**\n   * Get the size basis of the widget.\n   */\n  export function getSizeBasis(widget: Widget): number | 'auto' | null {\n    let value = widget.node.style.flexBasis;\n    if (value === 'auto') {\n      return 'auto';\n    } else {\n      return value ? parseInt(value.replace('px', ''), 10) : null;\n    }\n  }\n\n  /**\n   * Set the size basis of the widget.\n   *\n   * This is the value used for calculating how to distribute positive\n   * (grow) or negatie (shrink) free space in a flex box. The value\n   * `'auto'` uses the `width`/`height` field of the box as the basis.\n   */\n  export function setSizeBasis(\n    widget: Widget,\n    value: number | 'auto' | null,\n    fit = true,\n  ) {\n    if (value === 'auto') {\n      widget.node.style.flexBasis = value as string;\n    } else if (value === null) {\n      widget.node.style.flexBasis = '';\n    } else {\n      widget.node.style.flexBasis = value.toString() + 'px';\n    }\n    if (fit && widget.parent) {\n      widget.parent.fit();\n    }\n  }\n}\n\n/**\n * The namespace for the private module data.\n */\nnamespace Private {\n  /**\n   * Test whether a direction has horizontal orientation.\n   */\n  export function isHorizontal(dir: FlexLayout.Direction): boolean {\n    return dir === 'left-to-right' || dir === 'right-to-left';\n  }\n\n  /**\n   * Transforms 'start'/'end' into 'flex-start'/'flex-end',\n   * and returns other strings untouched.\n   */\n  export function translateFlexString(value: string): string;\n  export function translateFlexString(value: null): null;\n  export function translateFlexString(value: string | null): string | null;\n  export function translateFlexString(value: string | null): string | null {\n    if (value === 'start' || value === 'end') {\n      value = 'flex-' + value;\n    }\n    return value;\n  }\n\n  /**\n   * Toggle the CSS direction class for the given widget.\n   */\n  export function toggleDirection(\n    widget: Widget,\n    dir: FlexLayout.Direction,\n  ): void {\n    widget.toggleClass(LEFT_TO_RIGHT_CLASS, dir === 'left-to-right');\n    widget.toggleClass(RIGHT_TO_LEFT_CLASS, dir === 'right-to-left');\n    widget.toggleClass(TOP_TO_BOTTOM_CLASS, dir === 'top-to-bottom');\n    widget.toggleClass(BOTTOM_TO_TOP_CLASS, dir === 'bottom-to-top');\n  }\n\n  /**\n   * Clamp a spacing value to an integer >= 0.\n   */\n  export function clampSpacing(value: number): number {\n    return Math.max(0, Math.floor(value));\n  }\n}\n","/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2016, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport type { Message } from '@lumino/messaging';\n\nimport { FlexLayout } from './flexlayout';\n\nimport { Panel, Widget } from '@lumino/widgets';\n\n/**\n * The class name added to FlexPanel instances.\n */\nconst FLEX_PANEL_CLASS = 'lm-FlexPanel';\n\n/**\n * The class name added to a FlexPanel child.\n */\nconst CHILD_CLASS = 'lm-FlexPanel-child';\n\n/**\n * A panel which arranges its widgets in a single row or column.\n *\n * Use the direction attribute to specify the layout direction.\n *\n * The sizing and flow of the children can be specified in several ways:\n *  - The container level properties `minimumSpacing`,`wrap`,\n *    `justifyContent`, `alignItems` and `alignContent`.\n *  - The stretching of the children in the layout direction either by:\n *    - Setting individual values per widget of grow/shrink/basis by\n *      `setGrow`, `setShrink` and `setSizeBasis`.\n *    - Using the convenience attributes `evenSizes` or `stretchType`.\n *  - Manually by CSS using the flexbox CSS attribute for the classes\n *    `lm-FlexPanel` and `lm-FlexPanel-child`.\n *\n * #### Notes\n * This class provides a convenience wrapper around a [[FlexLayout]].\n */\nexport class FlexPanel extends Panel {\n  /**\n   * Construct a new flex panel.\n   *\n   * @param options - The options for initializing the flex panel.\n   */\n  constructor(options: FlexPanel.IOptions = {}) {\n    super({ layout: Private.createLayout(options) });\n    if (!options.layout) {\n      if (options.minimumSpacing !== void 0) {\n        this.minimumSpacing = options.minimumSpacing;\n      }\n      if (options.direction !== void 0) {\n        this.direction = options.direction;\n      }\n    }\n    this.addClass(FLEX_PANEL_CLASS);\n  }\n\n  /**\n   * The layout direction for the flex panel.\n   */\n  get direction(): FlexPanel.Direction {\n    return this.layout.direction;\n  }\n\n  set direction(value: FlexPanel.Direction) {\n    this.layout.direction = value;\n  }\n\n  /**\n   * The minimum inter-element spacing for the flex panel.\n   */\n  get minimumSpacing(): number {\n    return this.layout.minimumSpacing;\n  }\n\n  set minimumSpacing(value: number) {\n    this.layout.minimumSpacing = value;\n  }\n\n  /**\n   * Whether the layout should wrap its children if they do not all fit in\n   * column/row.\n   */\n  get wrap(): boolean {\n    return this.layout.wrap;\n  }\n\n  set wrap(value: boolean) {\n    this.layout.wrap = value;\n  }\n\n  /**\n   * Controls how to align children in the direction of the layout.\n   */\n  get justifyContent(): FlexPanel.ContentJustification | null {\n    return this.layout.justifyContent;\n  }\n\n  set justifyContent(value: FlexPanel.ContentJustification | null) {\n    this.layout.justifyContent = value;\n  }\n\n  /**\n   * Controls how to align children in the direction perpendicular to that\n   * of the layout (for a horizontal layout the will be the vertical align,\n   * and vice-versa).\n   */\n  get alignItems(): FlexPanel.ItemAlignment | null {\n    return this.layout.alignItems;\n  }\n\n  set alignItems(value: FlexPanel.ItemAlignment | null) {\n    this.layout.alignItems = value;\n  }\n\n  /**\n   * If layout is set to wrap, this defines how the wrapped lines will be\n   * aligned in relation ro each other.\n   */\n  get alignContent(): FlexPanel.ContentAlignment | null {\n    return this.layout.alignContent;\n  }\n\n  set alignContent(value: FlexPanel.ContentAlignment | null) {\n    this.layout.alignContent = value;\n  }\n\n  get layout(): FlexLayout {\n    return super.layout as FlexLayout;\n  }\n  set layout(value: FlexLayout) {\n    super.layout = value;\n  }\n\n  /**\n   * Describe how to stretch items to fit into flex panel.\n   */\n  get stretchType(): FlexPanel.StretchType | null {\n    return this.layout.stretchType;\n  }\n\n  set stretchType(value: FlexPanel.StretchType | null) {\n    this.layout.stretchType = value;\n  }\n\n  /**\n   * If set, the free space is distributed such that the\n   * children are all the same size. Defaults to `false`.\n   *\n   * ### Notes\n   * Setting this to `true` will make the layout\n   * ignore the setting of `stretchType`.\n   */\n  get evenSizes(): boolean {\n    return this.layout.evenSizes;\n  }\n\n  set evenSizes(value: boolean) {\n    this.layout.evenSizes = value;\n  }\n\n  /**\n   * A message handler invoked on a `'child-added'` message.\n   */\n  protected onChildAdded(msg: Widget.ChildMessage): void {\n    msg.child.addClass(CHILD_CLASS);\n  }\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\n    msg.child.removeClass(CHILD_CLASS);\n  }\n\n  /**\n   * A message handler invoked on an `'after-attach'` message.\n   */\n  protected onAfterAttach(msg: Message): void {\n    super.onAfterAttach(msg);\n    this.fit();\n  }\n}\n\n/**\n * The namespace for the `FlexPanel` class statics.\n */\nexport namespace FlexPanel {\n  /**\n   * A type alias for a flex panel direction.\n   */\n  export type Direction = FlexLayout.Direction;\n  /**\n   * A type alias for a flex panel direction.\n   */\n  export type ContentJustification = FlexLayout.ContentJustification;\n  /**\n   * A type alias for a flex panel direction.\n   */\n  export type ContentAlignment = FlexLayout.ContentAlignment;\n  /**\n   * A type alias for a flex panel direction.\n   */\n  export type ItemAlignment = FlexLayout.ItemAlignment;\n  /**\n   * A type alias for a flex panel direction.\n   */\n  export type StretchType = FlexLayout.StretchType;\n\n  /**\n   * An options object for initializing a flex panel.\n   */\n  export interface IOptions extends FlexLayout.IOptions, Panel.IOptions {\n    /**\n     * The flex layout to use for the flex panel.\n     *\n     * If this is provided, the other options are ignored.\n     *\n     * The default is a new `FlexLayout`.\n     */\n    layout?: FlexLayout;\n  }\n\n  /**\n   * Get the flex panel grow factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The flex panel grow factor for the widget.\n   */\n  export function getGrow(widget: Widget): number | null {\n    return FlexLayout.getGrow(widget);\n  }\n\n  /**\n   * Set the flex panel grow factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the grow factor.\n   */\n  export function setGrow(widget: Widget, value: number): void {\n    FlexLayout.setGrow(widget, value);\n  }\n\n  /**\n   * Get the flex panel shrink factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The flex panel shrink factor for the widget.\n   */\n  export function getShrink(widget: Widget): number | null {\n    return FlexLayout.getShrink(widget);\n  }\n\n  /**\n   * Set the flex panel shrink factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the shrink factor.\n   */\n  export function setShrink(widget: Widget, value: number | null): void {\n    FlexLayout.setShrink(widget, value);\n  }\n\n  /**\n   * Get the flex panel size basis for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The flex panel size basis for the widget.\n   */\n  export function getSizeBasis(widget: Widget): number | 'auto' | null {\n    return FlexLayout.getSizeBasis(widget);\n  }\n\n  /**\n   * Set the flex panel size basis for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the size basis.\n   */\n  export function setSizeBasis(\n    widget: Widget,\n    value: number | 'auto' | null,\n  ): void {\n    FlexLayout.setSizeBasis(widget, value);\n  }\n}\n\n/**\n * The namespace for the private module data.\n */\nnamespace Private {\n  /**\n   * Create a flex layout for the given panel options.\n   */\n  export function createLayout(options: FlexPanel.IOptions): FlexLayout {\n    return options.layout || new FlexLayout(options);\n  }\n}\n"],"names":[],"sourceRoot":""}